{"version":3,"sources":["static/images/Logo_light.svg","static/icon/area_chart.svg","static/icon/bar_chart.svg","assets/icons/codicon_list-filter-icon.svg","assets/icons/icon-search.svg","static/icon/bell.svg","static/icon/moon.svg","static/icon/sun.svg","assets/icons/discord-icon.svg","assets/icons/telegram-icon.svg","assets/icons/twitter-icon.svg","assets/icons/youtube-icon.svg","static/icon/copy.svg","static/images/Logo_dark.svg","state/redux/auth/types.js","state/redux/auth/reducers.js","state/Auth.js","services/request.js","state/redux/auth/actions.js","state/redux/charts/types.js","state/redux/charts/actions.js","state/redux/auth/operations.js","state/redux/auth/selectors.js","state/redux/auth/index.js","state/redux/charts/reducers.js","utils.js","state/redux/charts/operations.js","state/redux/charts/selectors.js","state/redux/charts/index.js","state/redux/tables/types.js","state/redux/tables/reducers.js","state/redux/tables/actions.js","state/redux/tables/operations.js","state/redux/tables/selectors.js","state/redux/tables/index.js","state/redux/theme/types.js","state/redux/theme/reducers.js","state/redux/theme/selectors.js","state/redux/theme/actions.js","state/redux/theme/index.js","components/Theme/Theme.js","components/Theme/index.js","components/Styled/View.js","components/Styled/Table.js","components/types/index.js","components/Styled/Modal.js","components/View/BlockView.js","components/View/TransactionView.js","components/Styled/MultiSelect.js","components/Styled/DatePicker.js","components/Lists/Blocks.js","components/View/BlocksView.js","components/Lists/Peers.js","components/View/NetworkView.js","components/Lists/Holders.js","components/View/HoldersView.js","components/Lists/Transactions.js","components/Lists/IntegraTransaction.js","components/View/TransactionsView.js","components/Forms/ChaincodeForm.js","components/View/ChaincodeModal.js","components/Lists/Chaincodes.js","components/View/ChaincodeView.js","components/Charts/OrgPieChart.js","components/Lists/TimelineStream.js","components/Charts/ChartStats.js","components/View/DashboardView.js","components/Lists/Channels.js","components/View/ChannelsView.js","components/View/PageNotFound.js","helpers/checkEmbedRoute.js","components/Map/MapChart.js","components/Map/index.js","components/Route/Private.js","components/Route/index.js","components/Main.js","components/Styled/Select.js","components/Panels/NotificationsPanel.js","components/Forms/ChannelForm.js","components/Panels/AdminPanel.js","components/Register/Register.js","components/Register/index.js","components/Header/HeaderView.js","components/Header/index.js","components/Footer/FooterView.js","components/Footer/index.js","components/View/LandingPage.js","components/ErrorMessage.js","components/Login/Login.js","components/Login/index.js","components/HeaderPublic/HeaderPublic.js","components/HeaderPublic/index.js","components/BlockDetail/BlockDetail.js","components/BlockDetail/index.js","components/TransactionDetail/TransactionDetail.js","components/TransactionDetail/index.js","components/App/App.js","components/App/index.js","registerServiceWorker.js","index.js","state/store.js"],"names":["module","exports","LOGIN","concat","NETWORK","ERROR","REGISTER","UNREGISTER","USERLIST","initialState","user","token","error","networks","registered","authReducer","state","arguments","length","undefined","action","type","types","payload","Auth","localStorage","setItem","getItem","removeItem","superagentAbsolute","require","agentAbsolute","agent","post","uri","Promise","resolve","reject","getDomain","send","set","responseType","getToken","end","withPromiseCallback","get","response","console","status","deauthenticateUser","body","testRequest","process","productionRequest","isProduction","request","login","network","errors","register","unregister","unregistered","userlist","userlists","BLOCK_CHART_MIN","BLOCK_CHART_DAY","BLOCK_CHART_ALL","BLOCK_CHART_HOUR","TRANSACTION_CHART_MIN","TRANSACTION_CHART_HOUR","TRANSACTION_CHART_DAY","TRANSACTION_CHART_ALL","TRANSACTION_CHART_ORG","NOTIFICATION_LOAD","DASHBOARD_STATS","CHANNEL","CHANGE_CHANNEL","CHANNEL_LIST","PEER_STATUS","ERROR_MESSAGE","BLOCK_ACTIVITY","BLOCK_NOTIFICATIONS","blockPerHour","blockPerMin","blockPerDay","blockAll","channel","channelList","dashStats","notification","peerStatus","transactionByOrg","transactionPerHour","transactionPerMin","transactionPerDay","transactionAll","errorMessage","blocks","_ref","password","dispatch","then","resp","authenticateUser","errorAction","loginAction","catch","JSON","stringify","message","_ref2","networkList","networkAction","substr","registerAction","actions","unRegisterAction","userListAction","logout","blockDetail","blockHash","transactionDetail","txHash","authSelector","auth","errorSelector","networkSelector","registeredSelector","reducer","combineReducers","rows","loaded","list","channels","peers","blockActivity","row","blockNotifications","data","total","Number","page","responseToIncrementalData","res","map","record","index","preValue","count","isNaN","distructRows","exactRows","i","push","datetime","reverse","days","notify","parse","changeChannel","blockNotificationsPage","limit","blockPerHourSelector","charts","blockPerDaySelector","blockAllSelector","blockPerMinSelector","channelListSelector","currentChannelSelector","currentChannel","dashStatsSelector","notificationSelector","peerStatusSelector","transactionByOrgSelector","transactionPerHourSelector","transactionPerMinSelector","transactionPerDaySelector","transactionAllSelector","errorMessageSelector","blockActivitySelector","blockNotificationsSelector","BLOCK_LIST","CHAINCODE_LIST","CHANNELS","PEER_LIST","TRANSACTION","TRANSACTION_LIST","BLOCK_LIST_SEARCH","TRANSACTION_LIST_SEARCH","INTEGRA_LIST_SEARCH","HOLDER_LIST_SEARCH","ORGS","blockList","chaincodeList","chaincode","peerList","transaction","transactionList","blockListSearch","transactionListSearch","integraSearchList","integraList","holderData","holderList","getBlockList","getChaincodeList","getChannels","getPeerList","getTransaction","getTransactionList","getBlockListSearch","getTransactionListSearch","getIntegraListSearch","getHolderListSearch","getErroMessage","transactionId","query","integraListSearch","integraid","result","exists","e","Object","assign","Record","txhash","Key","holderListSearch","item","obj","holder","blockListSelector","tables","chaincodeListSelector","channelsSelector","peerListSelector","transactionSelector","transactionListSelector","transactionListSearchSelector","blockListSearchSelector","integraSearchListSelector","holderListSelector","CHANGE_THEME","CHANGE_MODE_TYPE","mode","modeType","modeSelector","theme","typeModeSelector","modeTypes","changeTheme","changeModeType","Theme","Component","constructor","props","super","this","loading","render","children","React","createElement","MuiThemeProvider","getTheme","CssBaseline","isDark","createMuiTheme","cssDark","cssLight","palette","modeMobile","contrastThreshold","tonalOffset","background","default","bg","primary","indigo","dark","secondary","lightBlue","main","red","toggleClass","themeSelectors","connect","withStyles","fullwidth","width","backgroundColor","display","marginLeft","marginRight","maxWidth","size","card","color","classes","className","Card","rest","clazz","classnames","table","ReactTable","getPaginationProps","pagination","shape","blockhash","string","blocknum","number","channelname","creatdt","datahash","prehash","txcount","arrayOf","createdt","chaincodename","channelName","channel_genesis_hash","path","source","txCount","version","channel_hash","createdat","id","transactions","dataMax","isRequired","displayData","chaincodeCount","latestBlock","peerCount","func","time","title","name","requests","server_hostname","creator_msp_id","endorser_msp_id","payload_proposal_hash","validation_code","tx_type","ref_tx_id","amount","textAlign","font","fontWeight","letterSpacing","paddingTop","margin","dialog","borderStyle","borderColor","borderWidth","filter","fontSize","copy","copied","copyBtn","float","cursor","textShadow","outline","position","padding","marginTop","closeBtn","height","BlockView","handleClose","onClose","Modal","modalClasses","CardTitle","FontAwesome","cubeIcon","onClick","CardBody","Table","striped","hover","responsive","CopyToClipboard","text","spin","readTheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","writeTheme","reads","writes","TransactionView","read_set","listIcon","align","style","JSONtree","JSONTree","invertTheme","write_set","defaultProps","multi","MultiSelect","date","minWidth","paddingLeft","borderRadius","ReactDatePicker","Blocks","searchBlockList","async","Date","from","toString","to","orgs","channelhash","handleDialogOpen","tid","setState","dialogOpen","handleMultiSelect","value","handleDialogClose","handleSearch","interval","clearInterval","setInterval","search","handleClearSearch","moment","err","subtract","handleDialogOpenBlockHash","find","dialogOpenBlockHash","handleDialogCloseBlockHash","handleEye","val","selection","reactTableSetup","Header","accessor","filterMethod","matchSorter","keys","threshold","rankings","SIMPLEMATCH","filterAll","hash","Cell","partialHash","href","fullHash","slice","data-command","isNull","key","overflow","whiteSpace","textOverflow","lastFullHash","options","filtered","sorted","componentDidMount","forEach","element","opts","label","componentWillReceiveProps","nextProps","componentWillUnmount","interVal","handleCustomRender","selected","join","filterElement","DatePicker","showTimeSelect","timeIntervals","dateFormat","onChange","hasSelectAll","valueRenderer","shouldToggleOnHover","selectAllLabel","onSelectedChanged","Button","searchButton","disabled","filterButton","columns","defaultPageSize","filterable","onSortedChange","onFilteredChange","minRows","showPagination","Dialog","open","fullWidth","opacity","BlocksView","View","Peers","columnHeaders","d","_d$ledger_height_unsi","ledger_height_unsigned","NetworkView","tableOperations","compose","useEffect","Link","integraId","HoldersView","Holders","Transactions","searchTransactionList","q","orgType","tableSelectors","IntegraTransaction","format","isLoader","loaderWrapper","Loader","loader","noDataText","justifyContent","alignItems","zIndex","top","bottom","right","left","TransactionsView","getTransactionInfo","match","other","URLSearchParams","useLocation","ChaincodeForm","container","header","content","form","TextField","textField","button","border","flexWrap","boxShadow","ChaincodeModal","formattedSrc","beautify","indent_size","srcHeader","code","readOnly","Chaincodes","sourceDialogOpen","sourceDialog","sourceDialogClose","ChaincodeView","getOrgColor","org","c","toUpperCase","substring","getRGBColor","str","charCodeAt","intConversion","sha256","OrgPieChart","orgDataSetup","orgData","temp","parseInt","fill","colorDefault","onRedirect","event","ResponsiveContainer","PieChart","Pie","dataKey","nameKey","cx","cy","strokeWidth","outerRadius","innerRadius","Tooltip","stroke","Row","Col","xs","sm","chartSelectors","TimelineStream","linkToDetail","window","location","origin","original","src","iCopy","alt","formatDate","loadPage","getBlockNotificationsPage","onChangePagination","Fragment","collapse","sortable","Pagination","Math","ceil","variant","renderItem","includes","PaginationItem","chartOperations","getMonth","getDate","getFullYear","ChartStats","_this","syncData","getBlocksPerHour","getBlocksPerMin","getBlocksAll","getTransactionPerHour","getTransactionPerMin","getTransactionAll","handleChartFilter","getBlocksPerDay","getTransactionPerDay","chartDataFilter","timeDataSetup","chartData","tz","guess","getChartOption","sumCount","rangeSelector","series","showInLegend","fillColor","linearGradient","x1","y1","x2","y2","stops","Highcharts","getOptions","colors","setOpacity","plotOptions","fillOpacity","credits","chart","xAxis","gridLineColor","gridLineWidth","yAxis","cat","chartRows","formatAMPM","categories","toggle","tab","activeTab","toggleSumCount","target","checked","lineChartType","chartBlocksData","chartTransData","BarChartIcon","Switch","AreaChartIcon","TabContent","TabPane","tabId","HighchartsReact","highcharts","strTime","hours","getHours","minutes","getMinutes","ampm","toLocaleDateString","DashboardView","preventDefault","typeSearch","encodeURIComponent","hasDbError","chartProps","tableTab","componentWillMount","view","FormControl","formControl","InputLabel","Select","labelId","MenuItem","onSubmit","placeholder","SearchIcon","ChartStart","FilterIcon","lg","history","marginBottom","statistic","vdivide","borderRight","avatar","node","block","center","Channels","ChannelsView","subHeader","errorIcon","checkEmbedRoute","isEmbeded","newURL","replace","url","URL","searchParams","has","mapData","handleClick","countryCode","MapChart","VectorMap","zoomOnScroll","markers","latLng","markerStyle","initial","containerStyle","onRegionClick","containerClassName","regionStyle","selectedHover","regionsSelectable","regions","values","scale","normalizeFunction","authSelectors","Private","redirect","Route","Redirect","pathname","isHeaderVisible","setHeaderVisible","useState","blocksViewProps","chaincodeViewProps","channelsViewProps","dashboardViewProps","networkViewProps","transactionsViewProps","Router","exact","routeprops","Map","PageNotFound","select","ReactSelect","NotificationsPanel","avatarIcon","Avatar","notifications","List","component","ListItem","ListItemText","Timeago","live","minPeriod","ChannelForm","fileField","helperText","spacing","unit","menu","AdminPanel","handleChange","panel","Typography","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMoreIcon","current","ExpansionPanelDetails","inputProps","FormHelperText","ownProps","Register","password2","roles","allValid","submitForm","firstname","lastname","email","userInfo","info","rolesList","isLoading","Paper","paper","MuiDialogTitle","IconButton","aria-label","closeButton","CloseIcon","required","successtext","errortext","Grid","direction","justify","breakpoints","up","flexDirection","grey","authOperations","HeaderView","isOpen","matchMedia","matches","closeToggle","getChangeChannel","handleOpen","selectedChannel","modalOpen","registerOpen","registerClose","onRegister","handleDrawOpen","drawer","notifyDrawer","notifyCount","adminDrawer","handleDrawClose","handleThemeChange","refresh","handleCheckClick","setTimeout","reload","arr","selectedValue","_nextProps$channels","handleData","notifyArr","unshift","getDashStats","getPeerStatus","getTransactionByOrg","getBlockActivityPage","all","typeMode","hostname","port","webSocketProtocol","protocol","webSocketUrl","Websocket","onMessage","bind","reconnect","Navbar","navbarHeader","expand","NavbarBrand","LogoDark","LogoLight","logo","NavbarToggler","toggleIcon","Collapse","navbar","Nav","NavLink","activeClassName","buttonOther","adminButton","onFocus","reloadChannels","Badge","badgeContent","SVG","iBell","iSun","sunIcon","iMoon","moonIcon","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","Drawer","anchor","tabIndex","role","channelLoader","themeActions","shadow","textTransform","active","active__hover","themeSwitch","bell","logoutIcon","userIcon","getBlockActivity","withRouter","FooterView","root","footer","DiscordIcon","TelegramIcon","TwitterIcon","YoutubeIcon","LandingPage","settings","dots","infinite","autoplay","autoplaySpeed","pauseOnHover","accessibility","speed","slidesToShow","slidesToScroll","logoStyle","getChannel","getChannelList","updateLoadStatus","promiseTimeout","clearTimeout","Slider","Alert","APP_USER","REACT_APP_USER_NAME","APP_PASSWORD","REACT_APP_PASSWORD","Login","newState","authEnabled","n","performLogin","autoLoginAttempted","_networks$","_networks$2","_networks$3","_networks$4","log","newUrl","redirectUrl","submit","HeaderPublic","locale","BlockDetail","params","getDetail","_res$row","md","Intl","DateTimeFormat","resolvedOptions","timeZone","Footer","jsonTheme","TransactionDetail","renderListItem","elements","mapping","v","blockid","isObject","getDetailTransaction","App","refreshComponent","document","querySelector","setAttribute","ErrorMessage","Main","app","listStyle","Boolean","store","rootReducer","reducers","createStore","applyMiddleware","thunkMiddleware","subscribe","currentURL","getState","themeSideEffect","navigator","serviceWorker","ready","registration","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.f8adfb9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo_light.00929f84.svg\";","module.exports = __webpack_public_path__ + \"static/media/area_chart.751d203a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bar_chart.c655f462.svg\";","module.exports = __webpack_public_path__ + \"static/media/codicon_list-filter-icon.f8288598.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-search.1d7268aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/bell.5e1d7c8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.de839ee0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.360c1583.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord-icon.073e3f3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram-icon.0b04ed25.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-icon.d411313b.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube-icon.55af47ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy.11d9b2b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo_dark.b75be283.svg\";","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nconst namespaces = 'auth';\n\nconst LOGIN = `${namespaces}/LOGIN`;\n\nconst NETWORK = `${namespaces}/NETWORK`;\n\nconst ERROR = `${namespaces}/ERROR`;\n\nconst REGISTER = `${namespaces}/REGISTER`;\n\nconst UNREGISTER = `${namespaces}/UNREGISTER`;\n\nconst USERLIST = `${namespaces}/USERLIST`;\n\nexport default {\n\tLOGIN,\n\tERROR,\n\tNETWORK,\n\tREGISTER,\n\tUNREGISTER,\n\tUSERLIST\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport types from './types';\n\nconst initialState = {\n\tuser: '',\n\ttoken: null,\n\terror: '',\n\tnetworks: [],\n\tregistered: ''\n};\n\n/* Reducers for Dashboard Charts */\nconst authReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.LOGIN: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload\n\t\t\t};\n\t\t}\n\t\tcase types.ERROR: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload\n\t\t\t};\n\t\t}\n\t\tcase types.NETWORK: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload\n\t\t\t};\n\t\t}\n\t\tcase types.REGISTER: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nexport default authReducer;\n","// SPDX-License-Identifier: Apache-2.0\nexport default class Auth {\n\t/**\n\t * Authenticate a user. Save a token string in Local Storage\n\t *\n\t * @param {string} token\n\t */\n\tstatic authenticateUser(token) {\n\t\tlocalStorage.setItem('token', token);\n\t}\n\n\t/**\n\t * Check if a user is authenticated - check if a token is saved in Local Storage\n\t *\n\t * @returns {boolean}\n\t */\n\tstatic isUserAuthenticated() {\n\t\treturn localStorage.getItem('token') !== null;\n\t}\n\n\t/**\n\t * Deauthenticate a user. Remove a token from Local Storage.\n\t *\n\t */\n\tstatic deauthenticateUser() {\n\t\tlocalStorage.removeItem('token');\n\t}\n\n\t/**\n\t * Get a token value.\n\t *\n\t * @returns {string}\n\t */\n\n\tstatic getToken() {\n\t\treturn localStorage.getItem('token');\n\t}\n}\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport agent from \"superagent\";\nimport Auth from \"../state/Auth\";\nconst superagentAbsolute = require(\"superagent-absolute\");\nconst agentAbsolute = agent.agent();\n\nexport const post = (uri, payload) =>\n  new Promise((resolve, reject) => {\n     let request = getDomain();\n     request\n    //agent\n      .post(uri)\n      .send(payload)\n      .set(\"Accept\", \"application/json\")\n      .responseType(\"json\")\n      .set(\"Authorization\", `bearer ${Auth.getToken()}`)\n      .end(withPromiseCallback(resolve, reject));\n  });\nexport const get = (uri) =>\n  new Promise((resolve, reject) => {\n    //uri = dominName+uri\n\n     let request = getDomain();\n     request\n    //agent\n      .get(uri)\n      .set(\"Accept\", \"application/json\")\n      .responseType(\"json\")\n      .set(\"Authorization\", `bearer ${Auth.getToken()}`)\n      .end(withPromiseCallback(resolve, reject));\n  });\n\nexport const put = (uri, payload) =>\n  new Promise((resolve, reject) => {\n    let request = getDomain();\n    request\n      .put(uri)\n      .send(payload)\n      .set(\"Accept\", \"application/json\")\n      .responseType(\"json\")\n      .set(\"Authorization\", `bearer ${Auth.getToken()}`)\n      .end(withPromiseCallback(resolve, reject));\n  });\n\nexport const deleteRequest = (uri, payload) =>\n  new Promise((resolve, reject) => {\n    let request = getDomain();\n    request\n      .delete(uri)\n      .send(payload)\n      .set(\"Accept\", \"application/json\")\n      .responseType(\"json\")\n      .set(\"Authorization\", `bearer ${Auth.getToken()}`)\n      .end(withPromiseCallback(resolve, reject));\n  });\n\nexport const withPromiseCallback = (resolve, reject) => (error, response) => {\n  if (error) {\n    console.error(error);\n    if (response && response.status === 401) {\n      Auth.deauthenticateUser();\n    }\n    reject({ error });\n  } else {\n    resolve(response.body);\n  }\n};\n\nconst getDomain = () => {\n  let testRequest = superagentAbsolute(agentAbsolute)(\n    process.env.REACT_APP_TESTNET\n    //\"http://20.40.81.0:8082\"\n  );\n\n  let productionRequest = superagentAbsolute(agentAbsolute)(\n     process.env.REACT_APP_MAINET\n    //\"http://20.51.212.115:30250\"\n    );\n\n  let isProduction = localStorage.getItem(\"modeType\");\n  \n  //Default set test network \n  let request = testRequest;\n\n  //If get boolean value\n  request = isProduction ? productionRequest : testRequest;\n  \n  //If get string value\n    if (typeof isProduction === 'string') {\n\trequest = (isProduction === \"true\" ? productionRequest : testRequest);\n  }\n\n  return request;\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport types from './types';\n\nexport const login = user => ({\n\ttype: types.LOGIN,\n\tpayload: user\n});\n\nexport const network = networks => ({\n\ttype: types.NETWORK,\n\tpayload: networks\n});\n\nexport const error = errors => ({\n\ttype: types.ERROR,\n\tpayload: errors\n});\n\nexport const register = registered => ({\n\ttype: types.REGISTER,\n\tpayload: registered\n});\n\nexport const unregister = unregistered => ({\n\ttype: types.UNREGISTER,\n\tpayload: unregistered\n});\n\nexport const userlist = userlists => ({\n\ttype: types.USERLIST,\n\tpayload: userlists\n});\n\nexport default {\n\tlogin,\n\tnetwork,\n\terror,\n\tregister,\n\tunregister,\n\tuserlist\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nconst namespaces = 'charts';\n/* Analytics Charts */\nconst BLOCK_CHART_MIN = `${namespaces}/BLOCK_CHART_MIN`;\nconst BLOCK_CHART_DAY = `${namespaces}/BLOCK_CHART_DAY`;\nconst BLOCK_CHART_ALL = `${namespaces}/BLOCK_CHART_ALL`;\nconst BLOCK_CHART_HOUR = `${namespaces}/BLOCK_CHART_HOUR`;\nconst TRANSACTION_CHART_MIN = `${namespaces}/TRANSACTION_CHART_MIN`;\nconst TRANSACTION_CHART_HOUR = `${namespaces}/TRANSACTION_CHART_HOUR`;\nconst TRANSACTION_CHART_DAY = `${namespaces}/TRANSACTION_CHART_DAY`;\nconst TRANSACTION_CHART_ALL = `${namespaces}/TRANSACTION_CHART_ALL`;\n\n/* Pie Graph */\nconst TRANSACTION_CHART_ORG = `${namespaces}/TRANSACTION_CHART_ORG`;\n\n/* Notification */\nconst NOTIFICATION_LOAD = `${namespaces}/NOTIFICATION_LOAD`;\n\n/* Dash Stats */\nconst DASHBOARD_STATS = `${namespaces}/DASHBOARD_STATS`;\n\n/* Channel  */\nconst CHANNEL = `${namespaces}/CHANNEL`;\nconst CHANGE_CHANNEL = `${namespaces}/CHANGE_CHANNEL`;\nconst CHANNEL_LIST = `${namespaces}/CHANNEL_LIST`;\n\nconst PEER_STATUS = `${namespaces}/PEER_STATUS`;\n\nconst ERROR_MESSAGE = 'ERROR_MESSAGE';\n\nconst BLOCK_ACTIVITY = `${namespaces}/BLOCK_ACTIVITY`;\n\nconst BLOCK_NOTIFICATIONS = `${namespaces}/BLOCK_NOTIFICATIONS`;\n\nexport default {\n  BLOCK_CHART_HOUR,\n  BLOCK_CHART_MIN,\n  BLOCK_CHART_DAY,\n  BLOCK_CHART_ALL,\n  CHANGE_CHANNEL,\n  CHANNEL,\n  CHANNEL_LIST,\n  DASHBOARD_STATS,\n  NOTIFICATION_LOAD,\n  PEER_STATUS,\n  TRANSACTION_CHART_HOUR,\n  TRANSACTION_CHART_MIN,\n  TRANSACTION_CHART_DAY,\n  TRANSACTION_CHART_ALL,\n  TRANSACTION_CHART_ORG,\n  ERROR_MESSAGE,\n  BLOCK_ACTIVITY,\n  BLOCK_NOTIFICATIONS\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport types from './types';\n\nconst getBlockPerHour = blockPerHour => ({\n  type: types.BLOCK_CHART_HOUR,\n  payload: { blockPerHour },\n});\nconst getErroMessage = errorMessage => ({\n  type: types.ERROR_MESSAGE,\n  payload: errorMessage,\n});\n\nconst getBlockPerMin = blockPerMin => ({\n  type: types.BLOCK_CHART_MIN,\n  payload: { blockPerMin },\n});\nconst getBlockPerDay = blockPerDay => ({\n  type: types.BLOCK_CHART_DAY,\n  payload: { blockPerDay },\n});\nconst getBlockAll = blockAll => ({\n  type: types.BLOCK_CHART_ALL,\n  payload: { blockAll },\n});\nconst getChannel = channel => ({\n  type: types.CHANNEL,\n  payload: { channel },\n});\n\nconst getChannelList = channelList => ({\n  type: types.CHANNEL_LIST,\n  payload: channelList,\n});\n\nconst getDashStats = dashStats => ({\n  type: types.DASHBOARD_STATS,\n  payload: dashStats,\n});\n\nconst getNotification = notification => ({\n  type: types.NOTIFICATION_LOAD,\n  payload: { notification },\n});\n\nconst getPeerStatus = peerStatus => ({\n  type: types.PEER_STATUS,\n  payload: peerStatus,\n});\nconst getBlockActivity = blocks => ({\n  type: types.BLOCK_ACTIVITY,\n  payload: blocks,\n});\nconst getBlockNotifications = blocks => ({\n  type: types.BLOCK_NOTIFICATIONS,\n  payload: blocks,\n});\nconst getTransactionByOrg = transactionByOrg => ({\n  type: types.TRANSACTION_CHART_ORG,\n  payload: transactionByOrg,\n});\n\nconst getTransactionPerHour = transactionPerHour => ({\n  type: types.TRANSACTION_CHART_HOUR,\n  payload: { transactionPerHour },\n});\n\nconst getTransactionPerMin = transactionPerMin => ({\n  type: types.TRANSACTION_CHART_MIN,\n  payload: { transactionPerMin },\n});\n\nconst getTransactionPerDay = transactionPerDay => ({\n  type: types.TRANSACTION_CHART_DAY,\n  payload: { transactionPerDay },\n});\n\nconst getTransactionAll = transactionAll => ({\n  type: types.TRANSACTION_CHART_ALL,\n  payload: { transactionAll },\n});\nconst updateChannel = channel => ({\n  type: types.CHANGE_CHANNEL,\n  payload: { channel },\n});\n\nexport default {\n  getBlockPerHour,\n  getBlockPerMin,\n  getBlockPerDay,\n  getBlockAll,\n  getChannel,\n  getChannelList,\n  getDashStats,\n  getNotification,\n  getPeerStatus,\n  getTransactionByOrg,\n  getTransactionPerHour,\n  getTransactionPerMin,\n  getTransactionPerDay,\n  getTransactionAll,\n  updateChannel,\n  getErroMessage,\n  getBlockActivity,\n  getBlockNotifications\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { post, get } from '../../../services/request';\n\nimport {\n\tlogin as loginAction,\n\tnetwork as networkAction,\n\tregister as registerAction,\n\tunregister as unRegisterAction,\n\tuserlist as userListAction,\n\terror as errorAction\n} from './actions';\n\nimport actions from '../charts/actions';\n\nimport Auth from '../../Auth';\n\nconst login = ({ user, password }, network) => dispatch =>\n\tpost('/auth/login', { user, password, network })\n\t\t.then(resp => {\n\t\t\tAuth.authenticateUser(resp.token);\n\t\t\tdispatch(errorAction(null));\n\t\t\tdispatch(loginAction({ user, ...resp }));\n\t\t\treturn { status: 'Success' };\n\t\t})\n\t\t.catch(error => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(error);\n\t\t\tdispatch(errorAction(JSON.stringify(error)));\n\t\t\treturn { status: 'Error', message: 'Invalid User, Password' };\n\t\t});\n\nconst network = () => dispatch =>\n\tget('/auth/networklist', {})\n\t\t.then(({ networkList }) => {\n\t\t\tdispatch(networkAction({ networks: networkList }));\n\t\t})\n\t\t.catch(error => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(error);\n\t\t\t//dispatch(actions.getErroMessage(error));\n\t\t});\n\nconst register = user => dispatch =>\n\tpost('/api/register', { ...user })\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tconst message = resp.message;\n\t\t\t\tconst msg = message.substr(6);\n\t\t\t\treturn { status: 'error', message: msg };\n\t\t\t} else {\n\t\t\t\tdispatch(registerAction({ ...user, ...resp }));\n\t\t\t\treturn { status: 'success', message: 'registered successfully!' };\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tdispatch(errorAction(error));\n\t\t});\n\nconst userlist = dispatch =>\n\tget('/api/userlist')\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tconst message = resp.message;\n\t\t\t\tconst msg = message.substr(6);\n\t\t\t\treturn { status: 'error', message: msg };\n\t\t\t} else {\n\t\t\t\tdispatch(userListAction({ ...resp }));\n\t\t\t\treturn { status: 'success', message: resp };\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tdispatch(errorAction(error));\n\t\t});\n\nconst unregister = user => dispatch =>\n\tpost('/api/unregister', { ...user })\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tconst message = resp.message;\n\t\t\t\tconst msg = message.substr(6);\n\t\t\t\treturn { status: 'error', message: msg };\n\t\t\t} else {\n\t\t\t\tdispatch(unRegisterAction({ ...user, ...resp }));\n\t\t\t\treturn { status: 'success', message: 'Unregistered successfully!' };\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tdispatch(errorAction(error));\n\t\t});\n\nconst logout = () => dispatch =>\n\tpost('/auth/logout', {})\n\t\t.then(resp => {\n\t\t\tAuth.deauthenticateUser();\n\t\t\tdispatch(errorAction(null));\n\t\t\treturn { status: 'Success' };\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tdispatch(actions.getErroMessage(error));\n\t\t\treturn { status: 'Error', message: 'Invalid User token' };\n\t\t});\n\nconst blockDetail = blockHash => dispatch =>\n\tget(`/auth/blockDetail/${blockHash}`)\n\t\t.then(resp => {\n\t\t\treturn { status: 'Success', ...resp };\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tdispatch(actions.getErroMessage(error));\n\t\t\treturn { status: 'Error', message: 'Error' };\n\t\t});\nconst transactionDetail = txHash => dispatch =>\n\tget(`/auth/txDetail/${txHash}`)\n\t\t.then(resp => {\n\t\t\treturn { status: 'Success', ...resp };\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tdispatch(actions.getErroMessage(error));\n\t\t\treturn { status: 'Error', message: 'Error' };\n\t\t});\n\nexport default {\n\tlogin,\n\tnetwork,\n\tregister,\n\tunregister,\n\tuserlist,\n\tlogout,\n\tblockDetail,\n\ttransactionDetail\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nexport const authSelector = state => state.auth.token;\n\nexport const errorSelector = state => state.auth.error;\n\nexport const networkSelector = state => state.auth.networks;\n\nexport const registeredSelector = state => state.auth.registered;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport reducer from './reducers';\nimport authTypes from './types';\n\nimport authOperations from './operations';\nimport * as authSelectors from './selectors';\nimport * as authActions from './actions';\n\nexport { authTypes };\nexport { authSelectors };\nexport { authActions };\nexport { authOperations };\n\nexport default reducer;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { combineReducers } from 'redux';\nimport types from './types';\n\n/* Reducers for Dashboard Charts */\nconst initialState = {};\n\nconst blockPerHourReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.BLOCK_CHART_HOUR: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.blockPerHour.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\nconst errorMessageReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.ERROR_MESSAGE: {\n\t\t\treturn {\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst blockPerMinReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.BLOCK_CHART_MIN: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.blockPerMin.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\nconst blockPerDayReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.BLOCK_CHART_DAY: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.blockPerDay.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst blockAllReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.BLOCK_CHART_ALL: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.blockAll.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst channelListReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.CHANNEL_LIST: {\n\t\t\treturn {\n\t\t\t\tlist: action.payload.channels,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst channelReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.CHANNEL: {\n\t\t\treturn action.payload.channel;\n\t\t}\n\t\tcase types.CHANGE_CHANNEL: {\n\t\t\treturn action.payload.channel;\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst dashStatsReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.DASHBOARD_STATS: {\n\t\t\treturn action.payload;\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\nconst blockActivityReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.BLOCK_ACTIVITY: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.row,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\nconst blockNotificationsReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.BLOCK_NOTIFICATIONS: {\n\t\t\treturn {\n\t\t\t\tdata: action.payload.row,\n\t\t\t\ttotal: Number(action.payload.total),\n\t\t\t\tpage: Number(action.payload.page),\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\nconst notificationReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.NOTIFICATION_LOAD: {\n\t\t\treturn action.payload.notification;\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst peerStatusReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.PEER_STATUS: {\n\t\t\treturn {\n\t\t\t\tlist: action.payload.peers,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst transactionByOrgReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.TRANSACTION_CHART_ORG: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst transactionPerHourReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.TRANSACTION_CHART_HOUR: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.transactionPerHour.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst transactionPerMinReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.TRANSACTION_CHART_MIN: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.transactionPerMin.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst transactionPerDayReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.TRANSACTION_CHART_DAY: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.transactionPerDay.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst transactionAllReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.TRANSACTION_CHART_ALL: {\n\t\t\treturn {\n\t\t\t\trows: action.payload.transactionAll.rows,\n\t\t\t\tloaded: true,\n\t\t\t\terrors: action.errors\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst reducer = combineReducers({\n\tblockPerHour: blockPerHourReducer,\n\tblockPerMin: blockPerMinReducer,\n\tblockPerDay: blockPerDayReducer,\n\tblockAll: blockAllReducer,\n\tchannel: channelReducer,\n\tchannelList: channelListReducer,\n\tdashStats: dashStatsReducer,\n\tnotification: notificationReducer,\n\tpeerStatus: peerStatusReducer,\n\ttransactionByOrg: transactionByOrgReducer,\n\ttransactionPerHour: transactionPerHourReducer,\n\ttransactionPerMin: transactionPerMinReducer,\n\ttransactionPerDay: transactionPerDayReducer,\n\ttransactionAll: transactionAllReducer,\n\terrorMessage: errorMessageReducer,\n\tblockActivity: blockActivityReducer,\n\tblockNotifications: blockNotificationsReducer\n});\n\nexport default reducer;\n","export const responseToIncrementalData = (res) => {\n  res.rows = res.rows.map((record, index) => {\n    const preValue = index === 0 ? 0 : res.rows[index - 1].count;\n    record.count =\n      Number(isNaN(preValue) ? 0 : preValue) + Number(record.count);\n    return record;\n  });\n};\n\nexport const distructRows = (rows) => {\n  let exactRows = [];\n  for (let i = rows.length - 1; i >= 0; i--) {\n    exactRows.push({\n      count: i === 0 ? 0 : rows[i].count - rows[i - 1].count,\n      datetime: rows[i].datetime,\n    });\n  }\n  exactRows.reverse();\n  return exactRows;\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport actions from './actions';\nimport { get } from '../../../services/request';\nimport { responseToIncrementalData } from '../../../utils';\n\n/* istanbul ignore next */\nconst blockPerHour = channel => dispatch =>\n\tget(`/api/blocksByHour/${channel}/7`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getBlockPerHour(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst blockPerMin = channel => dispatch =>\n\tget(`/api/blocksByMinute/${channel}/24`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getBlockPerMin(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\nconst blockPerDay = (channel, days) => dispatch =>\n\tget(`/api/blocksByDay/${channel}/${days}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getBlockPerDay(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\nconst blockAll = channel => dispatch => {\n\tget(`/api/getAllBlocks/${channel}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getBlockAll(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n};\n/* istanbul ignore next */\nconst changeChannel = channel => dispatch =>\n\tget(`/api/changeChannel/${channel}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.updateChannel(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst channel = () => dispatch =>\n\tget('/api/curChannel')\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.getChannel(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst channelList = () => dispatch =>\n\tget('/api/channels')\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.getChannelList(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst dashStats = channel => dispatch =>\n\tget(`/api/status/${channel}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.getDashStats(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst blockActivity = channel => dispatch =>\n\tget(`/api/blockActivity/${channel}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.getBlockActivity(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\nconst blockNotificationsPage =\n\t({ channels, limit = 10, page = 1 }) =>\n\t\tdispatch =>\n\t\t\tget(`/api/blockActivity/${channels}/${page}/${limit}`)\n\t\t\t\t.then(resp => {\n\t\t\t\t\tif (resp.status === 500) {\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (resp.status === 400) {\n\t\t\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(actions.getBlockNotifications({ ...resp, page: page }));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\n/* istanbul ignore next */\nconst notification = notification => dispatch => {\n\tconst notify = JSON.parse(notification);\n\tdispatch(actions.getNotification(notify));\n};\n\n/* istanbul ignore next */\nconst peerStatus = channel => dispatch =>\n\tget(`/api/peersStatus/${channel}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.getPeerStatus(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst transactionByOrg = channel => dispatch =>\n\tget(`/api/txByOrg/${channel}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.getTransactionByOrg(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst transactionPerHour = channel => dispatch =>\n\tget(`/api/txByHour/${channel}/7`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getTransactionPerHour(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\n/* istanbul ignore next */\nconst transactionPerMin = channel => dispatch =>\n\tget(`/api/txByMinute/${channel}/24`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getTransactionPerMin(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\nconst transactionPerDay = (channel, days) => dispatch =>\n\tget(`/api/txByDay/${channel}/${days}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getTransactionPerDay(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\nconst transactionAll = channel => dispatch =>\n\tget(`/api/getAllTx/${channel}`)\n\t\t.then(resp => {\n\t\t\tif (resp.status === 500) {\n\t\t\t\tdispatch(\n\t\t\t\t\tactions.getErroMessage(\n\t\t\t\t\t\t'500 Internal Server Error: The server has encountered an internal error and unable to complete your request'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (resp.status === 400) {\n\t\t\t\tdispatch(actions.getErroMessage(resp.error));\n\t\t\t} else {\n\t\t\t\tresponseToIncrementalData(resp);\n\t\t\t\tdispatch(actions.getTransactionAll(resp));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\nexport default {\n\tblockPerHour,\n\tblockPerMin,\n\tblockPerDay,\n\tblockAll,\n\ttransactionPerHour,\n\ttransactionPerMin,\n\ttransactionPerDay,\n\ttransactionAll,\n\ttransactionByOrg,\n\tnotification,\n\tdashStats,\n\tchannel,\n\tchannelList,\n\tchangeChannel,\n\tpeerStatus,\n\tblockActivity,\n\tblockNotificationsPage\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nexport const blockPerHourSelector = state => state.charts.blockPerHour.rows;\nexport const blockPerDaySelector = state => state.charts.blockPerDay.rows;\n// export const blockChartData = state => state.charts.blockChartData;\n// export const transChartData = state => state.charts.transChartData;\nexport const blockAllSelector = state => state.charts.blockAll.rows;\nexport const blockPerMinSelector = state => state.charts.blockPerMin.rows;\nexport const channelListSelector = state => state.charts.channelList.list;\nexport const currentChannelSelector = state => state.charts.channel.currentChannel;\nexport const dashStatsSelector = state => state.charts.dashStats;\nexport const notificationSelector = state => state.charts.notification;\nexport const peerStatusSelector = state => state.charts.peerStatus.list;\nexport const transactionByOrgSelector = state => state.charts.transactionByOrg.rows;\nexport const transactionPerHourSelector = state => state.charts.transactionPerHour.rows;\nexport const transactionPerMinSelector = state => state.charts.transactionPerMin.rows;\nexport const transactionPerDaySelector = state => state.charts.transactionPerDay.rows;\nexport const transactionAllSelector = state => state.charts.transactionAll.rows;\nexport const errorMessageSelector = state => state.charts.errorMessage.error;\nexport const blockActivitySelector = state => state.charts.blockActivity.rows;\nexport const blockNotificationsSelector = state => state.charts.blockNotifications;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport reducer from './reducers';\nimport chartOperations from './operations';\nimport chartTypes from './types';\nimport * as chartSelectors from './selectors';\n\nexport { chartOperations };\nexport { chartTypes };\nexport { chartSelectors };\n\nexport default reducer;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nconst namespaces = 'tables';\n\nconst BLOCK_LIST = `${namespaces}/BLOCK_LIST`;\nconst CHAINCODE_LIST = `${namespaces}/CHAINCODE_LIST`;\nconst CHANNELS = `${namespaces}/CHANNELS`;\nconst PEER_LIST = `${namespaces}/PEER_LIST`;\nconst TRANSACTION = `${namespaces}/TRANSACTION`;\nconst TRANSACTION_LIST = `${namespaces}/TRANSACTION_LIST`;\nconst BLOCK_LIST_SEARCH = `${namespaces}/BLOCK_LIST_SEARCH`;\nconst TRANSACTION_LIST_SEARCH = `${namespaces}/TRANSACTION_LIST_SEARCH`;\nconst INTEGRA_LIST_SEARCH = `${namespaces}/INTEGRA_LIST_SEARCH`;\nconst HOLDER_LIST_SEARCH = `${namespaces}/HOLDER_LIST_SEARCH`;\n\nconst ORGS = `${namespaces}/ORGS`;\n\nexport default {\n  BLOCK_LIST,\n  CHAINCODE_LIST,\n  CHANNELS,\n  PEER_LIST,\n  TRANSACTION,\n  TRANSACTION_LIST,\n  BLOCK_LIST_SEARCH,\n  TRANSACTION_LIST_SEARCH,\n  INTEGRA_LIST_SEARCH,\n  ORGS,\n  HOLDER_LIST_SEARCH\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { combineReducers } from 'redux';\nimport types from './types';\n\nconst initialState = {};\n\nconst blockListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.BLOCK_LIST: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst blockListSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.BLOCK_LIST_SEARCH: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst chaincodeListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHAINCODE_LIST: {\n      return {\n        rows: action.payload.chaincode,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst channelsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHANNELS: {\n      return {\n        rows: action.payload.channels,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst peerListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.PEER_LIST: {\n      return {\n        rows: action.payload.peers,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION: {\n      return {\n        transaction: action.payload.row,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION_LIST: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionListSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION_LIST_SEARCH: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n\nconst integraListSearchReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case types.INTEGRA_LIST_SEARCH: {      \n      return {\n        integraList: action.payload,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst holderListSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case types.HOLDER_LIST_SEARCH: {      \n    return {\n      holderList: action.payload,\n      loaded: true,\n      errors: action.error,\n    };\n  }\n  default: {\n    return state;\n  }\n}\n};\n\n\nconst reducer = combineReducers({\n  blockList: blockListReducer,\n  chaincodeList: chaincodeListReducer,\n  channels: channelsReducer,\n  peerList: peerListReducer,\n  transaction: transactionReducer,\n  transactionList: transactionListReducer,\n  blockListSearch: blockListSearchReducer,\n  transactionListSearch: transactionListSearchReducer,\n  integraSearchList: integraListSearchReducer,\n  holderData : holderListSearchReducer\n});\n\nexport default reducer;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport types from './types';\n\nconst getBlockList = blockList => ({\n  type: types.BLOCK_LIST,\n  payload: blockList,\n});\nconst getBlockListSearch = blockList => ({\n  type: types.BLOCK_LIST_SEARCH,\n  payload: blockList,\n});\n\nconst getChaincodeList = chaincodeList => ({\n  type: types.CHAINCODE_LIST,\n  payload: chaincodeList,\n});\n\nconst getChannels = channels => ({\n  type: types.CHANNELS,\n  payload: channels,\n});\n\nconst getPeerList = peerList => ({\n  type: types.PEER_LIST,\n  payload: peerList,\n});\n\nconst getTransaction = transaction => ({\n  type: types.TRANSACTION,\n  payload: transaction,\n});\n\nconst getTransactionList = transactionList => ({\n  type: types.TRANSACTION_LIST,\n  payload: transactionList,\n});\n\nconst getTransactionListSearch = transactionList => ({\n  type: types.TRANSACTION_LIST_SEARCH,\n  payload: transactionList,\n});\n\nconst getIntegraListSearch = integraList => ({\n  type: types.INTEGRA_LIST_SEARCH,\n  payload: integraList,\n});\n\n\nconst getHolderListSearch = holderList => ({\n  type: types.HOLDER_LIST_SEARCH,\n  payload: holderList,\n});\n\nexport default {\n  getBlockList,\n  getChaincodeList,\n  getChannels,\n  getPeerList,\n  getTransaction,\n  getTransactionList,\n  getBlockListSearch,\n  getTransactionListSearch,\n  getIntegraListSearch,\n  getHolderListSearch\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\nimport actions from \"./actions\";\nimport { get } from \"../../../services/request\";\n\n/* istanbul ignore next */\nconst blockList = (channel) => (dispatch) =>\n  get(`/api/blockAndTxList/${channel}/0`)\n    .then((resp) => {\n      if (resp.status === 500) {\n        dispatch(\n          actions.getErroMessage(\n            \"500 Internal Server Error: The server has encountered an internal error and unable to complete your request\"\n          )\n        );\n      } else if (resp.status === 400) {\n        dispatch(actions.getErroMessage(resp.error));\n      } else {\n        dispatch(actions.getBlockList(resp));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\nconst blockListSearch = (channel, query) => (dispatch) =>\n  get(`/api/blockAndTxList/${channel}/0?${query}`)\n    .then((resp) => {\n      dispatch(actions.getBlockListSearch(resp));\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n/* istanbul ignore next */\nconst chaincodeList = (channel) => (dispatch) =>\n  get(`/api/chaincode/${channel}`)\n    .then((resp) => {\n      if (resp.status === 500) {\n        dispatch(\n          actions.getErroMessage(\n            \"500 Internal Server Error: The server has encountered an internal error and unable to complete your request\"\n          )\n        );\n      } else if (resp.status === 400) {\n        dispatch(actions.getErroMessage(resp.error));\n      } else {\n        dispatch(actions.getChaincodeList(resp));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n// table channel\n\n/* istanbul ignore next */\nconst channels = () => (dispatch) =>\n  get(\"/api/channels/info\")\n    .then((resp) => {\n      if (resp.status === 500) {\n        dispatch(\n          actions.getErroMessage(\n            \"500 Internal Server Error: The server has encountered an internal error and unable to complete your request\"\n          )\n        );\n      } else if (resp.status === 400) {\n        dispatch(actions.getErroMessage(resp.error));\n      } else {\n        dispatch(actions.getChannels(resp));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n/* istanbul ignore next */\nconst peerList = (channel) => (dispatch) =>\n  get(`/api/peersStatus/${channel}`)\n    .then((resp) => {\n      if (resp.status === 500) {\n        dispatch(\n          actions.getErroMessage(\n            \"500 Internal Server Error: The server has encountered an internal error and unable to complete your request\"\n          )\n        );\n      } else if (resp.status === 400) {\n        dispatch(actions.getErroMessage(resp.error));\n      } else {\n        dispatch(actions.getPeerList(resp));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n/* istanbul ignore next */\nconst transaction = (channel, transactionId) => (dispatch) =>\n  get(`/api/transaction/${channel}/${transactionId}`)\n    .then((resp) => {\n      if (resp.status === 500) {\n        dispatch(\n          actions.getErroMessage(\n            \"500 Internal Server Error: The server has encountered an internal error and unable to complete your request\"\n          )\n        );\n      } else if (resp.status === 400) {\n        dispatch(actions.getErroMessage(resp.error));\n      } else {\n        dispatch(actions.getTransaction(resp));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\nconst transactionListSearch = (channel, query) => (dispatch) =>\n  get(`/api/txList/${channel}/0/0?${query}`)\n    .then((resp) => {\n      dispatch(actions.getTransactionListSearch(resp));\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n/* istanbul ignore next */\nconst transactionList = (channel) => (dispatch) =>\n  get(`/api/txList/${channel}/0/0/`)\n    .then((resp) => {\n      if (resp.status === 500) {\n        dispatch(\n          actions.getErroMessage(\n            \"500 Internal Server Error: The server has encountered an internal error and unable to complete your request\"\n          )\n        );\n      } else if (resp.status === 400) {\n        dispatch(actions.getErroMessage(resp.error));\n      } else {\n        dispatch(actions.getTransactionList(resp));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\nconst integraListSearch = (integraid) => (dispatch) => {\n  get(`/api/tokenhistoryforowner/${integraid}`)\n    .then((resp) => {\n      let result = [];\n      if (resp.exists) {\n        let d = resp.data;\n        d.map((e) => {\n          result.push(Object.assign(e.Record, { txhash: e.Key }));\n        });\n      }\n\n      dispatch(actions.getIntegraListSearch(result));\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst holderListSearch = (integraid) => (dispatch) => {\n  get(`/api/holders?limit=50`)\n  \t.then(resp => {\n  \t\tlet result = [];\n\t\t  result = resp.data.map(function(item) {\n\t\t\tvar obj = item.Record;\n\t\t\tfor (var holder in item) {\n\t\t\t  if (holder != \"Record\") obj[holder] = item[holder];\n\t\t\t}\n\t\t\treturn obj;\n\t\t  })\n\t\n\t  dispatch(actions.getHolderListSearch(result));\n  \t})\n  \t.catch(error => {\n  \t\tconsole.error(error);\n  \t});\n}\n\nexport default {\n  blockList,\n  chaincodeList,\n  channels,\n  peerList,\n  transaction,\n  transactionList,\n  transactionListSearch,\n  blockListSearch,\n  integraListSearch,\n  holderListSearch,\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nexport const blockListSelector = state => state.tables.blockList.rows;\nexport const chaincodeListSelector = state => state.tables.chaincodeList.rows;\nexport const channelsSelector = state => state.tables.channels.rows;\nexport const peerListSelector = state => state.tables.peerList.rows;\nexport const transactionSelector = state => state.tables.transaction.transaction;\nexport const transactionListSelector = state => state.tables.transactionList.rows;\nexport const transactionListSearchSelector = state => state.tables.transactionListSearch.rows;\nexport const blockListSearchSelector = state => state.tables.blockListSearch.rows;\nexport const integraSearchListSelector = state => state.tables.integraSearchList.integraList;\nexport const holderListSelector = state => state.tables.holderData.holderList;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport reducer from './reducers';\nimport { default as tableOperations } from './operations';\nimport { default as tableTypes } from './types';\nimport * as tableSelectors from './selectors';\n\nexport { tableOperations };\nexport { tableTypes };\nexport { tableSelectors };\n\nexport default reducer;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nconst namespaces = 'theme';\n\nconst CHANGE_THEME = `${namespaces}/CHANGE_THEME`;\nconst CHANGE_MODE_TYPE = `${namespaces}/CHANGE_MODE_TYPE`;\n\nexport default {\n  CHANGE_THEME,\n  CHANGE_MODE_TYPE\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport types from \"./types\";\n\nconst initialState = {\n  mode: \"light\",\n  modeType: \"test\",\n};\n\n/* Reducers for Dashboard Charts */\nconst themeReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case types.CHANGE_THEME: {\n      return {\n        ...state,\n        mode: action.payload.mode,\n      };\n    }\n\n    case types.CHANGE_MODE_TYPE: {\n      return {\n        ...state,\n        modeType: action.payload.mode,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default themeReducer;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nexport const modeSelector = state => state.theme.mode;\n\nexport const typeModeSelector = state => state.theme.modeTypes;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport types from './types';\n\nexport const changeTheme = mode => ({\n\ttype: types.CHANGE_THEME,\n\tpayload: { mode }\n});\n\nexport const changeModeType = mode => ({\n\ttype: types.CHANGE_MODE_TYPE,\n\tpayload: { mode }\n});\n\nexport default {\n\tchangeTheme,\n\tchangeModeType\n};\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport reducer from './reducers';\nimport themeTypes from './types';\nimport * as themeSelectors from './selectors';\nimport * as themeActions from './actions';\n\nexport { themeTypes };\nexport { themeSelectors };\nexport { themeActions };\n\nexport default reducer;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport indigo from '@material-ui/core/colors/indigo';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport red from '@material-ui/core/colors/red';\nimport { themeSelectors } from '../../state/redux/theme';\nimport '../../static/css/main.css';\nimport '../../static/css/main-dark.css';\nimport '../../static/css/media-queries.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport cssDark from './dark.json';\nimport cssLight from './light.json';\n\nclass Theme extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  render() {\n    const { mode, children } = this.props;\n    return (\n      <MuiThemeProvider theme={this.getTheme(mode)}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    );\n  }\n\n  getTheme(mode) {\n    const isDark = mode === 'dark';\n\n    return createMuiTheme({\n      ...(isDark ? cssDark : cssLight),\n      palette: {\n        modeMobile: '@media (max-width: 1200px)',\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        background: { default: (isDark ? cssDark : cssLight).bg.page },\n        primary: { ...indigo, dark: '#242036' },\n        secondary: lightBlue,\n        error: {\n          main: red[500],\n        },\n        toggleClass: true,\n        type: mode,\n        isDark\n      },\n    });\n  }\n}\n\nconst { modeSelector } = themeSelectors;\n\nexport default connect(state => ({\n  mode: modeSelector(state),\n}))(Theme);\n","// SPDX-License-Identifier: Apache-2.0\nimport Theme from './Theme';\n\nexport default Theme;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n\nconst styles = (theme) => {\n  const { type } = theme.palette;\n  const dark = type === 'dark';\n  return {\n    fullwidth: {\n      width: '100%',\n      // marginTop: 105,\n      backgroundColor: theme.bg.page,\n    },\n    display: {\n      display: 'block',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: theme.bg.size,\n      backgroundColor: dark ? 'transparent' : undefined,\n    },\n    card: {\n      color: dark ? '#ffffff' : undefined,\n      backgroundColor: dark ? '#453e68' : undefined,\n    },\n  };\n};\n\nexport const View = ({ children, classes }) => (\n  <div className={classes.fullwidth}>\n    <div className={classes.display}>\n      <Card className={classes.card}>\n        {children}\n      </Card>\n    </div>\n  </div>\n);\n\nexport default withStyles(styles)(View);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactTable from 'react-table-6';\nimport 'react-table-6/react-table.css';\nimport classnames from 'classnames';\n\n/* istanbul ignore next */\nconst styles = theme => {\n\t// const { type } = theme.palette;\n\t// const dark = type === 'dark';\n\t// return {\n\t// \t'.rt-noData': {\n\t// \t\tcolor: '#ffffff !important',\n\t// \t\tbackground: '#7165ae !important'\n\t// \t},\n\t// \ttable: {\n\t// \t\t'& .rt-tbody': {\n\t// \t\t\toverflow: 'scroll !important'\n\t// \t\t},\n\t// \t\t'& .rt-tr-group .rt-tr': {\n\t// \t\t\tpaddingTop: 30\n\t// \t\t},\n\t// \t\t'& .rt-td': {\n\t// \t\t\ttextAlign: 'center'\n\t// \t\t},\n\t// \t\t'& .rt-th input': {\n\t// \t\t\tbackground: dark ? '#7165ad !important' : undefined,\n\t// \t\t\tcolor: dark ? '#ffffff' : undefined\n\t// \t\t}\n\t// \t},\n\t// \tlist: {\n\t// \t\t'& ::-webkit-scrollbar': {\n\t// \t\t\twidth: '1em'\n\t// \t\t},\n\t// \t\t'& ::-webkit-scrollbar-track': {\n\t// \t\t\tbackground: dark ? '#443e68' : 'rgb(238, 237, 237)'\n\t// \t\t},\n\t// \t\t'& ::-webkit-scrollbar-thumb': {\n\t// \t\t\tbackground: dark ? '#6a5e9e' : 'rgb(192, 190, 190)'\n\t// \t\t},\n\t// \t\t'& ::-webkit-scrollbar-corner': {\n\t// \t\t\tbackground: dark ? '#443e68' : 'rgb(238, 237, 237)'\n\t// \t\t}\n\t// \t},\n\t// \tpagination: {\n\t// \t\t'& button': {\n\t// \t\t\tcolor: dark ? '#ffffff !important' : undefined,\n\t// \t\t\tbackgroundColor: dark ? '#5d538e !important' : undefined\n\t// \t\t},\n\t// \t\t'& button:hover': {\n\t// \t\t\tcolor: dark ? '#39c9f5 !important' : undefined,\n\t// \t\t\tbackgroundColor: dark ? '#7165ad !important' : undefined\n\t// \t\t}\n\t// \t}\n\t// };\n};\n\nconst Table = props => {\n\tconst { className = '', list = false, classes, ...rest } = props;\n\tconst clazz = classnames(\n\t\tclasses.table,\n\t\t'-striped -highlight',\n\t\tclassName,\n\t\tlist && classes.list\n\t);\n\treturn (\n\t\t<ReactTable\n\t\t\tclassName={clazz}\n\t\t\t{...rest}\n\t\t\tgetPaginationProps={() => ({ className: classes.pagination })}\n\t\t/>\n\t);\n};\n\nexport default withStyles(styles)(Table);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { arrayOf, shape, number, string, func } from 'prop-types';\n\nexport const blockHashType = shape({\n\tblockhash: string,\n\tblocknum: number,\n\tchannelname: string,\n\tcreatdt: string,\n\tdatahash: string,\n\tprehash: string,\n\ttxcount: number,\n\ttxhash: arrayOf(string)\n});\n\nexport const blockListType = arrayOf(\n\tshape({\n\t\tblockhash: string,\n\t\tblocknum: number,\n\t\tchannelname: string,\n\t\tcreatedt: string,\n\t\tdatahash: string,\n\t\tprehash: string,\n\t\ttxcount: number,\n\t\ttxhash: arrayOf(string)\n\t})\n);\n\nexport const blockPerHourType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\n\nexport const blockPerDayType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\nexport const blockAllType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\nexport const blockPerMinType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\n\nexport const chaincodeType = shape({\n\tchaincodename: string,\n\tchannelName: string,\n\tchannel_genesis_hash: string,\n\tpath: string,\n\tsource: string,\n\ttxCount: number,\n\tversion: string\n});\n\nexport const chaincodeListType = arrayOf(\n\tshape({\n\t\tchaincodename: string,\n\t\tchannelName: string,\n\t\tchannel_genesis_hash: string,\n\t\tpath: string,\n\t\tsource: string,\n\t\ttxCount: number,\n\t\tversion: string\n\t})\n);\n\nexport const channelsType = arrayOf(\n\tshape({\n\t\tblocks: number,\n\t\tchannel_hash: string,\n\t\tchannelname: string,\n\t\tcreatedat: string,\n\t\tchannel_genesis_hash: string,\n\t\tid: number,\n\t\ttransactions: number\n\t})\n);\n\nexport const chartDataType = shape({\n\tdataMax: number.isRequired,\n\tdisplayData: arrayOf(\n\t\tshape({\n\t\t\tcount: string,\n\t\t\tdatetime: string\n\t\t})\n\t).isRequired\n});\n\nexport const currentChannelType = string;\n\nexport const dashStatsType = shape({\n\tchaincodeCount: string,\n\tlatestBlock: string,\n\tpeerCount: string,\n\ttxCount: string\n});\n\nexport const getBlockListType = func;\nexport const getBlocksPerHourType = func;\nexport const getBlocksPerMinType = func;\nexport const getChaincodeListType = func;\nexport const getChangeChannelType = func;\nexport const getChannelType = func;\nexport const getChannelListType = func;\nexport const getChannelsType = func;\nexport const getDashStatsType = func;\nexport const getPeerListType = func;\nexport const getPeerStatusType = func;\nexport const getTransactionInfoType = func;\nexport const getTransactionListType = func;\nexport const getTransactionType = func;\nexport const getTransactionByOrgType = func;\nexport const getTransactionPerHourType = func;\nexport const getTransactionPerMinType = func;\n\nexport const BlockNotificationsType = arrayOf(\n\tshape({\n\t\tdata: arrayOf(\n\t\t\tshape({\n\t\t\t\tblockhash: string,\n\t\t\t\tdatahash: string,\n\t\t\t\ttime: string,\n\t\t\t\ttitle: string,\n\t\t\t\ttxcount: number,\n\t\t\t\ttype: string\n\t\t\t})\n\t\t).isRequired,\n\t\tpage: number,\n\t\ttotal: number\n\t})\n);\n\nexport const onCloseType = func;\n\nexport const peerListType = arrayOf(\n\tshape({\n\t\tchannel_genesis_hash: string,\n\t\tname: string,\n\t\trequests: string.isRequired,\n\t\tserver_hostname: string.isRequired\n\t})\n);\n\nexport const peerStatusType = arrayOf(\n\tshape({\n\t\tserver_hostname: string,\n\t\tstatus: string\n\t})\n);\n\nexport const refreshType = func;\n\nexport const transactionType = shape({\n\tchaincodename: string,\n\tchannelname: string,\n\tcreatedt: string,\n\tcreator_msp_id: string,\n\tendorser_msp_id: string,\n\tpayload_proposal_hash: string,\n\ttxhash: string,\n\ttype: string,\n\tvalidation_code: string\n});\n\nexport const transactionByOrgType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tcreator_msp_id: string\n\t})\n);\n\nexport const transactionListType = arrayOf(\n\tshape({\n\t\tchaincodename: string,\n\t\tchannelname: string,\n\t\tcreatedt: string,\n\t\tcreator_msp_id: string,\n\t\ttxhash: string,\n\t\ttype: string\n\t})\n);\n\nexport const transactionPerHourType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\n\nexport const transactionPerMinType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\n\nexport const transactionPerDayType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\n\nexport const transactionAllType = arrayOf(\n\tshape({\n\t\tcount: string,\n\t\tdatetime: string\n\t})\n);\n\nexport const integraListType = arrayOf(\n\tshape({\n\t\ttxhash: string,\n\t\ttx_type: string,\n\t\tref_tx_id: string,\n\t\tcreator_msp_id: string,\n\t\tamount: string,\n\t\tcreatedt: string\n\t})\n);","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => {\n  const { type } = theme.palette;\n  const dark = type === 'dark';\n  return {\n    title: {\n      textAlign: 'center',\n      backgroundColor: dark ? '#242036' : '#004d6b',\n      color: '#ffffff',\n      font: 'bold 30px',\n      fontWeight: 400,\n      letterSpacing: 3,\n      paddingTop: '1%',\n      margin: 0,\n    },\n    dialog: {\n      borderStyle: 'solid',\n      borderColor: '#d8d6d6',\n      borderWidth: 2,\n      filter: 'drop-shadow(0 0 0.75rem #d8d6d6)',\n      backgroundColor: dark ? '#453e68' : undefined,\n      color: dark ? '#ffffff' : undefined,\n    },\n    card: {\n      backgroundColor: dark ? '#453e68' : undefined,\n      color: dark ? '#ffffff' : undefined,\n    },\n    body: {\n      backgroundColor: dark ? '#453e68' : undefined,\n      color: dark ? '#ffffff' : undefined,\n      '& > h1': {\n        fontSize: '25pt',\n      },\n    },\n    copy: {\n      display: 'none',\n      color: dark ? '#ffffff' : undefined,\n    },\n    copied: {\n      display: 'none',\n      color: dark ? '#ffffff' : undefined,\n    },\n    copyBtn: {\n      float: 'right',\n      borderColor: 'transparent',\n      color: dark ? '#ffffff' : '#4c69c7',\n      backgroundColor: 'transparent',\n      cursor: 'pointer',\n      textShadow: '1px 1px 2px rgba(129, 129, 129, 0.753)',\n      '&:hover': {\n        color: dark ? '#ffffff' : '#2153f8',\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n      '&:hover $copy': {\n        display: 'block',\n        position: 'absolute',\n        padding: 0,\n        backgroundColor: 'transparent',\n        fontSize: 10,\n        marginTop: -10,\n      },\n      '&:active $copy': {\n        display: 'none',\n      },\n      '&:active $copied': {\n        display: 'block',\n        position: 'absolute',\n        padding: 0,\n        backgroundColor: 'transparent',\n        marginTop: -30,\n      },\n    },\n    closeBtn: {\n      float: 'right',\n      borderColor: 'transparent',\n      color: '#8b0000',\n      backgroundColor: 'transparent',\n      margin: '-12px 10px 3px 0px',\n      fontSize: 25,\n      height: 30,\n      cursor: 'pointer',\n      filter: 'drop-shadow(0 0 0.75rem #D8D6D6)',\n      '&:focus': {\n        outline: 'none',\n        color: '#c00404',\n      },\n    },\n  };\n};\n\nexport const Modal = ({ children, classes }) => children && children(classes);\n\nexport default withStyles(styles)(Modal);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FontAwesome from 'react-fontawesome';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Table, Card, CardBody, CardTitle } from 'reactstrap';\nimport { blockHashType, onCloseType } from '../types';\nimport Modal from '../Styled/Modal';\n\nconst styles = theme => ({\n\tcubeIcon: {\n\t\tcolor: '#ffffff',\n\t\tmarginRight: 20\n\t}\n});\n\nexport class BlockView extends Component {\n\thandleClose = () => {\n\t\tconst { onClose } = this.props;\n\t\tonClose();\n\t};\n\n\trender() {\n\t\tconst { blockHash, classes } = this.props;\n\t\tif (!blockHash) {\n\t\t\treturn (\n\t\t\t\t<Modal>\n\t\t\t\t\t{modalClasses => (\n\t\t\t\t\t\t<Card className={modalClasses.card}>\n\t\t\t\t\t\t\t<CardTitle className={modalClasses.title}>\n\t\t\t\t\t\t\t\t<FontAwesome name=\"cube\" />\n\t\t\t\t\t\t\t\tBlock Details\n\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t<CardBody className={modalClasses.body}>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<FontAwesome name=\"circle-o-notch\" size=\"3x\" spin />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t)}\n\t\t\t\t</Modal>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Modal>\n\t\t\t\t{modalClasses => (\n\t\t\t\t\t<div className={modalClasses.dialog}>\n\t\t\t\t\t\t<Card className={modalClasses.card}>\n\t\t\t\t\t\t\t<CardTitle className={modalClasses.title}>\n\t\t\t\t\t\t\t\t<FontAwesome name=\"cube\" className={classes.cubeIcon} />\n\t\t\t\t\t\t\t\tBlock Details\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={this.handleClose}\n\t\t\t\t\t\t\t\t\tclassName={modalClasses.closeBtn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontAwesome name=\"close\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t<CardBody className={modalClasses.body}>\n\t\t\t\t\t\t\t\t<Table striped hover responsive className=\"table-striped\">\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Channel name:</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>{blockHash.channelname}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Block Number</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>{blockHash.blocknum}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Created at</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>{blockHash.createdt}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Number of Transactions</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>{blockHash.txcount}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Block Hash</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{blockHash.blockhash}\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className={modalClasses.copyBtn}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copy}>Copy</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copied}>Copied</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={blockHash.blockhash}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"copy\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Data Hash</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{blockHash.datahash}\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className={modalClasses.copyBtn}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copy}>Copy</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copied}>Copied</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={blockHash.datahash}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"copy\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Prehash</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{blockHash.prehash}\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className={modalClasses.copyBtn}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copy}>Copy</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copied}>Copied</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={blockHash.prehash}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"copy\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nBlockView.propTypes = {\n\tblockHash: blockHashType.isRequired,\n\tonClose: onCloseType.isRequired\n};\n\nexport default withStyles(styles)(BlockView);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FontAwesome from 'react-fontawesome';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Table, Card, CardBody, CardTitle } from 'reactstrap';\nimport JSONTree from 'react-json-tree';\nimport { transactionType } from '../types';\nimport Modal from '../Styled/Modal';\n/* eslint-disable */\nconst readTheme = {\n\tbase00: '#f3f3f3',\n\tbase01: '#2e2f30',\n\tbase02: '#515253',\n\tbase03: '#737475',\n\tbase04: '#959697',\n\tbase05: '#b7b8b9',\n\tbase06: '#dadbdc',\n\tbase07: '#fcfdfe',\n\tbase08: '#e31a1c',\n\tbase09: '#e6550d',\n\tbase0A: '#dca060',\n\tbase0B: '#31a354',\n\tbase0C: '#80b1d3',\n\tbase0D: '#3182bd',\n\tbase0E: '#756bb1',\n\tbase0F: '#b15928'\n};\nconst writeTheme = {\n\tbase00: '#ffffff',\n\tbase01: '#2e2f30',\n\tbase02: '#515253',\n\tbase03: '#737475',\n\tbase04: '#959697',\n\tbase05: '#b7b8b9',\n\tbase06: '#dadbdc',\n\tbase07: '#fcfdfe',\n\tbase08: '#e31a1c',\n\tbase09: '#e6550d',\n\tbase0A: '#dca060',\n\tbase0B: '#31a354',\n\tbase0C: '#80b1d3',\n\tbase0D: '#3182bd',\n\tbase0E: '#756bb1',\n\tbase0F: '#b15928'\n};\n/* eslint-enable */\nconst styles = theme => ({\n\tlistIcon: {\n\t\tcolor: '#ffffff',\n\t\tmarginRight: 20\n\t},\n\tJSONtree: {\n\t\t'& ul': {\n\t\t\tbackgroundColor: 'transparent !important',\n\t\t\tcolor: '#fff'\n\t\t}\n\t}\n});\n\nconst reads = {\n\tcolor: '#2AA233'\n};\nconst writes = {\n\tcolor: '#DD8016'\n};\n\nexport class TransactionView extends Component {\n\thandleClose = () => {\n\t\tconst { onClose } = this.props;\n\t\tonClose();\n\t};\n\n\trender() {\n\t\tconst { transaction, classes } = this.props;\n\t\tif (transaction && !transaction.read_set) {\n\t\t\treturn (\n\t\t\t\t<Modal>\n\t\t\t\t\t{modalClasses => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<CardTitle className={modalClasses.title}>\n\t\t\t\t\t\t\t\t<FontAwesome name=\"list-alt\" className={classes.listIcon} />\n\t\t\t\t\t\t\t\tTransaction Details\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={this.handleClose}\n\t\t\t\t\t\t\t\t\tclassName={modalClasses.closeBtn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontAwesome name=\"close\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t<div align=\"center\">\n\t\t\t\t\t\t\t\t<CardBody className={modalClasses.body}>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"circle-o-notch\" size=\"3x\" spin />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Modal>\n\t\t\t);\n\t\t}\n\t\tif (transaction) {\n\t\t\treturn (\n\t\t\t\t<Modal>\n\t\t\t\t\t{modalClasses => (\n\t\t\t\t\t\t<div className={modalClasses.dialog}>\n\t\t\t\t\t\t\t<Card className={modalClasses.card}>\n\t\t\t\t\t\t\t\t<CardTitle className={modalClasses.title}>\n\t\t\t\t\t\t\t\t\t<FontAwesome name=\"list-alt\" className={classes.listIcon} />\n\t\t\t\t\t\t\t\t\tTransaction Details\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleClose}\n\t\t\t\t\t\t\t\t\t\tclassName={modalClasses.closeBtn}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"close\" />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t<CardBody className={modalClasses.body}>\n\t\t\t\t\t\t\t\t\t<Table striped hover responsive className=\"table-striped\">\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Transaction ID:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{transaction.txhash}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className={modalClasses.copyBtn}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copy}>Copy</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={modalClasses.copied}>Copied</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={transaction.txhash}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"copy\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Validation Code:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.validation_code}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Payload Proposal Hash:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.payload_proposal_hash}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Creator MSP:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.creator_msp_id}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Endorser:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.endorser_msp_id}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Chaincode Name:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.chaincodename}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Type:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.type}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Time:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.createdt}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th style={reads}>Reads:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className={classes.JSONtree}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<JSONTree\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={transaction.read_set}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttheme={readTheme}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinvertTheme={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th style={writes}>Writes:</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className={classes.JSONtree}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<JSONTree\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={transaction.write_set}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttheme={writeTheme}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinvertTheme={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Modal>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Modal>\n\t\t\t\t{modalClasses => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<CardTitle className={modalClasses.title}>\n\t\t\t\t\t\t\t<FontAwesome name=\"list-alt\" className={classes.listIcon} />\n\t\t\t\t\t\t\tTransaction Details\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={this.handleClose}\n\t\t\t\t\t\t\t\tclassName={modalClasses.closeBtn}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesome name=\"close\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<div align=\"center\">\n\t\t\t\t\t\t\t<CardBody className={modalClasses.body}>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<FontAwesome name=\"circle-o-notch\" size=\"3x\" spin />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nTransactionView.propTypes = {\n\ttransaction: transactionType\n};\n\nTransactionView.defaultProps = {\n\ttransaction: null\n};\n\nexport default withStyles(styles)(TransactionView);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport MultiSelect from '@khanacademy/react-multi-select';\nimport { withStyles } from '@material-ui/core/styles';\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tmulti: {\n\t\t\t'& .multi-select': {\n\t\t\t\tbackgroundColor: dark ? '#7165ae !important' : undefined\n\t\t\t},\n\t\t\t'& .multi-select .select-item': {\n\t\t\t\ttextAlign: 'left !important'\n\t\t\t},\n\t\t\t'& .dropdown ': {\n\t\t\t\tbackgroundColor: dark ? '#7165ae !important' : undefined\n\t\t\t},\n\t\t\t'& .dropdown-heading': {\n\t\t\t\tbackgroundColor: dark ? '#7165ae !important' : undefined,\n\t\t\t\tcolor: dark ? '#fff !important' : undefined\n\t\t\t},\n\t\t\t'& .multi-select * input': {\n\t\t\t\tbackgroundColor: dark ? '#7165ae! important' : undefined,\n\t\t\t\tcolor: dark ? '#fff !important' : undefined\n\t\t\t},\n\t\t\t'& .multi-select .select-item,.dropdown-content': {\n\t\t\t\tbackgroundColor: dark ? '#7165ae !important' : undefined,\n\t\t\t\tcolor: dark ? '#fff !important' : undefined\n\t\t\t},\n\t\t\t'& .multi-select .select-item:hover': {\n\t\t\t\tbackgroundColor: dark ? '#594aa5 !important' : undefined\n\t\t\t},\n\t\t\t'& .multi-select .select-item:visited': {\n\t\t\t\tbackgroundColor: dark ? '#594aa5 !important' : undefined\n\t\t\t},\n\t\t\t'& ::-webkit-input-placeholder ': {\n\t\t\t\t/* Chrome/Opera/Safari */\n\t\t\t\tcolor: dark ? '#fff !important' : undefined\n\t\t\t},\n\t\t\t'& .dropdown-heading-value': {\n\t\t\t\tcolor: dark ? '#fff !important' : undefined\n\t\t\t}\n\t\t}\n\t};\n};\n\nconst MultiSelectcomponent = props => {\n\tconst { classes, ...rest } = props;\n\treturn (\n\t\t<div className={classes.multi}>\n\t\t\t<MultiSelect {...rest} />\n\t\t</div>\n\t);\n};\n\nexport default withStyles(styles)(MultiSelectcomponent);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tdate: {\n\t\t\t[`\n        & .react-datepicker__input-container,\n        & .react-datepicker-wrapper *,\n        & .react-datepicker-wrapper\n      `]: {\n\t\t\t\twidth: '100% !important',\n\t\t\t\ttextAlign: 'center'\n\t\t\t},\n\t\t\t'& .react-datepicker-popper': {\n\t\t\t\tminWidth: 320\n\t\t\t},\n\t\t\t'& .react-datepicker__time-list': {\n\t\t\t\tpaddingLeft: '0px'\n\t\t\t},\n\t\t\t'& .react-datepicker__input-container *': {\n\t\t\t\tborderColor: 'rgb(211, 210, 210)',\n\t\t\t\tborderRadius: 5,\n\t\t\t\theight: 36\n\t\t\t},\n\t\t\t'& .react-datepicker': {\n\t\t\t\tbackgroundColor: dark ? '#7165ae !important' : undefined\n\t\t\t},\n\t\t\t'& .react-datepicker__time': {\n\t\t\t\tbackgroundColor: dark ? '#7165ae !important' : undefined\n\t\t\t},\n\t\t\t'& .react-datepicker__header': {\n\t\t\t\tbackgroundColor: dark ? '#564d81 !important' : undefined\n\t\t\t},\n\t\t\t'& .react-datepicker__input-container > input': {\n\t\t\t\tbackground: dark ? '#7165ae' : undefined,\n\t\t\t\tcolor: dark ? '#ffffff' : undefined\n\t\t\t}\n\t\t}\n\t};\n};\n\nconst DatePicker = props => {\n\tconst { classes, ...rest } = props;\n\treturn (\n\t\t<div className={classes.date}>\n\t\t\t<ReactDatePicker {...rest} />\n\t\t</div>\n\t);\n};\n\nexport default withStyles(styles)(DatePicker);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Button } from 'reactstrap';\nimport matchSorter from 'match-sorter';\nimport find from 'lodash/find';\nimport moment from 'moment';\nimport { isNull } from 'util';\nimport ReactTable from '../Styled/Table';\nimport BlockView from '../View/BlockView';\nimport TransactionView from '../View/TransactionView';\nimport MultiSelect from '../Styled/MultiSelect';\nimport DatePicker from '../Styled/DatePicker';\nimport {\n\tblockListType,\n\tcurrentChannelType,\n\tgetTransactionType,\n\ttransactionType\n} from '../types';\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\thash: {\n\t\t\t'&, & li, & ul': {\n\t\t\t\toverflow: 'visible !important'\n\t\t\t}\n\t\t},\n\t\tpartialHash: {\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative !important',\n\t\t\t'&:hover $fullHash': {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tposition: 'absolute !important',\n\t\t\t\tpadding: '4px 4px',\n\t\t\t\tbackgroundColor: dark ? '#5e558e' : '#000000',\n\t\t\t\tmarginTop: -30,\n\t\t\t\tmarginLeft: -215,\n\t\t\t\tborderRadius: 8,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\topacity: dark ? 1 : undefined\n\t\t\t},\n\t\t\t'&:hover $lastFullHash': {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tposition: 'absolute !important',\n\t\t\t\tpadding: '4px 4px',\n\t\t\t\tbackgroundColor: dark ? '#5e558e' : '#000000',\n\t\t\t\tmarginTop: -30,\n\t\t\t\tmarginLeft: -415,\n\t\t\t\tborderRadius: 8,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\topacity: dark ? 1 : undefined\n\t\t\t}\n\t\t},\n\t\tfullHash: {\n\t\t\tdisplay: 'none'\n\t\t},\n\t\tlastFullHash: {\n\t\t\tdisplay: 'none'\n\t\t},\n\t\tfilter: {\n\t\t\twidth: '100%',\n\t\t\ttextAlign: 'center',\n\t\t\tmargin: '0px !important'\n\t\t},\n\t\tfilterButton: {\n\t\t\topacity: 0.8,\n\t\t\tmargin: 'auto',\n\t\t\twidth: '100% !important',\n\t\t\t'margin-bottom': '4px'\n\t\t},\n\t\tsearchButton: {\n\t\t\topacity: 0.8,\n\t\t\tmargin: 'auto',\n\t\t\twidth: '100% !important',\n\t\t\tbackgroundColor: dark ? undefined : '#086108',\n\t\t\t'margin-bottom': '4px'\n\t\t},\n\t\tfilterElement: {\n\t\t\ttextAlign: 'center',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '0px !important',\n\t\t\t'& > div': {\n\t\t\t\twidth: '100% !important',\n\t\t\t\tmarginTop: 20\n\t\t\t},\n\t\t\t'& .label': {\n\t\t\t\tmargin: '25px 10px 0px 10px'\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport class Blocks extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdialogOpen: false,\n\t\t\tdialogOpenBlockHash: false,\n\t\t\terr: false,\n\t\t\tsearch: false,\n\t\t\tto: moment(),\n\t\t\torgs: [],\n\t\t\toptions: [],\n\t\t\tfiltered: [],\n\t\t\tsorted: [],\n\t\t\tfrom: moment().subtract(1, 'days'),\n\t\t\tblockHash: {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { blockList } = this.props;\n\t\tconst selection = {};\n\t\tblockList.forEach(element => {\n\t\t\tselection[element.blocknum] = false;\n\t\t});\n\t\tconst opts = [];\n\t\tthis.props.transactionByOrg.forEach(val => {\n\t\t\topts.push({ label: val.creator_msp_id, value: val.creator_msp_id });\n\t\t});\n\t\tthis.setState({ selection, options: opts });\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (\n\t\t\tthis.state.search &&\n\t\t\tnextProps.currentChannel !== this.props.currentChannel\n\t\t) {\n\t\t\tif (this.interval !== undefined) {\n\t\t\t\tclearInterval(this.interval);\n\t\t\t}\n\t\t\tthis.interval = setInterval(() => {\n\t\t\t\tthis.searchBlockList(nextProps.currentChannel);\n\t\t\t}, 60000);\n\t\t\tthis.searchBlockList(nextProps.currentChannel);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interVal);\n\t}\n\n\thandleCustomRender(selected, options) {\n\t\tif (selected.length === 0) {\n\t\t\treturn 'Select Orgs';\n\t\t}\n\t\tif (selected.length === options.length) {\n\t\t\treturn 'All Orgs Selected';\n\t\t}\n\n\t\treturn selected.join(',');\n\t}\n\n\tsearchBlockList = async channel => {\n\t\tlet query = `from=${new Date(this.state.from).toString()}&&to=${new Date(\n\t\t\tthis.state.to\n\t\t).toString()}`;\n\t\tfor (let i = 0; i < this.state.orgs.length; i++) {\n\t\t\tquery += `&&orgs=${this.state.orgs[i]}`;\n\t\t}\n\t\tlet channelhash = this.props.currentChannel;\n\t\tif (channel !== undefined) {\n\t\t\tchannelhash = channel;\n\t\t}\n\t\tawait this.props.getBlockListSearch(channelhash, query);\n\t};\n\n\thandleDialogOpen = async tid => {\n\t\tconst { getTransaction, currentChannel } = this.props;\n\t\tawait getTransaction(currentChannel, tid);\n\t\tthis.setState({ dialogOpen: true });\n\t};\n\n\thandleMultiSelect = value => {\n\t\tthis.setState({ orgs: value });\n\t};\n\n\thandleDialogClose = () => {\n\t\tthis.setState({ dialogOpen: false });\n\t};\n\n\thandleSearch = async () => {\n\t\tif (this.interval !== undefined) {\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t\tthis.interval = setInterval(() => {\n\t\t\tthis.searchBlockList();\n\t\t}, 60000);\n\t\tawait this.searchBlockList();\n\t\tthis.setState({ search: true });\n\t};\n\n\thandleClearSearch = () => {\n\t\tif (this.interval !== undefined) {\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t\tthis.setState({\n\t\t\tsearch: false,\n\t\t\tto: moment(),\n\t\t\torgs: [],\n\t\t\terr: false,\n\t\t\tfrom: moment().subtract(1, 'days')\n\t\t});\n\t};\n\n\thandleDialogOpenBlockHash = blockHash => {\n\t\tconst blockList = this.state.search\n\t\t\t? this.props.blockListSearch\n\t\t\t: this.props.blockList;\n\t\tconst data = find(blockList, item => item.blockhash === blockHash);\n\n\t\tthis.setState({\n\t\t\tdialogOpenBlockHash: true,\n\t\t\tblockHash: data\n\t\t});\n\t};\n\n\thandleDialogCloseBlockHash = () => {\n\t\tthis.setState({ dialogOpenBlockHash: false });\n\t};\n\n\thandleEye = (row, val) => {\n\t\tconst { selection } = this.state;\n\t\tconst data = Object.assign({}, selection, { [row.index]: !val });\n\t\tthis.setState({ selection: data });\n\t};\n\n\treactTableSetup = classes => [\n\t\t{\n\t\t\tHeader: 'Block Number',\n\t\t\taccessor: 'blocknum',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['blocknum'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true,\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\tHeader: 'Channel Name',\n\t\t\taccessor: 'channelname',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['channelname'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Number of Tx',\n\t\t\taccessor: 'txcount',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['txcount'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true,\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\tHeader: 'Data Hash',\n\t\t\taccessor: 'datahash',\n\t\t\tclassName: classes.hash,\n\t\t\tCell: row => (\n\t\t\t\t<span>\n\t\t\t\t\t<ul className={classes.partialHash} href=\"#/blocks\">\n\t\t\t\t\t\t<div className={classes.fullHash} id=\"showTransactionId\">\n\t\t\t\t\t\t\t{row.value}\n\t\t\t\t\t\t</div>{' '}\n\t\t\t\t\t\t{row.value.slice(0, 6)} {!row.value ? '' : '... '}\n\t\t\t\t\t</ul>{' '}\n\t\t\t\t</span>\n\t\t\t),\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['datahash'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Block Hash',\n\t\t\taccessor: 'blockhash',\n\t\t\tclassName: classes.hash,\n\t\t\tCell: row => (\n\t\t\t\t<span>\n\t\t\t\t\t<a\n\t\t\t\t\t\tdata-command=\"block-partial-hash\"\n\t\t\t\t\t\tclassName={classes.partialHash}\n\t\t\t\t\t\tonClick={() => this.handleDialogOpenBlockHash(row.value)}\n\t\t\t\t\t\thref=\"#/blocks\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={classes.fullHash} id=\"showTransactionId\">\n\t\t\t\t\t\t\t{row.value}\n\t\t\t\t\t\t</div>{' '}\n\t\t\t\t\t\t{row.value.slice(0, 6)} {!row.value ? '' : '... '}\n\t\t\t\t\t</a>{' '}\n\t\t\t\t</span>\n\t\t\t),\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['blockhash'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Previous Hash',\n\t\t\taccessor: 'prehash',\n\t\t\tclassName: classes.hash,\n\t\t\tCell: row => (\n\t\t\t\t<span>\n\t\t\t\t\t<ul\n\t\t\t\t\t\tclassName={classes.partialHash}\n\t\t\t\t\t\tonClick={() => this.handleDialogOpenBlockHash(row.value)}\n\t\t\t\t\t\thref=\"#/blocks\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={classes.fullHash} id=\"showTransactionId\">\n\t\t\t\t\t\t\t{row.value}\n\t\t\t\t\t\t</div>{' '}\n\t\t\t\t\t\t{row.value.slice(0, 6)} {!row.value ? '' : '... '}\n\t\t\t\t\t</ul>{' '}\n\t\t\t\t</span>\n\t\t\t),\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['prehash'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true,\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\tHeader: 'Transactions',\n\t\t\taccessor: 'txhash',\n\t\t\tclassName: classes.hash,\n\t\t\tCell: row => (\n\t\t\t\t<ul>\n\t\t\t\t\t{!isNull(row.value)\n\t\t\t\t\t\t? row.value.map(tid => (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={tid}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\t\t\t\t\ttextOverflow: 'ellipsis'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclassName={classes.partialHash}\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleDialogOpen(tid)}\n\t\t\t\t\t\t\t\t\t\thref=\"#/blocks\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.lastFullHash} id=\"showTransactionId\">\n\t\t\t\t\t\t\t\t\t\t\t{tid}\n\t\t\t\t\t\t\t\t\t\t</div>{' '}\n\t\t\t\t\t\t\t\t\t\t{tid.slice(0, 6)} {!tid ? '' : '... '}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: 'null'}\n\t\t\t\t</ul>\n\t\t\t),\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['txhash'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Size(KB)',\n\t\t\taccessor: 'blksize',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['blksize'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true,\n\t\t\twidth: 150\n\t\t}\n\t];\n\n\trender() {\n\t\tconst blockList = this.state.search\n\t\t\t? this.props.blockListSearch\n\t\t\t: this.props.blockList;\n\t\tconst { transaction, classes } = this.props;\n\t\tconst { blockHash, dialogOpen, dialogOpenBlockHash } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={`${classes.filter} row searchRow`}>\n\t\t\t\t\t<div className={`${classes.filterElement} col-md-3`}>\n\t\t\t\t\t\t<label className=\"label\">From</label>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tid=\"from\"\n\t\t\t\t\t\t\tselected={this.state.from}\n\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\ttimeIntervals={5}\n\t\t\t\t\t\t\tdateFormat=\"LLL\"\n\t\t\t\t\t\t\tonChange={date => {\n\t\t\t\t\t\t\t\tif (date > this.state.to) {\n\t\t\t\t\t\t\t\t\tthis.setState({ err: true, from: date });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({ from: date, err: false });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`${classes.filterElement} col-md-3`}>\n\t\t\t\t\t\t<label className=\"label\">To</label>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tid=\"to\"\n\t\t\t\t\t\t\tselected={this.state.to}\n\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\ttimeIntervals={5}\n\t\t\t\t\t\t\tdateFormat=\"LLL\"\n\t\t\t\t\t\t\tonChange={date => {\n\t\t\t\t\t\t\t\tif (date > this.state.from) {\n\t\t\t\t\t\t\t\t\tthis.setState({ to: date, err: false });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({ err: true, to: date });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"validator \">\n\t\t\t\t\t\t\t\t{this.state.err && (\n\t\t\t\t\t\t\t\t\t<span className=\" label border-red\">\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\tFrom date should be less than To date\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-2\">\n\t\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\t\thasSelectAll\n\t\t\t\t\t\t\tvalueRenderer={this.handleCustomRender}\n\t\t\t\t\t\t\tshouldToggleOnHover={false}\n\t\t\t\t\t\t\tselected={this.state.orgs}\n\t\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\t\tselectAllLabel=\"All Orgs\"\n\t\t\t\t\t\t\tonSelectedChanged={value => {\n\t\t\t\t\t\t\t\tthis.handleMultiSelect(value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-2\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.searchButton}\n\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\tdisabled={this.state.err}\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tawait this.handleSearch();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-1\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.filterButton}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.handleClearSearch();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-1\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.filterButton}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tonClick={() => this.setState({ filtered: [], sorted: [] })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClear Filter\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ReactTable\n\t\t\t\t\tdata={blockList}\n\t\t\t\t\tcolumns={this.reactTableSetup(classes)}\n\t\t\t\t\tdefaultPageSize={10}\n\t\t\t\t\tlist\n\t\t\t\t\tfilterable\n\t\t\t\t\tsorted={this.state.sorted}\n\t\t\t\t\tonSortedChange={sorted => {\n\t\t\t\t\t\tthis.setState({ sorted });\n\t\t\t\t\t}}\n\t\t\t\t\tfiltered={this.state.filtered}\n\t\t\t\t\tonFilteredChange={filtered => {\n\t\t\t\t\t\tthis.setState({ filtered });\n\t\t\t\t\t}}\n\t\t\t\t\tminRows={0}\n\t\t\t\t\tstyle={{ height: '750px' }}\n\t\t\t\t\tshowPagination={!(blockList.length < 5)}\n\t\t\t\t/>\n\n\t\t\t\t<Dialog\n\t\t\t\t\topen={dialogOpen}\n\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t>\n\t\t\t\t\t<TransactionView\n\t\t\t\t\t\ttransaction={transaction}\n\t\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog\n\t\t\t\t\topen={dialogOpenBlockHash}\n\t\t\t\t\tonClose={this.handleDialogCloseBlockHash}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t>\n\t\t\t\t\t<BlockView\n\t\t\t\t\t\tblockHash={blockHash}\n\t\t\t\t\t\tonClose={this.handleDialogCloseBlockHash}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nBlocks.propTypes = {\n\tblockList: blockListType.isRequired,\n\tcurrentChannel: currentChannelType.isRequired,\n\tgetTransaction: getTransactionType.isRequired,\n\ttransaction: transactionType\n};\n\nBlocks.defaultProps = {\n\ttransaction: null\n};\n\nexport default withStyles(styles)(Blocks);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport View from '../Styled/View';\nimport Blocks from '../Lists/Blocks';\nimport {\n  blockListType,\n  currentChannelType,\n  getTransactionType,\n  transactionType,\n} from '../types';\n\nexport const BlocksView = ({\n  blockList,\n  currentChannel,\n  getTransaction,\n  transaction,\n  blockListSearch,\n  getBlockListSearch,\n  transactionByOrg,\n}) => (\n  <View>\n    <Blocks\n      blockList={blockList}\n      currentChannel={currentChannel}\n      transaction={transaction}\n      getTransaction={getTransaction}\n      transactionByOrg={transactionByOrg}\n      blockListSearch={blockListSearch}\n      getBlockListSearch={getBlockListSearch}\n    />\n  </View>\n);\n\nBlocksView.propTypes = {\n  blockList: blockListType.isRequired,\n  currentChannel: currentChannelType.isRequired,\n  getTransaction: getTransactionType.isRequired,\n  transaction: transactionType,\n};\n\nBlocksView.defaultProps = {\n  transaction: null,\n};\n\nexport default BlocksView;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport matchSorter from 'match-sorter';\nimport ReactTable from '../Styled/Table';\nimport { peerListType } from '../types';\n\n/* istanbul ignore next */\nconst Peers = ({ peerList }) => {\n\tconst columnHeaders = [\n\t\t{\n\t\t\tHeader: 'Peer Name',\n\t\t\taccessor: 'server_hostname',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['server_hostname'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Request Url',\n\t\t\taccessor: 'requests',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['requests'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Peer Type',\n\t\t\taccessor: 'peer_type',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['peer_type'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'MSPID',\n\t\t\taccessor: 'mspid',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['mspid'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Ledger Height',\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\tHeader: 'High',\n\t\t\t\t\taccessor: 'ledger_height_high',\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_high'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Low',\n\t\t\t\t\taccessor: 'ledger_height_low',\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_low'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Unsigned',\n\t\t\t\t\tid: 'ledger_height_unsigned',\n\t\t\t\t\taccessor: d => d.ledger_height_unsigned?.toString(),\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_unsigned'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<ReactTable\n\t\t\t\tdata={peerList ? peerList : []}\n\t\t\t\tcolumns={columnHeaders}\n\t\t\t\tdefaultPageSize={5}\n\t\t\t\tfilterable\n\t\t\t\tminRows={0}\n\t\t\t\tshowPagination={!(peerList && peerList.length < 5)}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nPeers.propTypes = {\n\tpeerList: peerListType.isRequired\n};\n\nexport default Peers;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport View from '../Styled/View';\nimport Peers from '../Lists/Peers';\nimport { peerListType } from '../types';\n\nexport const NetworkView = ({ peerList }) => (\n  <View>\n    <Peers peerList={peerList} />\n  </View>\n);\n\nNetworkView.propTypes = {\n  peerList: peerListType.isRequired,\n};\n\nexport default NetworkView;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport matchSorter from \"match-sorter\";\nimport ReactTable from \"../Styled/Table\";\nimport { connect } from \"react-redux\";\nimport compose from \"recompose/compose\";\nimport { tableOperations, tableSelectors } from \"../../state/redux/tables\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Link, Redirect } from 'react-router-dom'\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tpartialHash: {\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative !important',\n\t\t\t'&:hover $fullHash': {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tposition: 'absolute !important',\n\t\t\t\tpadding: '4px 4px',\n\t\t\t\tbackgroundColor: dark ? '#5e558e' : '#000000',\n\t\t\t\tmarginTop: -30,\n\t\t\t\t// marginLeft: -215,\n\t\t\t\tborderRadius: 8,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\topacity: dark ? 1 : undefined\n\t\t\t},\n\t\t\t'&:hover $lastFullHash': {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tposition: 'absolute !important',\n\t\t\t\tpadding: '4px 4px',\n\t\t\t\tbackgroundColor: dark ? '#5e558e' : '#000000',\n\t\t\t\tmarginTop: -30,\n\t\t\t\t// marginLeft: -415,\n\t\t\t\tborderRadius: 8,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\topacity: dark ? 1 : undefined,\n        textAlign: 'center',\n\t\t\t}\n\t\t},\n\t\tfullHash: {\n\t\t\tdisplay: 'none'\n\t\t},\n\t\tfilter: {\n\t\t\twidth: '100%',\n\t\t\ttextAlign: 'center',\n\t\t\tmargin: '0px !important'\n\t\t},\n\t};\n};\nconst {\n    holderListSearch\n  } = tableOperations;\n  \nconst Holders = (props) => {\n    const { holderListSearch, holderData, classes } = props\n\n  useEffect(() => {\n    holderListSearch()\n  },[])\n\n  const onRedirect = (integraId) => {\n   // alert(integraId)\n  }\n\n  const columnHeaders = [\n    {\n      Header: \"Integra Id\",\n      accessor: \"integraId\",\n      Cell: row => (\n\t\t\t\t<span>\n          <Link to={`/transactions?type=integra_id&q=40865eaf-d4b3-0154-a6c8-29f635af2145`} >\n\t\t\t\t\t<a\n\t\t\t\t\t\tdata-command=\"block-partial-hash\"\n\t\t\t\t\t\tclassName={classes.partialHash}\n\t\t\t\t\t\tonClick={() => onRedirect(row.value)}\n\t\t\t\t\t\t//href=\"#/transactions?type=integra_id&q=40865eaf-d4b3-0154-a6c8-29f635af2145\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={classes.fullHash} id=\"showTransactionId\">\n\t\t\t\t\t\t\t{row.row && row.row.integraId}\n\t\t\t\t\t\t</div>{' '}\n\t\t\t\t\t\t{row.row && row.row.integraId}\n\t\t\t\t\t</a>{' '}\n          </Link>\n\t\t\t\t</span>\n\t\t\t),\n\n      filterMethod: (filter, rows) =>{\n        return matchSorter(\n          rows,\n          filter.value,\n          { keys: [\"integraId\"] },\n          { threshold: matchSorter.rankings.SIMPLEMATCH }\n        )},\n      filterAll: true,\n    },\n    {\n      Header: \"Amount\",\n      accessor: \"tokenAmount\",\n      filterMethod: (filter, rows) =>{\n         return matchSorter(\n          rows,\n          filter.value,\n          { keys: [\"tokenAmount\"] },\n          { threshold: matchSorter.rankings.SIMPLEMATCH }\n        )},\n      filterAll: true,\n    },\n    {\n      Header: \"Tx Id\",\n      accessor: \"transactionId\",\n      filterMethod: (filter, rows) =>\n        matchSorter(\n          rows,\n          filter.value,\n          { keys: [\"transactionId]\"] },\n          { threshold: matchSorter.rankings.SIMPLEMATCH }\n        ),\n      filterAll: true,\n    },\n    {\n      Header: \"Timestamp\",\n      accessor: \"creationDate\",\n      filterMethod: (filter, rows) =>\n        matchSorter(\n          rows,\n          filter.value,\n          { keys: [\"creationDate\"] },\n          { threshold: matchSorter.rankings.SIMPLEMATCH }\n        ),\n      filterAll: true,\n    }  \n  ];\n\n  return (\n    <div>\n      <ReactTable\n        data={holderData}\n        columns={columnHeaders}\n        defaultPageSize={5}\n        filterable\n        minRows={0}\n        //showPagination={!(peerList.length < 5)}\n      />\n    </div>\n  );\n};\n\n\nconst mapStateToProps = (state) => {\n  return {\n    holderData: state.tables.holderData.holderList,\n    loaded: state.tables.holderData.loaded,\n  };\n};\n\nexport default compose(\n  withStyles(styles),\n\tconnect(\n\t\tmapStateToProps,\n\t\t{\n\t\t\tholderListSearch: holderListSearch,\n\t\t}\n\t)\n)(Holders);","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport View from '../Styled/View';\nimport Holders from '../Lists/Holders';\nimport { peerListType } from '../types';\n\nexport const HoldersView = ({ peerList }) => (\n  <View>\n    <Holders peerList={peerList} />\n  </View>\n);\n\nHoldersView.propTypes = {\n  peerList: peerListType.isRequired,\n};\n\nexport default HoldersView;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Button } from 'reactstrap';\nimport matchSorter from 'match-sorter';\nimport moment from 'moment';\nimport ReactTable from '../Styled/Table';\nimport TransactionView from '../View/TransactionView';\nimport DatePicker from '../Styled/DatePicker';\nimport MultiSelect from '../Styled/MultiSelect';\n\nimport {\n\tcurrentChannelType,\n\tgetTransactionType,\n\ttransactionListType,\n\ttransactionType\n} from '../types';\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\thash: {\n\t\t\t'&, & li': {\n\t\t\t\toverflow: 'visible !important'\n\t\t\t}\n\t\t},\n\t\tpartialHash: {\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative !important',\n\t\t\t'&:hover $lastFullHash': {\n\t\t\t\tmarginLeft: -400\n\t\t\t},\n\t\t\t'&:hover $fullHash': {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tposition: 'absolute !important',\n\t\t\t\tpadding: '4px 4px',\n\t\t\t\tbackgroundColor: dark ? '#5e558e' : '#000000',\n\t\t\t\tmarginTop: -30,\n\t\t\t\tmarginLeft: -215,\n\t\t\t\tborderRadius: 8,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\topacity: dark ? 1 : undefined\n\t\t\t}\n\t\t},\n\t\tfullHash: {\n\t\t\tdisplay: 'none'\n\t\t},\n\t\tlastFullHash: {},\n\t\tfilter: {\n\t\t\twidth: '100%',\n\t\t\ttextAlign: 'center',\n\t\t\tmargin: '0px !important'\n\t\t},\n\t\tfilterButton: {\n\t\t\topacity: 0.8,\n\t\t\tmargin: 'auto',\n\t\t\twidth: '100% !important',\n\t\t\t'margin-bottom': '4px'\n\t\t},\n\t\tsearchButton: {\n\t\t\topacity: 0.8,\n\t\t\tmargin: 'auto',\n\t\t\twidth: '100% !important',\n\t\t\tbackgroundColor: dark ? undefined : '#086108',\n\t\t\t'margin-bottom': '4px'\n\t\t},\n\t\tfilterElement: {\n\t\t\ttextAlign: 'center',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '0px !important',\n\t\t\t'& > div': {\n\t\t\t\twidth: '100% !important',\n\t\t\t\tmarginTop: 20\n\t\t\t},\n\t\t\t'& .label': {\n\t\t\t\tmargin: '25px 10px 0px 10px'\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport class Transactions extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdialogOpen: false,\n\t\t\tsearch: false,\n\t\t\tto: moment(),\n\t\t\torgs: [],\n\t\t\toptions: [],\n\t\t\tfiltered: [],\n\t\t\tsorted: [],\n\t\t\terr: false,\n\t\t\tfrom: moment().subtract(1, 'days')\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { transactionList, type, q, orgType } = this.props;\n\t\tconst selection = {};\n\t\ttransactionList.forEach(element => {\n\t\t\tselection[element.blocknum] = false;\n\t\t});\n\t\tconst opts = [];\n\t\tthis.props.transactionByOrg.forEach(val => {\n\t\t\topts.push({ label: val.creator_msp_id, value: val.creator_msp_id });\n\t\t});\n\t\tthis.setState({ selection, options: opts });\n\n\t\t// get search params\n\t\tif(type && q) {\n\t\t\t// this.searchTransactionList()\n\t\t\tlet filtered = [{\n\t\t\t\tid: type,\n\t\t\t\tvalue: q\n\t\t\t}]\n\t\t\tthis.setState({filtered})\n\t\t}\n\n\t\tif(orgType) { \n\t\t\tthis.setState({ orgs: [orgType] }, () => {\n\t\t\t//\tconsole.log(\" block 22222222222222 ==========>  \", this.state.orgs)\n\t\t\t//\tthis.handleSearch()\n\t\t\t})\n\t\t}\n\n\t\t\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (\n\t\t\tthis.state.search &&\n\t\t\tnextProps.currentChannel !== this.props.currentChannel\n\t\t) {\n\t\t\tif (this.interval !== undefined) {\n\t\t\t\tclearInterval(this.interval);\n\t\t\t}\n\t\t\tthis.interval = setInterval(() => {\n\t\t\t\tthis.searchTransactionList(nextProps.currentChannel);\n\t\t\t}, 60000);\n\t\t\tthis.searchTransactionList(nextProps.currentChannel);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interVal);\n\t}\n\n\thandleCustomRender(selected, options) {\n\t\tif (selected.length === 0) {\n\t\t\treturn 'Select Orgs';\n\t\t}\n\t\tif (selected.length === options.length) {\n\t\t\treturn 'All Orgs Selected';\n\t\t}\n\n\t\treturn selected.join(',');\n\t}\n\n\tsearchTransactionList = async channel => {\n\t\tlet query = `from=${new Date(this.state.from).toString()}&&to=${new Date(\n\t\t\tthis.state.to\n\t\t).toString()}`;\n\t\tfor (let i = 0; i < this.state.orgs.length; i++) {\n\t\t\tquery += `&&orgs=${this.state.orgs[i]}`;\n\t\t}\n\t\tlet channelhash = this.props.currentChannel;\n\t\tif (channel !== undefined) {\n\t\t\tchannelhash = channel;\n\t\t}\n\t\tawait this.props.getTransactionListSearch(channelhash, query);\n\t};\n\n\thandleDialogOpen = async tid => {\n\t\tconst { currentChannel, getTransaction } = this.props;\n\t\tawait getTransaction(currentChannel, tid);\n\t\tthis.setState({ dialogOpen: true });\n\t};\n\n\thandleMultiSelect = value => {\n\t\tthis.setState({ orgs: value });\n\t};\n\n\thandleDialogClose = () => {\n\t\tthis.setState({ dialogOpen: false });\n\t};\n\n\thandleSearch = async () => {\n\t\tif (this.interval !== undefined) {\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t\tthis.interval = setInterval(() => {\n\t\t\tthis.searchTransactionList();\n\t\t}, 60000);\n\t\tawait this.searchTransactionList();\n\t\tthis.setState({ search: true });\n\t};\n\n\thandleClearSearch = () => {\n\t\tthis.setState({\n\t\t\tsearch: false,\n\t\t\tto: moment(),\n\t\t\torgs: [],\n\t\t\terr: false,\n\t\t\tfrom: moment().subtract(1, 'days')\n\t\t});\n\t};\n\n\thandleEye = (row, val) => {\n\t\tconst { selection } = this.state;\n\t\tconst data = Object.assign({}, selection, { [row.index]: !val });\n\t\tthis.setState({ selection: data });\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst columnHeaders = [\n\t\t\t{\n\t\t\t\tHeader: 'Creator',\n\t\t\t\taccessor: 'creator_msp_id',\n\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\trows,\n\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t{ keys: ['creator_msp_id'] },\n\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t),\n\t\t\t\tfilterAll: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Channel Name',\n\t\t\t\taccessor: 'channelname',\n\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\trows,\n\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t{ keys: ['channelname'] },\n\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t),\n\t\t\t\tfilterAll: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Tx Id',\n\t\t\t\taccessor: 'txhash',\n\t\t\t\tclassName: classes.hash,\n\t\t\t\tCell: row => (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tdata-command=\"transaction-partial-hash\"\n\t\t\t\t\t\t\tclassName={classes.partialHash}\n\t\t\t\t\t\t\tonClick={() => this.handleDialogOpen(row.value)}\n\t\t\t\t\t\t\thref=\"#/transactions\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={classes.fullHash} id=\"showTransactionId\">\n\t\t\t\t\t\t\t\t{row.value}\n\t\t\t\t\t\t\t</div>{' '}\n\t\t\t\t\t\t\t{row.value.slice(0, 6)}\n\t\t\t\t\t\t\t{!row.value ? '' : '... '}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</span>\n\t\t\t\t),\n\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\trows,\n\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t{ keys: ['txhash'] },\n\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t),\n\t\t\t\tfilterAll: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Type',\n\t\t\t\taccessor: 'type',\n\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\trows,\n\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t{ keys: ['type'] },\n\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t),\n\t\t\t\tfilterAll: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Chaincode',\n\t\t\t\taccessor: 'chaincodename',\n\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\trows,\n\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t{ keys: ['chaincodename'] },\n\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t),\n\t\t\t\tfilterAll: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Timestamp',\n\t\t\t\taccessor: 'createdt',\n\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\trows,\n\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t{ keys: ['createdt'] },\n\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t),\n\t\t\t\tfilterAll: true\n\t\t\t}\n\t\t];\n\n\t\tconst transactionList = this.state.search\n\t\t\t? this.props.transactionListSearch\n\t\t\t: this.props.transactionList;\n\t\tconst { transaction } = this.props;\n\t\tconst { dialogOpen } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={`${classes.filter} row searchRow`}>\n\t\t\t\t\t<div className={`${classes.filterElement} col-md-3`}>\n\t\t\t\t\t\t<label className=\"label\">From</label>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tid=\"from\"\n\t\t\t\t\t\t\tselected={this.state.from}\n\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\ttimeIntervals={5}\n\t\t\t\t\t\t\tdateFormat=\"LLL\"\n\t\t\t\t\t\t\tonChange={date => {\n\t\t\t\t\t\t\t\tif (date > this.state.to) {\n\t\t\t\t\t\t\t\t\tthis.setState({ err: true, from: date });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({ from: date, err: false });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`${classes.filterElement} col-md-3`}>\n\t\t\t\t\t\t<label className=\"label\">To</label>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tid=\"to\"\n\t\t\t\t\t\t\tselected={this.state.to}\n\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\ttimeIntervals={5}\n\t\t\t\t\t\t\tdateFormat=\"LLL\"\n\t\t\t\t\t\t\tonChange={date => {\n\t\t\t\t\t\t\t\tif (date > this.state.from) {\n\t\t\t\t\t\t\t\t\tthis.setState({ to: date, err: false });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({ err: true, to: date });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"validator \">\n\t\t\t\t\t\t\t\t{this.state.err && (\n\t\t\t\t\t\t\t\t\t<span className=\" label border-red\">\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\tFrom date should be less than To date\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-2\">\n\t\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\t\thasSelectAll\n\t\t\t\t\t\t\tvalueRenderer={this.handleCustomRender}\n\t\t\t\t\t\t\tshouldToggleOnHover={false}\n\t\t\t\t\t\t\tselected={this.state.orgs}\n\t\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\t\tselectAllLabel=\"All Orgs\"\n\t\t\t\t\t\t\tonSelectedChanged={value => {\n\t\t\t\t\t\t\t\tthis.handleMultiSelect(value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-2\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.searchButton}\n\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\tdisabled={this.state.err}\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tawait this.handleSearch();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-1\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.filterButton}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.handleClearSearch();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-1\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.filterButton}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tonClick={() => this.setState({ filtered: [], sorted: [] })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClear Filter\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ReactTable\n\t\t\t\t\tdata={transactionList}\n\t\t\t\t\tcolumns={columnHeaders}\n\t\t\t\t\tdefaultPageSize={10}\n\t\t\t\t\tlist\n\t\t\t\t\tfilterable\n\t\t\t\t\tsorted={this.state.sorted}\n\t\t\t\t\tonSortedChange={sorted => {\n\t\t\t\t\t\tthis.setState({ sorted });\n\t\t\t\t\t}}\n\t\t\t\t\tfiltered={this.state.filtered}\n\t\t\t\t\tonFilteredChange={filtered => {\n\t\t\t\t\t\tthis.setState({ filtered });\n\t\t\t\t\t}}\n\t\t\t\t\tminRows={0}\n\t\t\t\t\tstyle={{ height: '750px' }}\n\t\t\t\t\tshowPagination={!(transactionList?.length < 5)}\n\t\t\t\t/>\n\n\t\t\t\t<Dialog\n\t\t\t\t\topen={dialogOpen}\n\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t>\n\t\t\t\t\t<TransactionView\n\t\t\t\t\t\ttransaction={transaction}\n\t\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTransactions.propTypes = {\n\tcurrentChannel: currentChannelType.isRequired,\n\tgetTransaction: getTransactionType.isRequired,\n\ttransaction: transactionType,\n\ttransactionList: transactionListType.isRequired\n};\n\nTransactions.defaultProps = {\n\ttransaction: null\n};\n\nexport default withStyles(styles)(Transactions);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Button } from \"reactstrap\";\nimport matchSorter from \"match-sorter\";\nimport moment from \"moment\";\nimport ReactTable from \"../Styled/Table\";\nimport TransactionView from \"../View/TransactionView\";\nimport DatePicker from \"../Styled/DatePicker\";\nimport MultiSelect from \"../Styled/MultiSelect\";\nimport Loader from \"react-loader-spinner\";\n\nimport { tableOperations, tableSelectors } from \"../../state/redux/tables\";\nimport { connect } from \"react-redux\";\nimport compose from \"recompose/compose\";\n\nimport {\n  currentChannelType,\n  getTransactionType,\n  transactionListType,\n  transactionType,\n} from \"../types\";\n\nconst { integraListSearch } = tableOperations;\n\nconst { integraSearchListSelector } = tableSelectors;\n\n/* istanbul ignore next */\nconst styles = (theme) => {\n  const { type } = theme.palette;\n  const dark = type === \"dark\";\n  return {\n    hash: {\n      \"&, & li\": {\n        overflow: \"visible !important\",\n      },\n    },\n    partialHash: {\n      textAlign: \"center\",\n      position: \"relative !important\",\n      \"&:hover $lastFullHash\": {\n        marginLeft: -400,\n      },\n      \"&:hover $fullHash\": {\n        display: \"block\",\n        position: \"absolute !important\",\n        padding: \"4px 4px\",\n        backgroundColor: dark ? \"#5e558e\" : \"#000000\",\n        marginTop: -30,\n        marginLeft: -215,\n        borderRadius: 8,\n        color: \"#ffffff\",\n        opacity: dark ? 1 : undefined,\n      },\n    },\n    fullHash: {\n      display: \"none\",\n    },\n    lastFullHash: {},\n    filter: {\n      width: \"100%\",\n      textAlign: \"center\",\n      margin: \"0px !important\",\n    },\n    filterButton: {\n      opacity: 0.8,\n      margin: \"auto\",\n      width: \"100% !important\",\n      \"margin-bottom\": \"4px\",\n    },\n    searchButton: {\n      opacity: 0.8,\n      margin: \"auto\",\n      width: \"100% !important\",\n      backgroundColor: dark ? undefined : \"#086108\",\n      \"margin-bottom\": \"4px\",\n    },\n    filterElement: {\n      textAlign: \"center\",\n      display: \"flex\",\n      padding: \"0px !important\",\n      \"& > div\": {\n        width: \"100% !important\",\n        marginTop: 20,\n      },\n      \"& .label\": {\n        margin: \"25px 10px 0px 10px\",\n      },\n    },\n    loaderWrapper: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"fixed\",\n      zIndex: 9999,\n      height: \"100%\",\n      background: \"#040404\",\n      opacity: \"0.8\",\n      overflow: \"hidden\",\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n    },\n  };\n};\n\nexport class IntegraTransaction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      search: false,\n      to: moment(),\n      orgs: [],\n      options: [],\n      filtered: [],\n      sorted: [],\n      err: false,\n      from: moment().subtract(1, \"days\"),\n      isLoader: false,\n    };\n  }\n\n  componentDidMount() {\n    const { transactionList, type, q } = this.props;\n    //Api Call\n    this.setState({ isLoader: true });\n    this.props.integraListSearch(q);\n    // const selection = {};\n    // transactionList.forEach((element) => {\n    //   selection[element.blocknum] = false;\n    // });\n    // const opts = [];\n    // this.props.transactionByOrg.forEach((val) => {\n    //   opts.push({ label: val.creator_msp_id, value: val.creator_msp_id });\n    // });\n    // this.setState({ selection, options: opts });\n\n    // // get search params\n    // if (type && q) {\n    //   // this.searchTransactionList()\n    //   let filtered = [\n    //     {\n    //       id: type,\n    //       value: q,\n    //     },\n    //   ];\n    //   this.setState({ filtered });\n    // }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.state.search &&\n      nextProps.currentChannel !== this.props.currentChannel\n    ) {\n      if (this.interval !== undefined) {\n        clearInterval(this.interval);\n      }\n      this.interval = setInterval(() => {\n        this.searchTransactionList(nextProps.currentChannel);\n      }, 60000);\n      this.searchTransactionList(nextProps.currentChannel);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interVal);\n  }\n\n  handleCustomRender(selected, options) {\n    if (selected.length === 0) {\n      return \"Select Orgs\";\n    }\n    if (selected.length === options.length) {\n      return \"All Orgs Selected\";\n    }\n\n    return selected.join(\",\");\n  }\n\n  searchTransactionList = async (channel) => {\n\n    let query = `from=${moment(this.state.from).format(\n      \"YYYY-MM-DDTHH:mm:ss\"\n    )}&to=${moment(this.state.to).format(\"YYYY-MM-DDTHH:mm:ss\")}`;\n    // for (let i = 0; i < this.state.orgs.length; i++) {\n    //   query += `&&orgs=${this.state.orgs[i]}`;\n    // }\n    // let channelhash = this.props.currentChannel;\n    // if (channel !== undefined) {\n    //   channelhash = channel;\n    // }\n    let data = `${this.props.q}?${query}`;\n    //Api Call\n    this.props.integraListSearch(data);\n    // await this.props.getTransactionListSearch(channelhash, query);\n  };\n\n  handleDialogOpen = async (tid) => {\n    const { currentChannel, getTransaction } = this.props;\n    await getTransaction(currentChannel, tid);\n    this.setState({ dialogOpen: true });\n  };\n\n  handleMultiSelect = (value) => {\n    this.setState({ orgs: value });\n  };\n\n  handleDialogClose = () => {\n    this.setState({ dialogOpen: false });\n  };\n\n  handleSearch = async () => {\n    if (this.interval !== undefined) {\n      clearInterval(this.interval);\n    }\n    this.interval = setInterval(() => {\n      this.searchTransactionList();\n    }, 60000);\n    await this.searchTransactionList();\n    this.setState({ search: true });\n  };\n\n  handleClearSearch = () => {\n    this.setState({\n      search: false,\n      to: moment(),\n      orgs: [],\n      err: false,\n      from: moment().subtract(1, \"days\"),\n    });\n  };\n\n  handleEye = (row, val) => {\n    const { selection } = this.state;\n    const data = Object.assign({}, selection, { [row.index]: !val });\n    this.setState({ selection: data });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const columnHeaders = [\n      {\n        Header: \"Tx Id\",\n        accessor: \"txhash\",\n        className: classes.hash,\n        Cell: (row) => (\n          <span>\n            <a\n              data-command=\"transaction-partial-hash\"\n              className={classes.partialHash}\n              onClick={() => this.handleDialogOpen(row.value)}\n              href=\"javascript:void(0);\"\n            >\n              <div className={classes.fullHash} id=\"showTransactionId\">\n                {row.value}\n              </div>{\" \"}\n              {row.value.slice(0, 20)}\n              {!row.value ? \"\" : \"... \"}\n            </a>\n          </span>\n        ),\n        filterMethod: (filter, rows) =>\n          matchSorter(\n            rows,\n            filter.value,\n            { keys: [\"txhash\"] },\n            { threshold: matchSorter.rankings.SIMPLEMATCH }\n          ),\n        filterAll: true,\n      },\n      {\n        Header: \"Tx Type\",\n        accessor: \"action\",\n        filterMethod: (filter, rows) =>\n          matchSorter(\n            rows,\n            filter.value,\n            { keys: [\"action\"] },\n            { threshold: matchSorter.rankings.SIMPLEMATCH }\n          ),\n        filterAll: true,\n      },\n      {\n        Header: \"Ref Id\",\n        accessor: \"refTxId\",\n        Cell: (row) => (\n          <span>\n            <a\n              data-command=\"transaction-partial-hash\"\n              className={classes.partialHash}\n              onClick={() => this.handleDialogOpen(row.row.txhash)}\n              href=\"javascript:void(0);\"\n            >\n               <div className={classes.fullHash} id=\"showTransactionId\">\n                {row.value}\n              </div>{\" \"}\n              {row.value}\n              {!row.value ? \"\" : \"... \"}\n            </a>\n          </span>\n        ),\n\n        filterMethod: (filter, rows) =>\n          matchSorter(\n            rows,\n            filter.value,\n            { keys: [\"refTxId\"] },\n            { threshold: matchSorter.rankings.SIMPLEMATCH }\n          ),\n        filterAll: true,\n      },\n\n      {\n        Header: \"Amount\",\n        accessor: \"amount\",\n        filterMethod: (filter, rows) =>\n          matchSorter(\n            rows,\n            filter.value,\n            { keys: [\"amount\"] },\n            { threshold: matchSorter.rankings.SIMPLEMATCH }\n          ),\n        filterAll: true,\n      },\n      // {\n      //     Header: 'Chaincode',\n      //     accessor: 'chaincodename',\n      //     filterMethod: (filter, rows) =>\n      //         matchSorter(\n      //             rows,\n      //             filter.value,\n      //             { keys: ['chaincodename'] },\n      //             { threshold: matchSorter.rankings.SIMPLEMATCH }\n      //         ),\n      //     filterAll: true\n      // },\n      {\n        Header: \"Timestamp\",\n        accessor: \"creationDate\",\n        filterMethod: (filter, rows) =>\n          matchSorter(\n            rows,\n            filter.value,\n            { keys: [\"creationDate\"] },\n            { threshold: matchSorter.rankings.SIMPLEMATCH }\n          ),\n        filterAll: true,\n      },\n    ];\n\n    const transactionList = this.state.search\n      ? this.props.transactionListSearch\n      : this.props.transactionList;\n    const { transaction } = this.props;\n    const { dialogOpen } = this.state;\n    return (\n      <div>\n        {!this.props.loaded ? (\n          <div className={classes.loaderWrapper}>\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#005069\"\n              height={70}\n              width={70}\n              className={classes.loader}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div className={`${classes.filter} row searchRow`}>\n          <div className={`${classes.filterElement} col-md-3`}>\n            <label className=\"label\">From</label>\n            <DatePicker\n              id=\"from\"\n              selected={this.state.from}\n              showTimeSelect\n              timeIntervals={5}\n              dateFormat=\"LLL\"\n              onChange={(date) => {\n                if (date > this.state.to) {\n                  this.setState({ err: true, from: date });\n                } else {\n                  this.setState({ from: date, err: false });\n                }\n              }}\n            />\n          </div>\n          <div className={`${classes.filterElement} col-md-3`}>\n            <label className=\"label\">To</label>\n            <DatePicker\n              id=\"to\"\n              selected={this.state.to}\n              showTimeSelect\n              timeIntervals={5}\n              dateFormat=\"LLL\"\n              onChange={(date) => {\n                if (date > this.state.from) {\n                  this.setState({ to: date, err: false });\n                } else {\n                  this.setState({ err: true, to: date });\n                }\n              }}\n            >\n              <div className=\"validator \">\n                {this.state.err && (\n                  <span className=\" label border-red\">\n                    {\" \"}\n                    From date should be less than To date\n                  </span>\n                )}\n              </div>\n            </DatePicker>\n          </div>\n          {/* <div className=\"col-md-2\">\n                            <MultiSelect\n                                hasSelectAll\n                                valueRenderer={this.handleCustomRender}\n                                shouldToggleOnHover={false}\n                                selected={this.state.orgs}\n                                options={this.state.options}\n                                selectAllLabel=\"All Orgs\"\n                                onSelectedChanged={value => {\n                                    this.handleMultiSelect(value);\n                                }}\n                            />\n                        </div> */}\n          <div className=\"col-md-2\">\n            <Button\n              className={classes.searchButton}\n              color=\"success\"\n              disabled={this.state.err}\n              onClick={async () => {\n                await this.handleSearch();\n              }}\n            >\n              Search\n            </Button>\n          </div>\n          <div className=\"col-md-2\">\n            <Button\n              className={classes.filterButton}\n              color=\"primary\"\n              onClick={() => {\n                this.handleClearSearch();\n              }}\n            >\n              Reset\n            </Button>\n          </div>\n          <div className=\"col-md-2\">\n            <Button\n              className={classes.filterButton}\n              color=\"secondary\"\n              onClick={() => this.setState({ filtered: [], sorted: [] })}\n            >\n              Clear Filter\n            </Button>\n          </div>\n        </div>\n        <ReactTable\n          // data={transactionList}\n          data={this.props.integraList}\n          columns={columnHeaders}\n          noDataText={\n            this.props.integraList && this.props.integraList <= 0\n              ? `No rows found`\n              : \"\"\n          }\n          defaultPageSize={10}\n          list\n          // filterable\n          sorted={this.state.sorted}\n          onSortedChange={(sorted) => {\n            this.setState({ sorted });\n          }}\n          filtered={this.state.filtered}\n          onFilteredChange={(filtered) => {\n            this.setState({ filtered });\n          }}\n          minRows={0}\n          style={{ height: \"750px\" }}\n          showPagination={!(transactionList?.length < 5)}\n        />\n\n        <Dialog\n          open={dialogOpen}\n          onClose={this.handleDialogClose}\n          fullWidth\n          maxWidth=\"md\"\n        >\n          <TransactionView\n            transaction={transaction}\n            onClose={this.handleDialogClose}\n          />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nIntegraTransaction.propTypes = {\n  currentChannel: currentChannelType.isRequired,\n  getTransaction: getTransactionType.isRequired,\n  transaction: transactionType,\n  transactionList: transactionListType.isRequired,\n};\n\nIntegraTransaction.defaultProps = {\n  transaction: null,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    integraList: state.tables.integraSearchList.integraList,\n    loaded: state.tables.integraSearchList.loaded,\n  };\n};\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, {\n    integraListSearch: integraListSearch,\n  })\n)(IntegraTransaction);\n\n//export default connect(null, mapDispatchToProps)(withStyles(styles)(IntegraTransaction));\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from \"react\";\nimport View from \"../Styled/View\";\nimport Transactions from \"../Lists/Transactions\";\nimport IntegraTransaction from \"../Lists/IntegraTransaction\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  currentChannelType,\n  getTransactionType,\n  getTransactionInfoType,\n  getTransactionListType,\n  transactionType,\n  transactionListType,\n} from \"../types\";\n\nexport const TransactionsView = ({\n  currentChannel,\n  getTransaction,\n  getTransactionInfo,\n  getTransactionList,\n  transaction,\n  transactionList,\n  getTransactionListSearch,\n  transactionByOrg,\n  transactionListSearch,\n  match,\n  ...other\n}) => {\n  const query = new URLSearchParams(useLocation().search);\n\n  return (\n    <View>\n\t\t{query.get(\"type\") === 'integra_id' ? \n\t\t<IntegraTransaction\n        currentChannel={currentChannel}\n        transactionList={transactionList}\n        getTransactionList={getTransactionList}\n        transaction={transaction}\n        transactionByOrg={transactionByOrg}\n        getTransactionInfo={getTransactionInfo}\n        getTransaction={getTransaction}\n        getTransactionListSearch={getTransactionListSearch}\n        transactionListSearch={transactionListSearch}\n        type={query.get(\"type\")}\n        q={query.get(\"q\")}\n        orgType= {query.get(\"orgType\")}\n      />\n\t\t:\n      <Transactions\n        currentChannel={currentChannel}\n        transactionList={transactionList}\n        getTransactionList={getTransactionList}\n        transaction={transaction}\n        transactionByOrg={transactionByOrg}\n        getTransactionInfo={getTransactionInfo}\n        getTransaction={getTransaction}\n        getTransactionListSearch={getTransactionListSearch}\n        transactionListSearch={transactionListSearch}\n        type={query.get(\"type\")}\n        q={query.get(\"q\")}\n        orgType= {query.get(\"orgType\")}\n      />\n      \n  }\n    </View>\n  );\n};\n\nTransactionsView.propTypes = {\n  currentChannel: currentChannelType.isRequired,\n  getTransaction: getTransactionType.isRequired,\n  getTransactionInfo: getTransactionInfoType.isRequired,\n  getTransactionList: getTransactionListType.isRequired,\n  transaction: transactionType.isRequired,\n  transactionList: transactionListType.isRequired,\n};\n\nexport default TransactionsView;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'reactstrap';\n\nconst styles = (theme) => {\n  const { type } = theme.palette;\n  const dark = type === 'dark';\n  return {\n    container: {\n      border: '3px solid #afeeee',\n    },\n    header: {\n      backgroundColor: '#24272a',\n      color: '#f7f7f7',\n      font: 'bold',\n    },\n    form: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      width: '100%',\n    },\n    button: {\n      backgroundColor: '#afeeee',\n      fontSize: 16,\n      color: 'black',\n      padding: '14px 70px',\n      margin: 'auto',\n      display: 'block',\n      border: 'none',\n      boxShadow: '0px 9px 10px  rgba(0,0,0,0.05)',\n    },\n    card: {\n      backgroundColor: dark ? '#453e68' : undefined,\n      color: dark ? '#ffffff' : undefined,\n    },\n    content: {\n      backgroundColor: dark ? '#453e68' : undefined,\n      color: dark ? '#ffffff' : undefined,\n      '& > h1': {\n        fontSize: '25pt',\n      },\n    },\n  };\n};\n\nclass ChaincodeForm extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      // TODO : Replace with liform-react\n      <div className={`${classes.card} ${classes.container}`}>\n        <div className={classes.header} align=\"center\">\n          <h3>\nAdd Chaincode\n          </h3>\n        </div>\n        <div className={classes.content}>\n          <form className={classes.form}>\n            <TextField\n              id=\"file-path\"\n              label=\"File Path\"\n              className={classes.textField}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"chaincode-name\"\n              label=\"Chaincode Name\"\n              className={classes.textField}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"version-number\"\n              label=\"Version Number\"\n              className={classes.textField}\n              margin=\"normal\"\n            />\n            <Button className={classes.button}>\nSubmit\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ChaincodeForm);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport beautify from 'js-beautify';\nimport FontAwesome from 'react-fontawesome';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport { chaincodeType } from '../types';\nimport Modal from '../Styled/Modal';\n\nconst styles = (theme) => {\n  const { type } = theme.palette;\n  const dark = type === 'dark';\n  return {\n    code: {\n      display: 'block',\n      marginLeft: '1%',\n      marginRight: '1%',\n      width: '98%',\n      height: 600,\n      backgroundColor: dark ? '#443e68' : undefined,\n      color: dark ? '#ffffff' : undefined,\n    },\n    cubeIcon: {\n      color: '#ffffff',\n      marginRight: 20,\n    },\n    source: {\n      '& ::-webkit-scrollbar': {\n        width: '1em',\n      },\n      '& ::-webkit-scrollbar-track': {\n        background: dark ? '#8375c4' : 'rgb(238, 237, 237)',\n      },\n      '& ::-webkit-scrollbar-thumb': {\n        background: dark ? '#6a5e9e' : 'rgb(192, 190, 190)',\n      },\n      '& ::-webkit-scrollbar-corner': {\n        background: dark ? '#443e68' : 'rgb(238, 237, 237)',\n      },\n    },\n  };\n};\nexport class ChaincodeModal extends Component {\n  handleClose = () => {\n    const { onClose } = this.props;\n    onClose();\n  };\n\n  render() {\n    const { chaincode, classes } = this.props;\n\n    const formattedSrc = beautify(chaincode.source, {\n      indent_size: 4,\n    });\n    const srcHeader = `${chaincode.chaincodename} ${chaincode.version}`;\n\n    return (\n      <Modal>\n        {modalClasses => (\n          <div className={classes.source}>\n            <div className={modalClasses.dialog}>\n              <Card className={modalClasses.card}>\n                <CardTitle className={modalClasses.title}>\n                  <FontAwesome name=\"file-text\" className={classes.cubeIcon} />\n                  {srcHeader}\n                  <button\n                    type=\"button\"\n                    onClick={this.handleClose}\n                    className={modalClasses.closeBtn}\n                  >\n                    <FontAwesome name=\"close\" />\n                  </button>\n                </CardTitle>\n                <CardBody className={modalClasses.body}>\n                  <textarea\n                    className={classes.code}\n                    value={formattedSrc}\n                    readOnly\n                  />\n                </CardBody>\n              </Card>\n            </div>\n          </div>\n        )}\n      </Modal>\n    );\n  }\n}\n\nChaincodeModal.propTypes = {\n  chaincode: chaincodeType,\n};\n\nChaincodeModal.defaultProps = {\n  chaincode: null,\n};\n\nexport default withStyles(styles)(ChaincodeModal);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport matchSorter from 'match-sorter';\nimport Dialog from '@material-ui/core/Dialog';\nimport ReactTable from '../Styled/Table';\nimport ChaincodeForm from '../Forms/ChaincodeForm';\nimport ChaincodeModal from '../View/ChaincodeModal';\nimport { chaincodeListType } from '../types';\n\nconst styles = theme => ({\n\thash: {\n\t\twhiteSpace: 'nowrap',\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t\tmaxWidth: 60,\n\t\tletterSpacing: '2px'\n\t}\n});\n\nexport class Chaincodes extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdialogOpen: false,\n\t\t\tsourceDialog: false,\n\t\t\tchaincode: {}\n\t\t};\n\t}\n\n\thandleDialogOpen = () => {\n\t\tthis.setState({ dialogOpen: true });\n\t};\n\n\thandleDialogClose = () => {\n\t\tthis.setState({ dialogOpen: false });\n\t};\n\n\tsourceDialogOpen = chaincode => {\n\t\tthis.setState({ chaincode });\n\t\tthis.setState({ sourceDialog: true });\n\t};\n\n\tsourceDialogClose = () => {\n\t\tthis.setState({ sourceDialog: false });\n\t};\n\n\treactTableSetup = classes => [\n\t\t{\n\t\t\tHeader: 'Chaincode Name',\n\t\t\taccessor: 'chaincodename',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['chaincodename'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Channel Name',\n\t\t\taccessor: 'channelName',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['channelName'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Path',\n\t\t\taccessor: 'path',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['path'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Transaction Count',\n\t\t\taccessor: 'txCount',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['txCount'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Version',\n\t\t\taccessor: 'version',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['version'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t}\n\t];\n\n\trender() {\n\t\tconst { chaincodeList, classes } = this.props;\n\t\tconst { dialogOpen, sourceDialog, chaincode } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* <Button className=\"button\" onClick={() => this.handleDialogOpen()}>\n          Add Chaincode\n          </Button> */}\n\t\t\t\t<ReactTable\n\t\t\t\t\tdata={chaincodeList}\n\t\t\t\t\tcolumns={this.reactTableSetup(classes)}\n\t\t\t\t\tdefaultPageSize={5}\n\t\t\t\t\tfilterable\n\t\t\t\t\tminRows={0}\n\t\t\t\t\tshowPagination={!(chaincodeList.length < 5)}\n\t\t\t\t/>\n\t\t\t\t<Dialog\n\t\t\t\t\topen={dialogOpen}\n\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t>\n\t\t\t\t\t<ChaincodeForm />\n\t\t\t\t</Dialog>\n\t\t\t\t<Dialog\n\t\t\t\t\topen={sourceDialog}\n\t\t\t\t\tonClose={this.sourceDialogClose}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t>\n\t\t\t\t\t<ChaincodeModal\n\t\t\t\t\t\tchaincode={chaincode}\n\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\tonClose={this.sourceDialogClose}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nChaincodes.propTypes = {\n\tchaincodeList: chaincodeListType.isRequired\n};\n\nexport default withStyles(styles)(Chaincodes);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport View from '../Styled/View';\nimport Chaincodes from '../Lists/Chaincodes';\nimport { chaincodeListType } from '../types';\n\nexport const ChaincodeView = ({ chaincodeList }) => (\n  <View>\n    <Chaincodes chaincodeList={chaincodeList} />\n  </View>\n);\n\nChaincodeView.propTypes = {\n  chaincodeList: chaincodeListType.isRequired,\n};\n\nexport default ChaincodeView;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { themeSelectors } from '../../state/redux/theme';\nimport { withStyles } from '@material-ui/core/styles';\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\nimport { sha256 } from 'js-sha256';\nimport { transactionByOrgType } from '../types';\nimport { Col, Row } from 'reactstrap';\n\n/* istanbul ignore next */\nconst styles = theme => {\n\treturn {};\n};\n\nfunction intConversion(str) {\n\tlet value = 0;\n\tfor (let i = 0; i < str.length; i++) {\n\t\tvalue = str.charCodeAt(i) + ((value << 5) - value);\n\t}\n\treturn value;\n}\n\nfunction getRGBColor(i) {\n\tconst c = (i & 0x00ffffff).toString(16).toUpperCase();\n\treturn '#' + '00000'.substring(0, 6 - c.length) + c;\n}\n\nfunction convertSha256(str) {\n\tconst shaString = sha256(str);\n\treturn shaString;\n}\n\nexport function getOrgColor(org) {\n\treturn getRGBColor(intConversion(convertSha256(org)));\n}\n\nexport class OrgPieChart extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t// Data dumy\n\t\t\tdata: [\n\t\t\t\t{ value: 7, name: 'Org1MSP', fill: '#096AF5' },\n\t\t\t\t{ value: 3, name: 'integra-awsMSP', fill: '#FFA73F' },\n\t\t\t\t{ value: 5, name: 'integra-gcpMSP', fill: '#FF6B6B' },\n\t\t\t\t{ value: 2, name: 'SotatekMSP', fill: '#37C882' },\n\t\t\t\t{ value: 3, name: 'OrdererMSP', fill: '#3855B3' }\n\t\t\t],\n\t\t\t// Color default for chart\n\t\t\tcolorDefault: [\n\t\t\t\t'#096AF5',\n\t\t\t\t'#FFA73F',\n\t\t\t\t'#FF6B6B',\n\t\t\t\t'#37C882',\n\t\t\t\t'#3855B3',\n\t\t\t\t'#46bdc7',\n\t\t\t\t'#34a753',\n\t\t\t\t'#ea4333'\n\t\t\t]\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { transactionByOrg } = this.props;\n\t\tthis.orgDataSetup(transactionByOrg);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { transactionByOrg } = this.props;\n\t\tif (nextProps.transactionByOrg !== transactionByOrg) {\n\t\t\tthis.orgDataSetup(nextProps.transactionByOrg);\n\t\t}\n\t}\n\n\torgDataSetup = orgData => {\n\t\tconst temp = [];\n\t\torgData.forEach((element, index) => {\n\t\t\ttemp.push({\n\t\t\t\tvalue: parseInt(element.count, 10),\n\t\t\t\tname: element.creator_msp_id,\n\t\t\t\t// Get color default, default not exist else auto\n\t\t\t\tfill: this.state.colorDefault[index]\n\t\t\t\t\t? this.state.colorDefault[index]\n\t\t\t\t\t: getOrgColor(element.creator_msp_id)\n\t\t\t});\n\t\t});\n\t\tthis.setState({ data: temp });\n\t};\n\n\tonRedirect = (event) => {\n\t\tthis.props.onRedirect.push(`transactions?orgType=${event.name}`);\n\t}\n\n\trender() {\n\t\tconst { data } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"section-content\">\n\t\t\t\t<div className=\"pie\">\n\t\t\t\t\t<div className=\"pie-chart\">\n\t\t\t\t\t\t<ResponsiveContainer>\n\t\t\t\t\t\t\t<PieChart>\n\t\t\t\t\t\t\t\t<Pie\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tdataKey=\"value\"\n\t\t\t\t\t\t\t\t\tnameKey=\"name\"\n\t\t\t\t\t\t\t\t\tcx=\"50%\"\n\t\t\t\t\t\t\t\t\tcy=\"50%\"\n\t\t\t\t\t\t\t\t\t// stroke={isDark ? \"#242729\" : \"#ffffff\"}\n\t\t\t\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\t\t\t\touterRadius=\"100%\"\n\t\t\t\t\t\t\t\t\tinnerRadius=\"50%\"\n\t\t\t\t\t\t\t\t\tfill=\"fill\"\n\t\t\t\t\t\t\t\t\tonClick={(event) => this.onRedirect(event)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Tooltip cursor={true} />\n\t\t\t\t\t\t\t\t<Tooltip cursor={{ stroke: 'red', strokeWidth: 2 }} />\n\t\t\t\t\t\t\t\t{/* <Tooltip cursor={<CustomizedCursor />} /> */}\n\t\t\t\t\t\t\t</PieChart>\n\t\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Row className=\"pie-legend\">\n\t\t\t\t\t\t{data.map(({ value, name, fill }, index) => (\n\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\txs={6}\n\t\t\t\t\t\t\t\tsm={4}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center pie-legend-row\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className=\"pie-legend-row-icon\" style={{ color: fill }}>\n\t\t\t\t\t\t\t\t\t●\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"pie-legend-row-title\" title={name}>\n\t\t\t\t\t\t\t\t\t            {name}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nOrgPieChart.propTypes = {\n\ttransactionByOrg: transactionByOrgType.isRequired\n};\n\nconst { modeSelector } = themeSelectors;\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(state => ({\n\t\tmode: modeSelector(state)\n\t}))\n)(OrgPieChart);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { Pagination, PaginationItem } from '@material-ui/lab';\nimport Timeago from 'react-timeago';\nimport ReactTable from '../Styled/Table';\nimport iCopy from './../../static/icon/copy.svg';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { connect } from 'react-redux';\nimport {\n\tchartOperations,\n\tchartSelectors\n} from './../../../src/state/redux/charts';\nimport { tableOperations, tableSelectors } from '../../state/redux/tables';\n\nconst PAGE_SIZE = 10;\nconst {\n\ttransactionListSelector,\n} = tableSelectors;\nconst { currentChannelSelector, blockNotificationsSelector } = chartSelectors;\nexport class TimelineStream extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\treactTableSetup = () => {\n\t\tif (this.props.type === \"blocks\")\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Block',\n\t\t\t\t\taccessor: 'blocknum',\n\t\t\t\t\twidth: 92\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Channel Name',\n\t\t\t\t\taccessor: 'channelname',\n\t\t\t\t\tCell: props => <b>{props.value}</b>,\n\t\t\t\t\twidth: 160\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Data Hash',\n\t\t\t\t\taccessor: 'datahash',\n\t\t\t\t\tCell: props => {\n\t\t\t\t\t\tconst linkToDetail =\n\t\t\t\t\t\t\twindow.location.origin + '#/block/' + props.original.datahash;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"cell-copy\">\n\t\t\t\t\t\t\t\t<div className=\"btn-link\">\n\t\t\t\t\t\t\t\t\t<a href={linkToDetail}>\n\t\t\t\t\t\t\t\t\t\t{props.value}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"btn-copy\">\n\t\t\t\t\t\t\t\t\t<CopyToClipboard text={linkToDetail}>\n\t\t\t\t\t\t\t\t\t\t<img src={iCopy} alt=\"copy\" />\n\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tminWidth: 130\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Number (TX)',\n\t\t\t\t\taccessor: 'txcount',\n\t\t\t\t\twidth: 135\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: () => <div className=\"text-right\">Created at</div>,\n\t\t\t\t\taccessor: 'createdt',\n\t\t\t\t\tclassName: 'text-right cell-time',\n\t\t\t\t\tCell: row => formatDate(row.value),\n\t\t\t\t\twidth: 150\n\t\t\t\t}\n\t\t\t];\n\t\tif (this.props.type === \"trans\")\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tHeader: 'TxnHash',\n\t\t\t\t\taccessor: 'txhash',\n\t\t\t\t\tCell: props => {\n\t\t\t\t\t\tconst linkToDetail =\n\t\t\t\t\t\t\twindow.location.origin + '#/tx/' + props.value;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"cell-copy\">\n\t\t\t\t\t\t\t\t<div className=\"btn-link text-in-blue\">\n\t\t\t\t\t\t\t\t\t<a href={linkToDetail}>\n\t\t\t\t\t\t\t\t\t\t{props.value}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"btn-copy\">\n\t\t\t\t\t\t\t\t\t<CopyToClipboard text={linkToDetail}>\n\t\t\t\t\t\t\t\t\t\t<img src={iCopy} alt=\"copy\" />\n\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tminWidth: 110\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Block',\n\t\t\t\t\taccessor: 'blockid',\n\t\t\t\t\tclassName: \"text-left\",\n\t\t\t\t\tCell: props => <b>{props.value}</b>,\n\t\t\t\t\twidth: 160\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'IntegraID',\n\t\t\t\t\taccessor: 'id',\n\t\t\t\t\twidth: 160,\n\t\t\t\t\tclassName: \"text-left\"\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tHeader: () => <div className=\"text-right\">Created Date</div>,\n\t\t\t\t\taccessor: 'createdt',\n\t\t\t\t\tclassName: 'text-center cell-time',\n\t\t\t\t\tCell: row => formatDate(row.value),\n\t\t\t\t\twidth: 150\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Identity Type',\n\t\t\t\t\taccessor: 'type',\n\t\t\t\t\twidth: 200\n\t\t\t\t},\n\t\t\t];\n\t}\n\n\tloadPage = page =>\n\t\tthis.props.getBlockNotificationsPage({\n\t\t\tchannels: this.props.currentChannel,\n\t\t\tpage: page\n\t\t});\n\n\tonChangePagination = async (e, page) => {\n\t\tawait this.loadPage(page);\n\t\tthis.setState({ page: page });\n\t};\n\n\t// Init\n\tcomponentDidMount = async () => {\n\t\tawait this.loadPage(this.props.blockList.page);\n\n\t\tthis.interVal = setInterval(() => {\n\t\t\tthis.loadPage(this.props.blockList.page);\n\t\t}, 3000);\n\t};\n\n\t// Out\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interVal);\n\t}\n\n\trender() {\n\t\tconst { blockList } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ReactTable\n\t\t\t\t\tdata={this.props.collapse ? this.props.data : blockList.data}\n\t\t\t\t\tcolumns={this.reactTableSetup()}\n\t\t\t\t\tclassName=\"full header-align-left timeline-block\"\n\t\t\t\t\tminRows={0}\n\t\t\t\t\tsortable={false}\n\t\t\t\t\tshowPagination={false}\n\t\t\t\t/>\n\t\t\t\t{!this.props.collapse && <Pagination\n\t\t\t\t\tclassName=\"pagination_mui_custom\"\n\t\t\t\t\tpage={blockList?.page}\n\t\t\t\t\tcount={Math.ceil(blockList?.total / PAGE_SIZE)}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tshape=\"rounded\"\n\t\t\t\t\tonChange={this.onChangePagination}\n\t\t\t\t\trenderItem={item => {\n\t\t\t\t\t\tif (item.type.includes('ellipsis')) {\n\t\t\t\t\t\t\treturn <div className=\"pageButton pageButton--ellipsis\">...</div>;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\titem.selected\n\t\t\t\t\t\t\t\t\t\t\t? 'pageButton pageButton--active'\n\t\t\t\t\t\t\t\t\t\t\t: 'pageButton'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...item}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tstate => ({\n\t\tcurrentChannel: currentChannelSelector(state),\n\t\tblockList: blockNotificationsSelector(state),\n\t\ttransactionList: transactionListSelector(state),\n\t}),\n\t{\n\t\tgetBlockNotificationsPage: chartOperations.blockNotificationsPage\n\t}\n)(TimelineStream);\n\nconst formatDate = (data) => {\n\tvar date = new Date(data)\n\treturn ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '/' + ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '/' + date.getFullYear();\n}\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport { connect } from 'react-redux';\nimport moment from 'moment-timezone';\nimport { TabContent, TabPane } from 'reactstrap';\nimport { chartSelectors, chartOperations } from '../../state/redux/charts';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport {\n\tblockPerHourType,\n\tblockPerMinType,\n\tblockPerDayType,\n\tblockAllType,\n\tcurrentChannelType,\n\tgetBlocksPerHourType,\n\tgetBlocksPerMinType,\n\tgetTransactionPerHourType,\n\tgetTransactionPerMinType,\n\ttransactionPerHourType,\n\ttransactionPerMinType,\n\ttransactionPerDayType,\n\ttransactionAllType\n} from '../types';\nimport {distructRows} from \"../../utils\"\nimport AreaChartIcon from '../../static/icon/area_chart.svg';\nimport BarChartIcon from '../../static/icon/bar_chart.svg';\n\nconst {\n\tblockPerHourSelector,\n\tblockPerMinSelector,\n\tblockPerDaySelector,\n\tblockAllSelector,\n\tcurrentChannelSelector,\n\ttransactionPerHourSelector,\n\ttransactionPerMinSelector,\n\ttransactionPerDaySelector,\n\ttransactionAllSelector\n\t\n} = chartSelectors;\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tchart: {\n\t\t\tcolor: dark ? '#ffffff' : undefined,\n\t\t\tbackgroundColor: dark ? '#453e68' : undefined\n\t\t}\n\t};\n};\n\nexport class ChartStats extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveTab: '1',\n\t\t\tlineChartType: 'blocks',\n\t\t\tchartDataFilter: 'ALL', \n\t\t\tchartData: {},\n\t\t\tsumCount: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { currentChannel } = this.props;\n\t\tthis.syncData(currentChannel);\n\t\tthis.interVal = setInterval(() => {\n\t\t\tthis.syncData(currentChannel);\n\t\t}, 60000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interVal);\n\t}\n\n\tsyncData = currentChannel => {\n\t\tconst {\n\t\t\tgetBlocksPerHour,\n\t\t\tgetBlocksPerMin,\n\t\t\tgetBlocksAll,\n\t\t\t// getBlocksPerDay,\n\t\t\tgetTransactionPerHour,\n\t\t\tgetTransactionPerMin,\n\t\t\tgetTransactionAll\n\t\t} = this.props;\n\t\tgetBlocksAll(currentChannel);\n\t\tgetBlocksPerMin(currentChannel);\n\t\tgetBlocksPerHour(currentChannel);\n\t\t// getBlocksPerDay(currentChannel);\n\t\tgetTransactionPerMin(currentChannel);\n\t\tgetTransactionPerHour(currentChannel);\n\t\tgetTransactionAll(currentChannel)\n\t};\n\thandleChartFilter = (item) => {\n\t\tconst { currentChannel, getBlocksPerDay, getBlocksAll, getTransactionPerDay, getTransactionAll } = this.props;\n\t\tthis.setState({ chartDataFilter: item })\n\t\tif(['1D', '7D'].includes(item) || item === this.state.chartDataFilter)\n\t\t\treturn\n\t\tif(item === 'ALL'){\n\t\t\tgetBlocksAll(currentChannel);\n\t\t\tgetTransactionAll(currentChannel);\n\t\t\treturn\n\t\t}\n\t\tvar days\n\t\tswitch(item) {\n\t\t\tcase '1M':\n\t\t\t\tdays = 30\n\t\t\t\tbreak\n\t\t\tcase '3M':\n\t\t\t\tdays = 90\n\t\t\t\tbreak\n\t\t\tcase '1Y':\n\t\t\t\tdays = 360\n\t\t\t\tbreak\n\t\t\tdefault: \n\t\t\t\tdays = 360\n\t\t\t\tbreak\n\t\t}\n\t\tgetBlocksPerDay(currentChannel, days);\n\t\tgetTransactionPerDay(currentChannel, days)\n\t}\n\ttimeDataSetup = (chartData = []) => {\n\t\tlet dataMax = 0;\n\t\tconst displayData = chartData.map(data => {\n\t\t\tif (parseInt(data.count, 10) > dataMax) {\n\t\t\t\tdataMax = parseInt(data.count, 10);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdatetime: moment(data.datetime)\n\t\t\t\t\t.tz(moment.tz.guess())\n\t\t\t\t\t.format('h:mm A'),\n\t\t\t\tcount: data.count\n\t\t\t};\n\t\t});\n\n\t\tdataMax += 5;\n\n\t\treturn {\n\t\t\tdisplayData,\n\t\t\tdataMax\n\t\t};\n\t};\n\tgetChartOption = (chartData = []) => {\n\t\tconst { sumCount } = this.state\n\t\tlet options = {\n\t\t\ttitle: {\n\t\t\t\ttext: ''\n\t\t\t},\n\t\t\trangeSelector: {\n\t\t\t\tselected: 1\n\t\t\t},\n\t\t\tseries: [{\n\t\t\t\tshowInLegend: false,\n\t\t\t\ttype: sumCount ? \"area\" : \"column\",\n\t\t\t\tfillColor: {\n\t\t\t\t\tlinearGradient: {\n\t\t\t\t\t\tx1: 0,\n\t\t\t\t\t\ty1: 0,\n\t\t\t\t\t\tx2: 0,\n\t\t\t\t\t\ty2: 1\n\t\t\t\t\t},\n\t\t\t\t\tstops: [\n\t\t\t\t\t\t[0, Highcharts.getOptions().colors[0]],\n\t\t\t\t\t\t[1, Highcharts.color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tfillOpacity: 0.2, // add an opacity for the fill color\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tthreshold: null\n\t\t\t}],\n\t\t\tcredits: false,\n\t\t\tchart: {\n\t\t\t\tbackgroundColor: this.props.mode === \"light\" ? \"\" : \"#242729\",\n\t\t\t\ttype: 'line'\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\tgridLineColor: this.props.mode === \"light\" ? \"#F0F1F2\" : \"rgba(229, 233, 242, 0.1)\",\n\t\t\t\tgridLineWidth: \"1px\"\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttitle: \"\",\n\t\t\t\tgridLineColor: this.props.mode === \"light\" ? \"#F0F1F2\" : \"rgba(229, 233, 242, 0.1)\"\n\t\t\t}\n\t\t}\n\t\tlet data = []\n\t\tlet cat = []\n\t\tconst chartRows = sumCount ? chartData : distructRows(chartData)\n\t\tchartRows.forEach(item => {\n\t\t\tdata.push(parseInt(item.count))\n\t\t\tlet time = new Date(item.datetime)\n\t\t\tcat.push(formatAMPM(time, this.state.chartDataFilter))\n\t\t})\n\t\toptions.series[0].data = data;\n\t\toptions.xAxis.categories = cat;\n\t\treturn options\n\t}\n\ttoggle = tab => {\n\t\tthis.setState({\n\t\t\tactiveTab: tab\n\t\t});\n\t};\n\n\ttoggleSumCount = (e) => {\n\t\tthis.setState({sumCount: e.target.checked})\n\t}\n\n\trender() {\n\t\tconst { activeTab, sumCount } = this.state;\n\t\tconst {\n\t\t\tblockPerHour,\n\t\t\tblockPerMin,\n\t\t\tblockAll,\n\t\t\tblockPerDay,\n\t\t\ttransactionPerHour,\n\t\t\ttransactionPerMin,\n\t\t\ttransactionAll,\n\t\t\ttransactionPerDay,\n\t\t\tclasses,\n\t\t} = this.props;\n\t\tconst listChartProps = ['1D', '7D', '1M', '3M', '1Y', 'ALL']\n\t\tconst chartBlocksData = (() => {\n\t\t\tswitch(this.state.chartDataFilter) {\n\t\t\t\tcase \"1D\":\n\t\t\t\t\treturn blockPerMin\n\t\t\t\tcase \"7D\":\n\t\t\t\t\treturn blockPerHour\n\t\t\t\tcase \"ALL\":\n\t\t\t\t\treturn blockAll\n\t\t\t\tdefault:\n\t\t\t\t\treturn blockPerDay\n\t\t\t}\n\t\t})()\n\t\tconst chartTransData = (() => {\n\t\t\tswitch(this.state.chartDataFilter) {\n\t\t\t\tcase \"1D\": {\n\t\t\t\t\treturn transactionPerMin\n\t\t\t\t}\n\t\t\t\tcase \"7D\":\n\t\t\t\t\treturn transactionPerHour\n\t\t\t\tcase \"ALL\": {\n\t\t\t\t\treturn transactionAll\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn transactionPerDay\n\t\t\t}\n\t\t})()\n\t\treturn (\n\t\t\t<div className={classes.chart + \" chart-stats-container\"}>\n\t\t\t\t<div className=\"chart-top-row\">\n\t\t\t\t\t<div className=\"top-chart-left\">\n\t\t\t\t\t\t<div onClick={() => { \n\t\t\t\t\t\t\t\tthis.setState({ lineChartType: \"blocks\" })\n\t\t\t\t\t\t\t\tthis.toggle('1')\n\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\tstyle={{ color: this.state.lineChartType === \"blocks\" ? \"#096AF5\" : \"\" }}>Blocks</div>\n\t\t\t\t\t\t<div onClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ lineChartType: \"trans\" })\n\t\t\t\t\t\t\t\tthis.toggle('2')\n\t\t\t\t\t\t\t}} style={{ color: this.state.lineChartType === \"trans\" ? \"#096AF5\" : \"\" }}>Transactions</div>\n\t\t\t\t\t\t<div className=\"switch-chart\">\n\t\t\t\t\t\t\t<img src={BarChartIcon} alt=\"bar\" />\n\t\t\t\t\t\t\t<Switch checked={sumCount} onChange={this.toggleSumCount} color=\"default\" />\n\t\t\t\t\t\t\t<img src={AreaChartIcon} alt=\"area\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"top-chart-right\">\n\t\t\t\t\t\t{listChartProps.map(item => {\n\t\t\t\t\t\t\treturn <div className={`chart-props ${this.state.chartDataFilter === item ? \"chart-props-active\" : \"\"}`} onClick={() => this.handleChartFilter(item)}>{item}</div>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<TabContent activeTab={activeTab}>\n\t\t\t\t\t<TabPane tabId=\"1\">\n\t\t\t\t\t\t<HighchartsReact\n\t\t\t\t\t\t\thighcharts={Highcharts}\n\t\t\t\t\t\t\toptions={this.getChartOption(chartBlocksData)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TabPane>\n\t\t\t\t\t<TabPane tabId=\"2\">\n\t\t\t\t\t\t<HighchartsReact\n\t\t\t\t\t\t\thighcharts={Highcharts}\n\t\t\t\t\t\t\toptions={this.getChartOption(chartTransData)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TabPane>\n\t\t\t\t</TabContent>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nChartStats.propTypes = {\n\tblockPerHour: blockPerHourType.isRequired,\n\tblockPerMin: blockPerMinType.isRequired,\n\tblockPerDay: blockPerDayType.isRequired,\n\tblockAllType: blockAllType.isRequired,\n\tcurrentChannel: currentChannelType.isRequired,\n\tgetBlocksPerHour: getBlocksPerHourType.isRequired,\n\tgetBlocksPerMin: getBlocksPerMinType.isRequired,\n\tgetTransactionPerHour: getTransactionPerHourType.isRequired,\n\tgetTransactionPerMin: getTransactionPerMinType.isRequired,\n\ttransactionPerHour: transactionPerHourType.isRequired,\n\ttransactionPerMin: transactionPerMinType.isRequired,\n\ttransactionPerDay: transactionPerDayType.isRequired,\n\ttransactionAll: transactionAllType.isRequired\n};\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tblockPerHour: blockPerHourSelector(state),\n\t\t\tblockPerMin: blockPerMinSelector(state),\n\t\t\tblockPerDay: blockPerDaySelector(state),\n\t\t\tblockAll: blockAllSelector(state),\n\t\t\ttransactionPerHour: transactionPerHourSelector(state),\n\t\t\ttransactionPerMin: transactionPerMinSelector(state),\n\t\t\ttransactionPerDay: transactionPerDaySelector(state),\n\t\t\ttransactionAll: transactionAllSelector(state),\n\t\t\tcurrentChannel: currentChannelSelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetBlocksPerHour: chartOperations.blockPerHour,\n\t\t\tgetBlocksPerMin: chartOperations.blockPerMin,\n\t\t\tgetBlocksPerDay: chartOperations.blockPerDay,\n\t\t\tgetBlocksAll: chartOperations.blockAll,\n\t\t\tgetTransactionPerHour: chartOperations.transactionPerHour,\n\t\t\tgetTransactionPerMin: chartOperations.transactionPerMin,\n\t\t\tgetTransactionPerDay: chartOperations.transactionPerDay,\n\t\t\tgetTransactionAll: chartOperations.transactionAll,\n\t\t}\n\t)\n)(ChartStats);\n\nfunction formatAMPM(date, type) {\n\tvar hours = date.getHours();\n\tvar minutes = date.getMinutes();\n\tvar ampm = hours >= 12 ? 'pm' : 'am';\n\thours = hours % 12;\n\thours = hours ? hours : 12; // the hour '0' should be '12'\n\tminutes = minutes < 10 ? '0' + minutes : minutes;\n\tvar strTime;\n\tswitch(type) {\n\t\tcase '1D':\n\t\t\tstrTime = hours + ':' + minutes + ' ' + ampm;\n\t\t\tbreak;\n\t\tcase '7D':\n\t\t\tstrTime = hours + ':' + minutes + ' ' + ampm;\n\t\t\tbreak;\n\t\tdefault: \n\t\t\tstrTime = date.toLocaleDateString(\"en-US\");\n\t\t\tbreak;\n\t}\n\treturn strTime;\n}\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Row, Col } from 'reactstrap';\nimport FontAwesome from 'react-fontawesome';\nimport OrgPieChart from '../Charts/OrgPieChart';\nimport {\n   blockListType,\n   channelsType,\n   dashStatsType,\n   peerStatusType,\n   transactionByOrgType\n} from '../types';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { themeSelectors } from '../../state/redux/theme';\nimport TimelineStream from '../Lists/TimelineStream';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport ChartStart from '../Charts/ChartStats';\n\nimport FilterIcon from '../../assets/icons/codicon_list-filter-icon.svg';\nimport SearchIcon from '../../assets/icons/icon-search.svg';\nimport { tableOperations, tableSelectors } from '../../state/redux/tables';\nimport { TabContent, TabPane } from 'reactstrap';\n\nconst { modeSelector } = themeSelectors;\n\n/* istanbul ignore next */\nconst {\n   transactionListSelector,\n   blockListSearchSelector,\n} = tableSelectors;\n\nconst styles = theme => {\n   const { type } = theme.palette;\n   const dark = type === 'dark';\n   return {\n      view: {\n         maxWidth: theme.bg.size,\n         margin: 'auto'\n      },\n      blocks: {\n         height: 175,\n         marginBottom: 20,\n         // backgroundColor: dark ? '#453e68' : '#ffffff',\n         boxShadow: dark ? '1px 2px 2px rgb(215, 247, 247)' : undefined\n      },\n      count: {\n         marginTop: '55%',\n         color: dark ? '#ffffff' : undefined\n      },\n      statistic: {\n         display: 'block',\n         float: 'left',\n         height: '100%',\n         width: '25%',\n         textAlign: 'center',\n         fontSize: '18pt',\n         color: dark ? '#ffffff' : '#000000'\n      },\n      vdivide: {\n         '&::after': {\n            borderRight: `2px ${dark ? 'rgb(40, 36, 61)' : '#dff1fe'} solid`,\n            display: 'block',\n            height: '45%',\n            bottom: '55%',\n            content: \"' '\",\n            position: 'relative'\n         }\n      },\n      avatar: {\n         justifyContent: 'center',\n         marginLeft: '60%',\n         marginTop: '65%'\n      },\n      node: {\n         color: dark ? '#183a37' : '#21295c',\n         backgroundColor: dark ? 'rgb(104, 247, 235)' : '#858aa6'\n      },\n      block: {\n         color: dark ? '#1f1a33' : '#004d6b',\n         backgroundColor: dark ? 'rgb(106, 156, 248)' : '#b9d6e1'\n      },\n      chaincode: {\n         color: dark ? 'rgb(121, 83, 109)' : '#407b20',\n         backgroundColor: dark ? 'rgb(247, 205, 234)' : '#d0ecda'\n      },\n      transaction: {\n         color: dark ? 'rgb(216, 142, 4)' : '#ffa686',\n         backgroundColor: dark ? 'rgb(252, 224, 174)' : '#ffeed8'\n      },\n      center: {\n         textAlign: 'center'\n      }\n   };\n};\nexport class DashboardView extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         hasDbError: false,\n         lineChartType: \"blocks\",\n         chartProps: \"1Y\",\n         typeSearch: \"creator_msp_id\",\n         search: \"\",\n         tableTab: \"blocks\"\n      };\n   }\n   componentWillMount() {\n      const {\n         blockList,\n         dashStats,\n         peerStatus,\n         transactionByOrg,\n         blockActivity\n      } = this.props;\n      if (\n         blockList === undefined ||\n         dashStats === undefined ||\n         // peerStatus === undefined ||\n         // blockActivity === undefined ||\n         transactionByOrg === undefined\n      ) {\n         this.setState({ hasDbError: true });\n      }\n   }\n\n   handleSearch = (e) => {\n      // Prevent browser default\n      e && e.preventDefault();\n\n      if (this.state.search === '')\n         return\n      window.location.href = `/#/transactions?type=${this.state.typeSearch}&q=${encodeURIComponent(this.state.search)}`;\n   }\n   render() {\n      const { dashStats, transactionByOrg, blockActivity, transactionList, blockList } = this.props;\n      const { hasDbError } = this.state;\n      const { mode } = this.props\n      if (hasDbError) {\n         return (\n            <div\n               style={{\n                  height: '100vh',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n               }}\n            >\n               <h1>\n                  Please verify your network configuration, database configuration and try\n                  again\n               </h1>\n            </div>\n         );\n      }\n      const { classes } = this.props;\n      return (\n         <div className={`dashboard-view-container`}>\n            <div className={classes.view}>\n               <div className=\"search-box-holder\">\n                  <div className=\"filter-box\">\n                     <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\"></InputLabel>\n                        <Select\n                           labelId=\"demo-simple-select-outlined-label\"\n                           id=\"demo-simple-select-outlined\"\n                           value={this.state.typeSearch}\n                           onChange={(event) => this.setState({ typeSearch: event.target.value })}\n\n                        >\n                           <MenuItem value={\"creator_msp_id\"}>Creator</MenuItem>\n                           <MenuItem value={\"channelname\"}>Channel name</MenuItem>\n                           <MenuItem value={\"txhash\"}>Tx id</MenuItem>\n                           <MenuItem value={\"type\"}>Type</MenuItem>\n                           <MenuItem value={\"chaincodename\"}>Chaincode</MenuItem>\n                           <MenuItem value={\"createdt\"}>Timestamp</MenuItem>\n                           <MenuItem value={\"integra_id\"}>Integra ID</MenuItem>\n                        </Select>\n                     </FormControl>\n                  </div>\n                  <div className=\"search-box\">\n                     <form onSubmit={this.handleSearch}>\n                        <input\n                           onChange={event => this.setState({ search: event.target.value })}\n                           placeholder=\"Search by Creator/Channel name/Tx id/Type/Chaincode/Timestamp/integra id\"\n                        />\n                        <span className=\"search-btn\" onClick={() => { this.handleSearch() }}>\n                           <img src={SearchIcon} />\n                        </span>\n                     </form>\n                  </div>\n               </div>\n               <div className=\"data-sythetic-block\">\n                  <div className=\"data-sythetic-card\">\n                     <div className=\"data-sythetic-path icon\">\n                        <FontAwesome width=\"38px\" height=\"38px\" name=\"cube\" />\n                     </div>\n                     <div className=\"data-sythetic-path count\" sm=\"4\">\n                        {dashStats.latestBlock}\n                     </div>\n                     Blocks\n                  </div>\n                  <div className=\"data-sythetic-card\">\n                     <div className=\"data-sythetic-path icon\">\n                        <FontAwesome name=\"list-alt\" />\n                     </div>\n                     <div className=\"data-sythetic-path count\">\n                        {dashStats.txCount}\n                     </div>\n                     Transactions\n                  </div>\n                  <div className=\"data-sythetic-card\">\n                     <div className=\"data-sythetic-path icon\">\n                        <FontAwesome name=\"users\" />\n                     </div>\n                     <div className=\"data-sythetic-path count\">\n                        {dashStats.peerCount}\n                     </div>\n                     Nodes\n                  </div>\n                  <div className=\"data-sythetic-card\">\n                     <div className=\"data-sythetic-path icon\">\n                        <FontAwesome name=\"handshake-o\" />\n                     </div>\n                     <div className=\"data-sythetic-path count\">\n                        {dashStats.chaincodeCount}\n                     </div>\n                     Chaincodes\n                  </div>\n               </div>\n               <div className=\"trans-chart-block\">\n                  <div>\n                     <ChartStart mode={mode} />\n                  </div>\n               </div>\n               <div className=\"trans-table-holder\">\n                  <div className=\"trans-header\">\n                     <div className={`block-header ${this.state.tableTab === \"blocks\" ? \"active\" : \"\"}`} onClick={() => this.setState({ tableTab: \"blocks\" })}>Blocks</div>\n                     <div className={`trans-header ${this.state.tableTab === \"trans\" ? \"active\" : \"\"}`} onClick={() => this.setState({ tableTab: \"trans\" })}>Transactions</div>\n                  </div>\n                  <div className=\"filter-row\">\n                     <div className=\"trans-table-filter-txt\">\n                        <img className=\"filter-icon\" src={FilterIcon} />\n                        Latest 5 from a total {this.state.tableTab === \"blocks\" ? \"blocks\" : \"transactions\"} \n                     </div>\n                  </div>\n                  <div>\n                     <TabContent activeTab={this.state.tableTab}>\n                        <TabPane tabId=\"trans\">\n                           <div className=\"section\">\n                              <TimelineStream type=\"trans\" collapse=\"true\" data={transactionList.slice(0, 5)} />\n                           </div>\n                        </TabPane>\n                        <TabPane tabId=\"blocks\">\n                           <div className=\"section\">\n                              <TimelineStream type=\"blocks\" collapse=\"true\" data={blockList.slice(0, 5)} />\n                           </div>\n                        </TabPane>\n                     </TabContent>\n                  </div>\n               </div>\n\n               <Row>\n                  <Col lg={6} className=\"d-flex\" >\n                     <div className=\"section\">\n                        <TimelineStream type=\"blocks\" />\n                     </div>\n                  </Col>\n                  <Col lg={6} className=\"d-flex\" >\n                     <div className=\"section\">\n                        <div className=\"section-title\">Transactions by Organization</div>\n                        <div className=\"section-break\"></div>\n                        <OrgPieChart transactionByOrg={transactionByOrg} onRedirect={this.props.history}/>\n                     </div>\n                  </Col>\n               </Row>\n            </div>\n         </div>\n      );\n   }\n}\n\nDashboardView.propTypes = {\n   blockList: blockListType.isRequired,\n   dashStats: dashStatsType.isRequired,\n   channels: channelsType.isRequired,\n   peerStatus: peerStatusType.isRequired,\n   transactionByOrg: transactionByOrgType.isRequired\n};\n\n// export default withStyles(styles)(DashboardView);\nexport default compose(\n   withStyles(styles),\n   connect(\n      state => ({\n         // error: errorMessageSelector(state),\n         mode: modeSelector(state),\n         transactionList: transactionListSelector(state),\n         blockListSearch: blockListSearchSelector(state),\n      }))\n)(DashboardView);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport matchSorter from 'match-sorter';\nimport ReactTable from '../Styled/Table';\nimport { channelsType } from '../types';\n\nclass Channels extends Component {\n  reactTableSetup = () => [\n    {\n      Header: 'ID',\n      accessor: 'id',\n      filterMethod: (filter, rows) => matchSorter(\n        rows,\n        filter.value,\n        { keys: ['id'] },\n        { threshold: matchSorter.rankings.SIMPLEMATCH },\n      ),\n      filterAll: true,\n      width: 100,\n    },\n    {\n      Header: 'Channel Name',\n      accessor: 'channelname',\n      filterMethod: (filter, rows) => matchSorter(\n        rows,\n        filter.value,\n        { keys: ['channelname'] },\n        { threshold: matchSorter.rankings.SIMPLEMATCH },\n      ),\n      filterAll: true,\n    },\n    {\n      Header: 'Blocks',\n      accessor: 'blocks',\n      filterMethod: (filter, rows) => matchSorter(\n        rows,\n        filter.value,\n        { keys: ['blocks'] },\n        { threshold: matchSorter.rankings.SIMPLEMATCH },\n      ),\n      filterAll: true,\n      width: 125,\n    },\n    {\n      Header: 'Transactions',\n      accessor: 'transactions',\n      filterMethod: (filter, rows) => matchSorter(\n        rows,\n        filter.value,\n        { keys: ['transactions'] },\n        { threshold: matchSorter.rankings.SIMPLEMATCH },\n      ),\n      filterAll: true,\n      width: 125,\n    },\n    {\n      Header: 'Timestamp',\n      accessor: 'createdat',\n      filterMethod: (filter, rows) => matchSorter(\n        rows,\n        filter.value,\n        { keys: ['createdat'] },\n        { threshold: matchSorter.rankings.SIMPLEMATCH },\n      ),\n      filterAll: true,\n    },\n  ];\n\n  render() {\n    const { channels } = this.props;\n    return (\n      <div>\n        <ReactTable\n          data={channels}\n          columns={this.reactTableSetup()}\n          defaultPageSize={5}\n          filterable\n          minRows={0}\n          showPagination={!(channels.length < 5)}\n        />\n      </div>\n    );\n  }\n}\n\nChannels.propTypes = {\n  channels: channelsType.isRequired,\n};\n\nexport default Channels;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport View from '../Styled/View';\nimport Channels from '../Lists/Channels';\nimport { channelsType } from '../types';\n\nexport const ChannelsView = ({ channels }) => (\n  <View>\n    <Channels channels={channels} />\n  </View>\n);\n\nChannelsView.propTypes = {\n  channels: channelsType.isRequired,\n};\n\nexport default ChannelsView;\n","// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FontAwesome from 'react-fontawesome';\n\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tcontainer: {\n\t\t\tmarginTop: '10%'\n\t\t},\n\t\tcontent: {\n\t\t\tcolor: dark ? '#ffffff' : undefined,\n\t\t\ttextAlign: 'center'\n\t\t},\n\t\theader: {\n\t\t\tcolor: '#58c5c2 !important',\n\t\t\tfontSize: '12em',\n\t\t\ttextAlign: 'center',\n\t\t\theight: 220\n\t\t},\n\t\tsubHeader: {\n\t\t\tcolor: dark ? '#ffffff' : undefined,\n\t\t\tfontSize: '4em !important',\n\t\t\ttextAlign: 'center'\n\t\t},\n\t\terrorIcon: {\n\t\t\tsize: '30px 30px',\n\t\t\ttextAlign: 'center',\n\t\t\tcolor: '#f9be53',\n\t\t\tfontSize: '80%'\n\t\t}\n\t};\n};\n\nexport const PageNotFound = ({ classes }) => (\n\t<div className={classes.container}>\n\t\t<div className={classes.header}>\n\t\t\t<FontAwesome name=\"exclamation-triangle\" className={classes.errorIcon} />\n\t\t\t404\n\t\t</div>\n\t\t<div className={classes.subHeader}> Page not found </div>\n\t\t<div className={classes.content}>\n\t\t\t{' '}\n\t\t\tThe page you are trying to access does not exist. Please check the URL\n\t\t</div>\n\t</div>\n);\n\nexport default withStyles(styles)(PageNotFound);\n","export const checkEmbedRoute = () => {\n  const currentURL = window.location.href;\n  let isEmbeded = false;\n  const urlString = currentURL;\n  let newURL = urlString.replace(\"#/\", \"\");\n  const url = new URL(newURL);\n  if (url.searchParams.has(\"embed\")) {\n    isEmbeded = url.searchParams.get(\"embed\");\n    return isEmbeded;\n  }\n};\n","import React, { useState } from \"react\";\nimport { esMill } from \"@react-jvectormap/spain\";\nimport { VectorMap } from \"react-jvectormap\";\nimport \"./Map.css\";\n\nconst mapData = {\n  //DE: 0\n};\n\nconst handleClick = (e, countryCode) => {\n  //console.log(countryCode);\n};\n\nconst MapChart = () => {\n  return (\n    <React.Fragment>\n      <VectorMap\n        map={\"world_mill\"}\n        //backgroundColor=\"transparent\" //change it to ocean blue: #0077be\n        backgroundColor=\"#293948\"\n        zoomOnScroll={true}\n        markers={[\n          { latLng: [52.5, 13.39], name: \"Berlin\" },\n          { latLng: [53.56, 10.0], name: \"Hamburg\" },\n          { latLng: [48.13, 11.56], name: \"Munich\" },\n          { latLng: [50.95, 6.96], name: \"Cologne\" },\n          { latLng: [50.11, 8.68], name: \"Frankfurt am Main\" },\n          { latLng: [48.77, 9.17], name: \"Stuttgart\" },\n          { latLng: [51.23, 6.78], name: \"Düsseldorf\" },\n          { latLng: [51.51, 7.46], name: \"Dortmund\" },\n          { latLng: [51.45, 7.01], name: \"Essen\" },\n          { latLng: [53.07, 8.8], name: \"Bremen\" },\n          { latLng: [38.9, -98.45], name: \"Test country\" },\n          { latLng: [31.8, -68.5], name: \"country 1\" },\n          { latLng: [18.9, -48.45], name: \"Test country 2\" },\n          { latLng: [68.9, -38.85], name: \"Test country 3\" },\n          { latLng: [28.9, -98.25], name: \"Test country 4\" },\n        ]}\n        markerStyle={{\n          initial: {\n            fill: \"#c453ea\",\n          },\n        }}\n        containerStyle={{\n          width: \"100%\",\n          height: \"500px\",\n        }}\n        onRegionClick={handleClick} //gets the country code\n        containerClassName=\"map\"\n        regionStyle={{\n          initial: {\n            fill: \"#fff\",\n            \"fill-opacity\": 0.9,\n            stroke: \"none\",\n            \"stroke-width\": 0,\n            \"stroke-opacity\": 0,\n          },\n          hover: {\n            \"fill-opacity\": 0.8,\n            cursor: \"pointer\",\n          },\n          selected: {\n           // fill: \"#0A6ED1\", //color for the clicked country\n            fill: '#666666'\n          },\n          selectedHover: {},\n        }}\n        regionsSelectable={true}\n        series={{\n          regions: [\n            {\n              values: mapData, //this is your data\n              scale: [\"#146804\", \"#ff0000\"], //your color game's here\n              normalizeFunction: \"polynomial\",\n            },\n          ],\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default MapChart;\n","import MapChart from './MapChart';\n\nexport default MapChart;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n\nimport React from 'react';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport { authSelectors } from '../../state/redux/auth';\n\nexport function Private({ render, auth, ...rest }) {\n\tconst redirect = !auth;\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={props =>\n\t\t\t\t!redirect ? (\n\t\t\t\t\trender(props)\n\t\t\t\t) : (\n\t\t\t\t\t<Redirect\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/login',\n\t\t\t\t\t\t\tstate: { from: props.location }\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t);\n}\n\nconst { authSelector } = authSelectors;\n\nexport default connect(state => ({\n\tauth: authSelector(state)\n}))(Private);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport Private from './Private';\n\nexport default Private;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { useEffect, useState } from 'react';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlocksView from './View/BlocksView';\nimport NetworkView from './View/NetworkView';\nimport HoldersView from './View/HoldersView';\nimport TransactionsView from './View/TransactionsView';\nimport ChaincodeView from './View/ChaincodeView';\nimport DashboardView from './View/DashboardView';\nimport ChannelsView from './View/ChannelsView';\nimport { chartSelectors } from '../state/redux/charts';\nimport { tableOperations, tableSelectors } from '../state/redux/tables';\nimport {\n\tblockListType,\n\tchaincodeListType,\n\tchannelsType,\n\tcurrentChannelType,\n\tdashStatsType,\n\tgetTransactionType,\n\tpeerListType,\n\tpeerStatusType,\n\ttransactionType,\n\ttransactionByOrgType,\n\ttransactionListType\n} from './types';\nimport PageNotFound from './View/PageNotFound';\nimport { checkEmbedRoute } from \"./../helpers/checkEmbedRoute\";\nimport Map from './Map'\n\nimport Private from './Route';\n\nconst {\n\tcurrentChannelSelector,\n\tblockActivitySelector,\n\tchannelListSelector,\n\tdashStatsSelector,\n\tpeerStatusSelector,\n\ttransactionByOrgSelector\n} = chartSelectors;\n\nconst {\n\tblockListSelector,\n\tchaincodeListSelector,\n\tchannelsSelector,\n\tpeerListSelector,\n\ttransactionSelector,\n\ttransactionListSelector,\n\tblockListSearchSelector,\n\ttransactionListSearchSelector\n} = tableSelectors;\n\nconst styles = theme => {\n\t// const { type, modeMobile } = theme.palette;\n\t// return {\n\t\n\t// };\n};\n\n\n\nexport const Main = props => {\n\tconst [isHeaderVisible, setHeaderVisible] = useState(true);\n\n\tconst {\n\t\tclasses,\n\t\tblockList,\n\t\tblockActivity,\n\t\tchaincodeList,\n\t\tchannels,\n\t\tcurrentChannel,\n\t\tdashStats,\n\t\tgetTransaction,\n\t\tpeerList,\n\t\tpeerStatus,\n\t\ttransaction,\n\t\ttransactionByOrg,\n\t\ttransactionList,\n\t\tblockListSearch,\n\t\ttransactionListSearch,\n\t\tgetBlockListSearch,\n\t\tgetTransactionListSearch\n\t} = props;\n\n\tuseEffect(() => {\n\t\tconst isEmbeded = checkEmbedRoute();\n\t\tif (isEmbeded === 'true') { \n\t\t\tsetHeaderVisible(false);\n\t\t}\n\t  }, []);\n\t  \n\tconst blocksViewProps = {\n\t\tblockList,\n\t\tblockListSearch,\n\t\tgetBlockListSearch,\n\t\ttransactionByOrg,\n\t\tcurrentChannel,\n\t\tgetTransaction,\n\t\ttransaction\n\t};\n\tconst chaincodeViewProps = {\n\t\tchaincodeList\n\t};\n\n\tconst channelsViewProps = {\n\t\tchannels\n\t};\n\n\tconst dashboardViewProps = {\n\t\tblockList,\n\t\tdashStats,\n\t\tpeerStatus,\n\t\ttransactionByOrg,\n\t\tblockActivity,\n\t\tchannels\n\t};\n\n\tconst networkViewProps = {\n\t\tpeerList\n\t};\n\n\tconst transactionsViewProps = {\n\t\tcurrentChannel,\n\t\ttransaction,\n\t\ttransactionList,\n\t\tgetTransaction,\n\t\ttransactionByOrg,\n\t\ttransactionListSearch,\n\t\tgetTransactionListSearch\n\t};\n\n\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className={isHeaderVisible && 'main'  }>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<DashboardView {...{ ...dashboardViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/blocks\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<BlocksView {...{ ...blocksViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/chaincodes\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChaincodeView {...{ ...chaincodeViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/channels\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChannelsView {...{ ...channelsViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/network\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<NetworkView {...{ ...networkViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t//\tpath=\"/transactions\"\n\t\t\t\t\t\tpath={['/transactions', \"/transactions/:orgType\"]}\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<TransactionsView\n\t\t\t\t\t\t\t\t{...{ ...transactionsViewProps, ...routeprops }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/holders\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<HoldersView {...{ ...blocksViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/map\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<Map />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\trender={routeprops => <PageNotFound {...routeprops} />}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nMain.propTypes = {\n\tblockList: blockListType.isRequired,\n\tchaincodeList: chaincodeListType.isRequired,\n\tchannels: channelsType.isRequired,\n\tcurrentChannel: currentChannelType.isRequired,\n\tdashStats: dashStatsType.isRequired,\n\tgetTransaction: getTransactionType.isRequired,\n\tpeerList: peerListType.isRequired,\n\tpeerStatus: peerStatusType.isRequired,\n\ttransaction: transactionType.isRequired,\n\ttransactionByOrg: transactionByOrgType.isRequired,\n\ttransactionList: transactionListType.isRequired\n};\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tblockList: blockListSelector(state),\n\t\t\tchaincodeList: chaincodeListSelector(state),\n\t\t\tchannelList: channelListSelector(state),\n\t\t\tchannels: channelsSelector(state),\n\t\t\tcurrentChannel: currentChannelSelector(state),\n\t\t\tdashStats: dashStatsSelector(state),\n\t\t\tpeerList: peerListSelector(state),\n\t\t\tpeerStatus: peerStatusSelector(state),\n\t\t\ttransaction: transactionSelector(state),\n\t\t\ttransactionByOrg: transactionByOrgSelector(state),\n\t\t\ttransactionList: transactionListSelector(state),\n\t\t\tblockListSearch: blockListSearchSelector(state),\n\t\t\ttransactionListSearch: transactionListSearchSelector(state),\n\t\t\tblockActivity: blockActivitySelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetTransaction: tableOperations.transaction,\n\t\t\tgetBlockListSearch: tableOperations.blockListSearch,\n\t\t\tgetTransactionListSearch: tableOperations.transactionListSearch\n\t\t}\n\t)\n)(Main);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactSelect from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport classnames from 'classnames';\n\nconst styles = (theme) => {\n  const { type } = theme.palette;\n  const dark = type === 'dark';\n  return {\n    select: {\n      '& .Select-control': {\n        backgroundColor: `${dark ? '#3E4143' : '#F2F3F7'} !important`,\n        color: dark ? '#ffffff !important' : undefined,\n        border: \"none\",\n        borderRadius: \"8px\"\n      },\n      '& .Select-control .Select-clear-zone': {\n        display: 'none',\n        width: '95% !important',\n        margin: 'auto',\n      },\n      '& .Select-menu-outer': {\n        border: \"none\",\n        background: dark ? '#5a5379 !important' : undefined,\n        color: dark ? '#ffffff !important' : undefined,\n      },\n      '& .Select-option': {\n        background: dark ? '#453e68 !important' : undefined,\n        color: dark ? '#cfcdcd !important' : undefined,\n      },\n      '& .Select-option.is-selected': {\n        background: dark ? '#6a628e !important' : undefined,\n        color: dark ? '#ffffff !important' : undefined,\n      },\n      '& .Select-option.is-focused': {\n        background: dark ? '#5d5291 !important' : undefined,\n        color: dark ? '#ffffff !important' : undefined,\n      },\n      '& .Select-value-label': {\n        color: dark ? '#fff !important' : \"#F2F3F7\",\n      },\n    },\n    filter: {\n      [`\n        & .Select-control,\n        & .Select-menu-outer,\n        & .Select-option,\n        & .Select-option.is-selected,\n        & .Select-option.is-focused\n      `]: {\n        background: dark ? '#7165ae !important' : undefined,\n        color: dark ? '#ffffff !important' : undefined,\n      },\n    },\n  };\n};\n\nconst Select = (props) => {\n  const {\n    className = '', classes, filter, ...rest\n  } = props;\n  const clazz = classnames(classes.select, filter && classes.filter, className);\n  return <ReactSelect className={clazz} {...rest} />;\n};\n\nexport default withStyles(styles)(Select);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FontAwesome from 'react-fontawesome';\nimport Timeago from 'react-timeago';\n\n\nexport class NotificationsPanel extends Component {\n\t/* istanbul ignore next */\n\tavatarIcon = (type, classes) => {\n\t\tswitch (type) {\n\t\t\tcase 'block':\n\t\t\t\treturn (\n\t\t\t\t\t<Avatar className=\"item-icon\">\n\t\t\t\t\t\t<FontAwesome name=\"cube\" />{' '}\n\t\t\t\t\t</Avatar>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Avatar className=\"item-icon\">\n\t\t\t\t\t\t<FontAwesome name=\"exclamation\" />{' '}\n\t\t\t\t\t</Avatar>\n\t\t\t\t);\n\t\t}\n\t};\n\n\t/* istanbul ignore next */\n\trender() {\n\t\tlet { classes, notifications } = this.props;\n\n\t\t// Empty notification\n\t\tif (notifications.length === 0) {\n\t\t\treturn (\n\t\t\t\t<div className=\"no-data\">\n\t\t\t\t\tNo notifications\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\treturn (\n\t\t\t<List component=\"nav\" className=\"noti-list\">\n\t\t\t\t{notifications.map((notify, index) => (\n\t\t\t\t\t<React.Fragment key={index}>\n\t\t\t\t\t\t<ListItem button className=\"item\">\n\t\t\t\t\t\t\t{this.avatarIcon(notify.type, classes)}\n\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\tclassName=\"item-text\"\n\t\t\t\t\t\t\t\tprimary={notify.title}\n\t\t\t\t\t\t\t\tsecondary={notify.message}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Timeago\n\t\t\t\t\t\t\t\tclassName=\"item-time\"\n\t\t\t\t\t\t\t\tdate={notify.time}\n\t\t\t\t\t\t\t\tlive={false}\n\t\t\t\t\t\t\t\tminPeriod={60}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t);\n\t}\n}\n\nexport default NotificationsPanel;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  form: {\n    width: 310,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 130,\n  },\n  fileField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass ChannelForm extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      // TODO : Replace with liform-react\n      <div>\n        <form className={classes.container}>\n          <TextField\n            id=\"channel-name\"\n            label=\"Name\"\n            className={classes.textField}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"org-name\"\n            label=\"Org Name\"\n            className={classes.textField}\n            margin=\"normal\"\n          />\n        </form>\n        <br />\n        <form className={classes.form}>\n          <TextField\n            type=\"file\"\n            id=\"org-path\"\n            label=\"Org Path\"\n            className={classes.fileField}\n            helperText=\"path to org config\"\n            margin=\"normal\"\n          />\n          <TextField\n            type=\"file\"\n            id=\"channel-path\"\n            label=\"Channel Path\"\n            className={classes.fileField}\n            helperText=\"path to channel config\"\n            margin=\"normal\"\n          />\n          <TextField\n            type=\"file\"\n            id=\"network-path\"\n            label=\"Network Path\"\n            className={classes.fileField}\n            helperText=\"path to network config\"\n            margin=\"normal\"\n          />\n          <Button size=\"small\" color=\"primary\">\n            Submit\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ChannelForm);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport {ExpansionPanelDetails, ExpansionPanelSummary, FormControl, FormHelperText, MenuItem} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport FontAwesome from 'react-fontawesome';\nimport Select from '@material-ui/core/Select';\nimport ChannelForm from '../Forms/ChannelForm';\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\t/* istanbul ignore next */\n\treturn {\n\t\tcurrent: {\n\t\t\tcolor: dark ? 'rgb(42, 173, 230)' : undefined\n\t\t},\n\t\tpanel: {\n\t\t\tcolor: dark ? '#ffffff' : undefined,\n\t\t\tbackgroundColor: dark ? '#3c3558' : undefined\n\t\t},\n\t\tchannel: {\n\t\t\twidth: 200\n\t\t}\n\t};\n};\n\nclass AdminPanel extends Component {\n\thandleChange = () => {};\n\n\t/* istanbul ignore next */\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.panel}>\n\t\t\t\t<Typography variant=\"headline\" className={classes.panel}>\n\t\t\t\t\t<FontAwesome name=\"cogs\" className={classes.panel} /> ADMIN PANEL\n\t\t\t\t</Typography>\n\t\t\t\t<ExpansionPanel className={classes.panel}>\n\t\t\t\t\t<ExpansionPanelSummary\n\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t\tclassName={classes.panel}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography variant=\"subheading\" className={classes.panel}>\n\t\t\t\t\t\t\tMANAGE CHANNEL{' '}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"caption\" className={classes.current}>\n\t\t\t\t\t\t\t{this.props.channel.currentChannel} <br />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t<ExpansionPanelDetails className={classes.panel}>\n\t\t\t\t\t\t{/* <Typography variant='subheading' color=\"textSecondary\">\n                            Select Channel\n                            </Typography> */}\n\t\t\t\t\t\t<form className={classes.panel}>\n\t\t\t\t\t\t\t<FormControl className={`${classes.channel} ${classes.panel}`}>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tvalue={20}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\thelperText=\"select channel\"\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tname: 'age',\n\t\t\t\t\t\t\t\t\t\tid: 'age-simple'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem value=\"\" className={classes.panel}>\n\t\t\t\t\t\t\t\t\t\t<em>None</em>\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem className={classes.panel} value={10}>\n\t\t\t\t\t\t\t\t\t\tmock1\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem className={classes.panel} value={20}>\n\t\t\t\t\t\t\t\t\t\tmychannel\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem className={classes.panel} value={30}>\n\t\t\t\t\t\t\t\t\t\tmock2\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t<FormHelperText className={classes.panel}>\n\t\t\t\t\t\t\t\t\tselect a channel\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t{/* <div className='channel-dropdown'>\n                                <Select\n                                    placeholder='Select Channel...'\n                                    required='true'\n                                    name=\"form-field-name\"\n                                    value={channel}\n                                    onChange={handleChange}\n                                    options={channels} />\n                            </div> */}\n\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t</ExpansionPanel>\n\t\t\t\t<ExpansionPanel className={classes.panel}>\n\t\t\t\t\t<ExpansionPanelSummary\n\t\t\t\t\t\tclassName={classes.panel}\n\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography variant=\"subheading\" className={classes.panel}>\n\t\t\t\t\t\t\tADD CHANNEL\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t<ExpansionPanelDetails className={classes.panel}>\n\t\t\t\t\t\t<ChannelForm />\n\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t</ExpansionPanel>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/* istanbul ignore next */\nfunction mapStateToProps(state, ownProps) {\n\treturn {\n\t\tchannelList: state.channelList.channelList,\n\t\tchannel: state.channel.channel\n\t};\n}\n// function mapDispatchToProps(dispatch){\n//   return {actions: bindActionCreators({...partActions,...secActions}, dispatch)}\n// }\n\n/* istanbul ignore next */\nexport default compose(\n\twithStyles(styles),\n\tconnect(mapStateToProps /* ,mapDispatchToProps */)\n)(AdminPanel);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\n\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport { shape, string } from 'prop-types';\n\nimport { authSelectors, authOperations } from '../../state/redux/auth';\n\nconst styles = theme => ({\n\tcontainer: {\n\t\twidth: 'auto',\n\t\tdisplay: 'block', // Fix IE 11 issue.\n\t\tmarginLeft: theme.spacing.unit * 3,\n\t\tmarginRight: theme.spacing.unit * 3,\n\t\t[theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n\t\t\twidth: 400,\n\t\t\tmarginLeft: 'auto',\n\t\t\tmarginRight: 'auto'\n\t\t}\n\t},\n\tpaper: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tpadding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n\t\t\t.spacing.unit * 3}px`\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing.unit\n\t},\n\ttitle: {\n\t\tmarginTop: theme.spacing.unit * 2\n\t},\n\tactions: {\n\t\tmarginTop: theme.spacing.unit * 3\n\t},\n\terrortext: {\n\t\tfontSize: 16,\n\t\tfont: 'bold',\n\t\tcolor: 'red'\n\t},\n\tsuccesstext: {\n\t\tfontSize: 16,\n\t\tfont: 'bold',\n\t\tcolor: 'green'\n\t},\n\tcloseButton: {\n\t\tposition: 'absolute',\n\t\tright: theme.spacing.unit,\n\t\ttop: theme.spacing.unit,\n\t\tcolor: theme.palette.grey[500]\n\t}\n});\n\nexport class Register extends Component {\n\tstatic propTypes = {\n\t\tclasses: shape({\n\t\t\tform: string,\n\t\t\tcontainer: string,\n\t\t\tpaper: string,\n\t\t\tactions: string\n\t\t}).isRequired\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst { registered } = props;\n\t\tthis.state = {\n\t\t\tinfo: null,\n\t\t\tuser: {\n\t\t\t\terror: null,\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tfirstname: {\n\t\t\t\terror: null,\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tlastname: {\n\t\t\t\terror: null,\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\temail: {\n\t\t\t\terror: null,\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\terror: null,\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tpassword2: {\n\t\t\t\terror: null,\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\troles: {\n\t\t\t\terror: null,\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\trolesList: ['admin', 'user'],\n\t\t\terror: '',\n\t\t\tregistered,\n\t\t\tisLoading: false,\n\t\t\tallValid: false\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { registered = [], error } = nextProps;\n\t\tthis.setState(() => ({\n\t\t\tregistered,\n\t\t\terror\n\t\t}));\n\t}\n\n\thandleChange = event => {\n\t\tconst { target } = event;\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst { name } = target;\n\t\tthis.setState({\n\t\t\t[name]: { value }\n\t\t});\n\n\t\tlet password2 = {};\n\t\tif (name === 'password') {\n\t\t\tif (\n\t\t\t\tthis.state.password2.value.length &&\n\t\t\t\tvalue !== this.state.password2.value\n\t\t\t) {\n\t\t\t\tpassword2 = {\n\t\t\t\t\tvalue: this.state.password2.value,\n\t\t\t\t\terror: 'The password confirmation does not match.'\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpassword2 = { value: this.state.password2.value, error: null };\n\t\t\t}\n\t\t} else if (name === 'password2') {\n\t\t\tif (\n\t\t\t\tthis.state.password.value.length &&\n\t\t\t\tvalue !== this.state.password.value\n\t\t\t) {\n\t\t\t\tpassword2 = { value, error: 'The password confirmation does not match.' };\n\t\t\t} else {\n\t\t\t\tpassword2 = { value, error: null };\n\t\t\t}\n\t\t} else {\n\t\t\tpassword2 = this.state.password2;\n\t\t}\n\n\t\tthis.setState({ password2 }, () => {\n\t\t\tif (\n\t\t\t\tthis.state.user.value &&\n\t\t\t\tthis.state.password.value &&\n\t\t\t\tthis.state.password2.value &&\n\t\t\t\tthis.state.roles.value &&\n\t\t\t\t!this.state.password2.error\n\t\t\t) {\n\t\t\t\tthis.setState({ allValid: true });\n\t\t\t} else if (this.state.allValid) {\n\t\t\t\tthis.setState({ allValid: false });\n\t\t\t}\n\t\t});\n\t};\n\n\tsubmitForm = async e => {\n\t\te.preventDefault();\n\n\t\tconst { register } = this.props;\n\t\tconst {\n\t\t\tuser,\n\t\t\tpassword,\n\t\t\tpassword2,\n\t\t\troles,\n\t\t\tfirstname,\n\t\t\tlastname,\n\t\t\temail\n\t\t} = this.state;\n\n\t\tconst userInfo = {\n\t\t\tuser: user.value,\n\t\t\tpassword: password.value,\n\t\t\tpassword2: password2.value,\n\t\t\troles: roles.value,\n\t\t\tfirstname: firstname.value,\n\t\t\tlastname: lastname.value,\n\t\t\temail: email.value\n\t\t};\n\n\t\tconst info = await register(userInfo);\n\n\t\tthis.setState(() => ({ info }));\n\n\t\treturn true;\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tinfo,\n\t\t\tuser,\n\t\t\tpassword,\n\t\t\tpassword2,\n\t\t\troles,\n\t\t\tfirstname,\n\t\t\tlastname,\n\t\t\temail,\n\t\t\trolesList,\n\t\t\tisLoading\n\t\t} = this.state;\n\t\tconst { classes, error, onClose } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.container}>\n\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t<Typography className={classes.title} component=\"h5\" variant=\"headline\">\n\t\t\t\t\t\tRegister User\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<MuiDialogTitle>\n\t\t\t\t\t\t{onClose ? (\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\tclassName={classes.closeButton}\n\t\t\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</MuiDialogTitle>\n\t\t\t\t\t<form className={classes.form} onSubmit={this.submitForm}>\n\t\t\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"user\"\n\t\t\t\t\t\t\t\tname=\"user\"\n\t\t\t\t\t\t\t\tlabel=\"User\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\tvalue={user.value}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{user.error && (\n\t\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t\t{user.error}\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"firstname\"\n\t\t\t\t\t\t\t\tname=\"firstname\"\n\t\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\tvalue={firstname.value}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{firstname.error && (\n\t\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t\t{firstname.error}\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"lastname\"\n\t\t\t\t\t\t\t\tname=\"lastname\"\n\t\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\tvalue={lastname.value}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{lastname.error && (\n\t\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t\t{lastname.error}\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"E-mail address\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\tvalue={email.value}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{email.error && (\n\t\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t\t{email.error}\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\terror={!!password.error}\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\tvalue={password.value}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{password.error && (\n\t\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t\t{password.error}\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\terror={!!password2.error}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"password2\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password2\"\n\t\t\t\t\t\t\t\tlabel=\"Password(confirm)\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\tvalue={password2.value}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{password2.error && (\n\t\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t\t{password2.error}\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\terror={!!roles.error}\n\t\t\t\t\t\t\t\tid=\"roles\"\n\t\t\t\t\t\t\t\ttype=\"roles\"\n\t\t\t\t\t\t\t\tname=\"roles\"\n\t\t\t\t\t\t\t\tlabel=\"Roles\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\tvalue={roles.value}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{rolesList.map(item => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={item} value={item}>\n\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t{roles.error && (\n\t\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t\t{roles.error}\n\t\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t<FormHelperText id=\"component-error-text\" error>\n\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{info && user.value && (\n\t\t\t\t\t\t\t<FormHelperText\n\t\t\t\t\t\t\t\tid=\"component-error-text\"\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tinfo.status === 'success' ? classes.successtext : classes.errortext\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{`User '${user.value}' ${info.message}`}\n\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\t\tclassName={classes.actions}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button fullWidth variant=\"contained\" color=\"primary\" onClick={onClose}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.allValid}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst { errorSelector, registeredSelector } = authSelectors;\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tregistered: registeredSelector(state),\n\t\t\terror: errorSelector(state)\n\t\t}),\n\t\t{\n\t\t\tregister: authOperations.register\n\t\t}\n\t)\n)(Register);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport Register from './Register';\n\nexport default Register;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n/* eslint-disable */\n\nimport React, { Component } from \"react\";\nimport compose from \"recompose/compose\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Popover,\n  UncontrolledPopover,\n  PopoverHeader,\n  PopoverBody,\n} from \"reactstrap\";\nimport { HashRouter as Router, NavLink, useHistory, withRouter } from \"react-router-dom\";\nimport FontAwesome from \"react-fontawesome\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Websocket from \"react-websocket\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Loader from \"react-loader-spinner\";\nimport Select from \"../Styled/Select\";\n//import classNames from \"classnames\";\nimport NotificationsPanel from \"../Panels/NotificationsPanel\";\nimport LogoLight from \"../../static/images/Logo_light.svg\";\nimport LogoDark from \"../../static/images/Logo_dark.svg\";\nimport AdminPanel from \"../Panels/AdminPanel\";\nimport { chartOperations, chartSelectors } from \"../../state/redux/charts\";\nimport { tableOperations, tableSelectors } from \"../../state/redux/tables\";\nimport { themeSelectors, themeActions } from \"../../state/redux/theme\";\nimport SVG from \"react-inlinesvg\";\n// import iRegister from \"../../static/icon/register.svg\";\n// import iLogout from \"../../static/icon/logout.svg\";\nimport iBell from \"../../static/icon/bell.svg\";\nimport iMoon from \"../../static/icon/moon.svg\";\nimport iSun from \"../../static/icon/sun.svg\";\n\nimport Auth from './../../state/Auth';\n\nimport { authOperations } from \"../../state/redux/auth\";\n\nimport Register from \"../Register\";\n\n// import Enroll from '../Enroll';\n\nimport {\n  currentChannelType,\n  channelsType,\n  getBlockListType,\n  getBlocksPerHourType,\n  getBlocksPerMinType,\n  getChaincodeListType,\n  getChannelsType,\n  getChangeChannelType,\n  getDashStatsType,\n  getPeerListType,\n  getPeerStatusType,\n  getTransactionByOrgType,\n  getTransactionPerHourType,\n  getTransactionPerMinType,\n  refreshType,\n} from \"../types\";\n\nconst {\n  blockPerHour,\n  blockPerMin,\n  transactionPerHour,\n  transactionPerMin,\n  transactionByOrg,\n  dashStats,\n  changeChannel,\n  blockActivity,\n  peerStatus,\n} = chartOperations;\n\nconst { blockList, chaincodeList, channels, peerList, transactionList } =\n  tableOperations;\n\nconst { currentChannelSelector, blockNotificationsSelector } = chartSelectors;\nconst { channelsSelector } = tableSelectors;\n\n/* istanbul ignore next */\nconst styles = (theme) => {\n  const { type, modeMobile } = theme.palette;\n  const dark = type === \"dark\";\n\n  return {\n    logo: {\n      height: 46,\n      [modeMobile]: {\n        height: 40,\n      },\n    },\n    navbarHeader: {\n      margin: \"auto\",\n      maxWidth: theme.bg.size,\n      padding: \"0.5rem 0.2rem\",\n      [modeMobile]: {\n        padding: \"0.5rem\",\n      },\n    },\n    header: {\n      top: 0,\n      zIndex: 100,\n      backgroundColor: theme.bg.content,\n      boxShadow: theme.shadow.header,\n    },\n    tab: {\n      color: theme.color.text,\n      textTransform: \"capitalize\",\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      height: 50,\n      margin: \"10px 16px\",\n      \"&:hover\": {\n        color: theme.color.active,\n      },\n      // '@media (max-width: 1415px) and (min-width: 990px)': {\n      // \tfontSize: '0.85rem'\n      // }\n    },\n    activeTab: {\n      color: theme.color.active,\n      height: 60,\n      marginTop: 20,\n      \"&:hover\": {\n        color: theme.color.active__hover,\n      },\n    },\n    buttonOther: {\n      display: \"flex\",\n      marginLeft: 16,\n    },\n    adminButton: {\n      cursor: \"pointer\",\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingTop: 0,\n      marginTop: 0,\n\n      \"& + div\": {\n        marginLeft: 19,\n      },\n    },\n    userInfo: {\n      background: theme.bg.item,\n      width: \"40px\",\n      height: \"40px\",\n      borderRadius: \"40px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    themeSwitch: {\n      // height: 50,\n      // lineHeight: '50px',\n      // textAlign: 'center',\n      // marginLeft: 15,\n      // width: 100,\n      // paddingTop: 0,\n      // '@media (max-width: 1415px) and (min-width: 990px)': {\n      // \tdisplay: 'flex'\n      // },\n      // '@media (max-width: 990px)': {\n      // \tmarginLeft: 0\n      // }\n    },\n    bell: {\n      // color: dark ? 'rgb(139, 143, 148)' : '#5f6164',\n      // fontSize: '18pt',\n      // float: 'none',\n      // '&:hover': {\n      // \tcolor: dark ? '#c1d7f0' : '#24272a'\n      // }\n    },\n    channel: {\n      width: 200,\n      float: \"none\",\n      // '@media (max-width: 1415px) and (min-width: 990px)': {\n      // \twidth: '9em'\n      // }\n    },\n    channelLoader: {\n      textAlign: \"center\",\n      padding: 20,\n    },\n    loader: {\n      margin: \"0 auto\",\n      width: 100,\n    },\n    sunIcon: {\n      // color: dark ? 'rgb(247, 200, 92)' : 'rgb(245, 185, 47)',\n      // '@media (max-width: 1415px) and (min-width: 990px)': {\n      // \tmarginTop: 15\n      // }\n    },\n    moonIcon: {\n      // color: dark ? '#9cd7f7' : 'rgb(104, 195, 245)',\n      // '@media (max-width: 1415px) and (min-width: 990px)': {\n      // \tmarginTop: 15\n      // }\n    },\n    logout: {\n      marginRight: -3,\n    },\n    logoutIcon: {\n      color: dark ? \"rgb(139, 143, 148)\" : \"#5f6164\",\n      fontSize: \"18pt\",\n      float: \"none\",\n      \"&:hover\": {\n        color: dark ? \"#c1d7f0\" : \"#24272a\",\n      },\n      marginLeft: 5,\n      marginTop: 14,\n      cursor: \"pointer\",\n    },\n    user: {\n      marginRight: -3,\n    },\n    userIcon: {\n      color: dark ? \"rgb(139, 143, 148)\" : \"#5f6164\",\n      fontSize: \"18pt\",\n      float: \"none\",\n      \"&:hover\": {\n        color: dark ? \"#c1d7f0\" : \"#24272a\",\n      },\n      marginLeft: 5,\n      marginTop: 14,\n      cursor: \"pointer\",\n    },\n    toggleIcon: {\n      color: theme.color.text,\n      fontSize: \"1.75em\",\n      \"&:focus\": {\n        outline: \"none\",\n      },\n    },\n  };\n};\n\nexport class HeaderView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      notifyDrawer: false,\n      adminDrawer: false,\n      channels: [],\n      notifyCount: 0,\n      notifications: [],\n      isLoading: true,\n      modalOpen: false,\n      registerOpen: false,\n      selectedChannel: {},\n\t    checked: false,\n    };\n  }\n\n  componentDidMount() {\n    const { channels, currentChannel } = this.props;\n\n    const arr = [];\n    let selectedValue = {};\n    channels &&\n      channels.forEach((element) => {\n        if (element.channel_genesis_hash === currentChannel) {\n          selectedValue = {\n            value: element.channel_genesis_hash,\n            label: element.channelname,\n          };\n        }\n        arr.push({\n          value: element.channel_genesis_hash,\n          label: element.channelname,\n        });\n      });\n\n    this.setState({\n      currentChannel: currentChannel,\n      channels: arr,\n      isLoading: false,\n      selectedChannel: selectedValue,\n    });\n\n    this.setState({ checked: localStorage.getItem('modeType')==='true' },() => {      \n    });\n    this.interVal = setInterval(() => {\n      this.syncData(currentChannel);\n    }, 60000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interVal);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { currentChannel, getChangeChannel } = this.props;\n    const options = [];\n    let selectedValue = {};\n    if (nextProps?.channels?.length > 0) {\n      nextProps.channels.forEach((element) => {\n        options.push({\n          value: element.channel_genesis_hash,\n          label: element.channelname,\n        });\n        if (\n          nextProps.currentChannel == null ||\n          nextProps.currentChannel === undefined\n        ) {\n          if (element.channel_genesis_hash != null) {\n            selectedValue = {\n              value: element.channel_genesis_hash,\n              label: element.channelname,\n            };\n          }\n        } else if (element.channel_genesis_hash === nextProps.currentChannel) {\n          selectedValue = {\n            value: element.channel_genesis_hash,\n            label: element.channelname,\n          };\n        }\n      });\n    }\n\n    if (\n      nextProps.currentChannel === null ||\n      nextProps.currentChannel === undefined\n    ) {\n      getChangeChannel(selectedValue.value);\n    }\n\n    this.setState({\n      currentChannel: currentChannel,\n      channels: options,\n      isLoading: false,\n      selectedChannel: selectedValue,\n    });\n    if (nextProps.currentChannel !== currentChannel) {\n      this.syncData(nextProps.currentChannel);\n    }\n  }\n\n  toggle = () => {\n    const { isOpen } = this.state;\n    if (window.matchMedia(\"(max-width:1200px)\").matches) {\n      this.setState({\n        isOpen: !isOpen,\n      });\n    }\n  };\n\n  closeToggle = () => this.state.isOpen && this.toggle();\n\n  handleChange = async (selectedChannel) => {\n    if (this.state.channels.length > 1) {\n      const { getChangeChannel } = this.props;\n      clearInterval(this.interVal);\n      await this.handleOpen();\n      this.setState({ selectedChannel });\n      getChangeChannel(selectedChannel.value);\n      await this.syncData(selectedChannel.value);\n      this.interVal = setInterval(() => {\n        this.syncData(selectedChannel.value);\n      }, 60000);\n    }\n    //  this.handleClose();\n  };\n\n  handleOpen = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  registerOpen = () => {\n    this.setState(() => ({ registerOpen: true }));\n  };\n\n  registerClose = () => {\n    this.setState(() => ({ registerOpen: false }));\n  };\n\n  onRegister = () => {\n    this.registerClose();\n  };\n\n  logout = async () => {\n    const result = await this.props.logout();\n    if (result.status === \"Success\") {\n      window.location = \"/\";\n    }\n  };\n\n  /**enrollOpen = () => {\n\t\tthis.setState(() => ({ enrollOpen: true }));\n\t};\n\n\tenrollClose = () => {\n\t\tthis.setState(() => ({ enrollOpen: false }));\n\t};\n\n\tonEnroll = user => {\n\t\talert(JSON.stringify(user, null, 2));\n\t\tthis.enrollClose();\n\t}; */\n\n  handleDrawOpen = (drawer) => {\n    switch (drawer) {\n      case \"notifyDrawer\": {\n        this.setState({ notifyDrawer: !this.state.notifyDrawer });\n        this.setState({ notifyCount: 0 });\n        break;\n      }\n      case \"adminDrawer\": {\n        this.setState({ adminDrawer: true });\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  };\n\n  handleDrawClose = (drawer) => {\n    switch (drawer) {\n      case \"notifyDrawer\": {\n        this.setState({ notifyDrawer: false });\n        break;\n      }\n      case \"adminDrawer\": {\n        this.setState({ adminDrawer: false });\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  };\n\n  handleThemeChange = (mode) => {\n    const { refresh } = this.props;\n    refresh(mode === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  handleData(notification) {\n    // this.props.getNotification(notification);\n    const { notifications, notifyCount, currentChannel } = this.state;\n    const notifyArr = notifications;\n    notifyArr.unshift(JSON.parse(notification));\n    this.setState({ notifications: notifyArr });\n    this.setState({ notifyCount: notifyCount + 1 });\n    this.syncData(currentChannel);\n  }\n\n  async reloadChannels() {\n    const { getChannels } = this.props;\n    await getChannels();\n  }\n  \n  handleCheckClick = (e) => {\n    localStorage.setItem('modeType', !this.state.checked);            \n    this.setState({ checked: !this.state.checked },() => {    \n      Auth.deauthenticateUser();\n      setTimeout( window.location.reload(),1000);\n    });\n  }\n\n  async syncData(currentChannel) {\n    const {\n      getBlockList,\n      getBlocksPerHour,\n      getBlocksPerMin,\n      getChaincodeList,\n      getChannels,\n      getDashStats,\n      getPeerList,\n      getPeerStatus,\n      getTransactionByOrg,\n      getTransactionList,\n      getTransactionPerHour,\n      getTransactionPerMin,\n      // getBlockActivity,\n      getBlockActivityPage,\n    } = this.props;\n\n    await Promise.all([\n      getBlockList(currentChannel),\n      getBlocksPerHour(currentChannel),\n      getBlocksPerMin(currentChannel),\n      getChaincodeList(currentChannel),\n      getChannels(),\n      getDashStats(currentChannel),\n      // getBlockActivity(currentChannel),\n      getBlockActivityPage({\n        channels: currentChannel,\n        page: this.props.blockNotifications.page,\n      }),\n      getPeerList(currentChannel),\n      getPeerStatus(currentChannel),\n      getTransactionByOrg(currentChannel),\n      getTransactionList(currentChannel),\n      getTransactionPerHour(currentChannel),\n      getTransactionPerMin(currentChannel),\n    ]);\n    this.handleClose();\n  }\n\n\n  render() {\n    const { mode, classes, typeMode } = this.props;\n    const { hostname, port } = window.location;\n    const webSocketProtocol =\n      window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const webSocketUrl = `${webSocketProtocol}://${hostname}:${port}/`;\n    const dark = mode === \"dark\";\n    const {\n      isLoading,\n      selectedChannel,\n      channels,\n      notifyCount,\n      notifyDrawer,\n      adminDrawer,\n      modalOpen,\n      registerOpen,\n      notifications,\n    } = this.state;\n\n    const links = [\n      { to: \"/\", label: \"dashboard\", exact: true },\n      { to: \"/network\", label: \"network\" },\n      { to: \"/blocks\", label: \"blocks\" },\n      { to: \"/transactions\", label: \"transactions\" },\n      { to: \"/chaincodes\", label: \"chaincodes\" },\n      { to: \"/channels\", label: \"channels\" },\n      { to: \"/holders\", label: \"Holders\" },\n    ];\n\n    return (\n      <>\n        {/* production */}\n        {/* development */}\n        <Websocket\n          url={webSocketUrl}\n          onMessage={this.handleData.bind(this)}\n          reconnect\n        />\n        <Router>\n          <>\n          \n            <div\n              className={`${classes.header} header w-100 position-fixed`}\n              // onMouseLeave={this.closeToggle}\n            >\n              <Navbar className={classes.navbarHeader} expand=\"xl\">\n                {/* Logo */}\n                <NavbarBrand href=\"/\">\n                  <img\n                    src={dark ? LogoDark : LogoLight}\n                    className={classes.logo + ` logo`}\n                    alt=\"Integra Blockchain Explorer\"\n                  />\n                </NavbarBrand>\n                {/* Menu Mobile: Button */}\n                <NavbarToggler onClick={this.toggle}>\n                  <FontAwesome name=\"bars\" className={classes.toggleIcon} />\n                </NavbarToggler>\n                {/* Menu PC */}\n                <Collapse isOpen={this.state.isOpen} navbar>\n                  <Nav className={`ml-auto navbar-left ${classes.menu}`} navbar>\n                    {links.map(({ to, label, ...props }) => (\n                      <li key={to}>\n                        <NavLink\n                          to={to}\n                          className={classes.tab + ` tab`}\n                          activeClassName={classes.activeTab}\n                          onClick={this.toggle}\n                          {...props}\n                        >\n                          {label}\n                        </NavLink>\n                      </li>\n                    ))}\n                    {/* Button */}\n                    <label className=\"switch\">\n                        <input type=\"checkbox\" id=\"togBtn\" value=\"production\" checked={this.state.checked} onChange={this.handleCheckClick}/>\n                        <div className=\"slider round\">\n                          {/*ADDED HTML */}\n                          <span className=\"on\">Mainnet</span>\n                          <span className=\"off\">Testnet</span>\n                          {/*END*/}\n                        </div>\n                      </label>\n\n\n                    <div className={classes.buttonOther + ` buttonOther`}>\n                      <div className={classes.adminButton + ` adminButton`}>\n                        <Select\n                          className={classes.channel + ` select-channel`}\n                          placeholder=\"Select Channel...\"\n                          required\n                          name=\"form-field-name\"\n                          isLoading={isLoading}\n                          value={selectedChannel}\n                          onChange={this.handleChange}\n                          onFocus={this.reloadChannels.bind(this)}\n                          options={channels}\n                        />\n                      </div>\n                      {/* Notification */}\n                      <div\n                        id=\"notification\"\n                        className={classes.adminButton + ` adminButton`}\n                        onClick={() => this.handleDrawOpen(\"notifyDrawer\")}\n                      >\n                        <Badge badgeContent={notifyCount} color=\"error\">\n                          <SVG src={iBell} width={22} height={22} />\n                        </Badge>\n                      </div>\n                     \n                      {/*\n              //Use when Admin functionality is required\n              <div className={classes.adminButton}>\n                <FontAwesome\n                  name='cog'\n                  className='cog'\n                  onClick={() => this.handleDrawOpen('adminDrawer')}\n                />\n              </div> */}\n                      {/* Dark mode */}\n                      <div className={classes.adminButton + ` adminButton`}>\n                        <div onClick={() => this.handleThemeChange(mode)}>\n                          {dark ? (\n                            <SVG src={iSun} className={classes.sunIcon} />\n                          ) : (\n                            <SVG src={iMoon} className={classes.moonIcon} />\n                          )}\n                        </div>\n                      </div>\n                      {/* Register */}\n                      {/* <div className={classes.adminButton + ` adminButton`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.userInfo} onClick={() => this.registerOpen()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<SVG src={iRegister} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                      {/* @@@@@@@@@@@@@ Logout @@@@@@@@@@@@@@@ */}\n                      {/* <div className={classNames(classes.adminButton, \"adminButton\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.logout()} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<SVG src={iLogout} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                    </div>\n                  </Nav>\n                </Collapse>\n              </Navbar>\n            </div>\n            {/* Notification */}\n            <UncontrolledPopover\n              className=\"notification\"\n              trigger=\"legacy\"\n              placement=\"bottom\"\n              // isOpen={notifyDrawer}\n              target=\"notification\"\n              // onClose={() => this.handleDrawClose('notifyDrawer')}\n            >\n              <PopoverHeader>Notification</PopoverHeader>\n              <PopoverBody>\n                <NotificationsPanel notifications={notifications} />\n              </PopoverBody>\n            </UncontrolledPopover>\n            {/*  */}\n            <Drawer\n              anchor=\"right\"\n              open={adminDrawer}\n              onClose={() => this.handleDrawClose(\"adminDrawer\")}\n            >\n              <div tabIndex={0} role=\"button\">\n                <AdminPanel />\n              </div>\n            </Drawer>\n            {/* Register */}\n            <Dialog\n              open={registerOpen}\n              onClose={this.registerClose}\n              fullWidth={false}\n              maxWidth=\"md\"\n            >\n              <Register\n                onClose={this.registerClose}\n                onRegister={this.onRegister}\n              />\n            </Dialog>\n            {/*  */}\n            <Dialog\n              open={modalOpen}\n              onClose={this.handleClose}\n              fullWidth={false}\n              maxWidth=\"md\"\n            >\n              <div className={classes.channelLoader}>\n                <h4>Loading Channel Details</h4>\n                <Loader\n                  type=\"ThreeDots\"\n                  color=\"#005069\"\n                  height={70}\n                  width={70}\n                  className={classes.loader}\n                />\n              </div>\n            </Dialog>\n          </>\n        </Router>\n      </>\n    );\n  }\n}\n\nHeaderView.propTypes = {\n  currentChannel: currentChannelType.isRequired,\n  channels: channelsType.isRequired,\n  getBlockList: getBlockListType.isRequired,\n  getBlocksPerHour: getBlocksPerHourType.isRequired,\n  getBlocksPerMin: getBlocksPerMinType.isRequired,\n  getChangeChannel: getChangeChannelType.isRequired,\n  getChaincodeList: getChaincodeListType.isRequired,\n  getChannels: getChannelsType.isRequired,\n  getDashStats: getDashStatsType.isRequired,\n  getPeerList: getPeerListType.isRequired,\n  getPeerStatus: getPeerStatusType.isRequired,\n  getTransactionByOrg: getTransactionByOrgType.isRequired,\n  getTransactionPerHour: getTransactionPerHourType.isRequired,\n  getTransactionPerMin: getTransactionPerMinType.isRequired,\n  refresh: refreshType.isRequired,\n};\n\nconst { modeSelector, typeModeSelector } = themeSelectors;\n\nconst { changeModeType } = themeActions;\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    (state) => ({\n      currentChannel: currentChannelSelector(state),\n      channels: channelsSelector(state),\n      mode: modeSelector(state),\n\t    typeMode: typeModeSelector(state),\n      blockNotifications: blockNotificationsSelector(state),\n    }),\n    {\n      getBlockList: blockList,\n      getBlocksPerHour: blockPerHour,\n      getBlocksPerMin: blockPerMin,\n      getChaincodeList: chaincodeList,\n      getChangeChannel: changeChannel, // not in syncdata\n      getChannels: channels,\n      getDashStats: dashStats,\n      getPeerList: peerList,\n      getPeerStatus: peerStatus,\n      getBlockActivity: blockActivity,\n      getBlockActivityPage: chartOperations.blockNotificationsPage,\n      getTransactionByOrg: transactionByOrg,\n      getTransactionList: transactionList,\n      getTransactionPerHour: transactionPerHour,\n      getTransactionPerMin: transactionPerMin,\n      logout: authOperations.logout,\n\t    changeModeType: changeModeType,\n    }\n  )\n)(withRouter(HeaderView));\n","// SPDX-License-Identifier: Apache-2.0\nimport HeaderView from './HeaderView';\n\nexport default HeaderView;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// import clientJson from '../../../package.json';\n// import Version from '../../FabricVersion';\nimport LogoDark from \"../../static/images/Logo_dark.svg\";\nimport compose from \"recompose/compose\";\nimport { connect } from \"react-redux\";\nimport { themeSelectors } from \"../../state/redux/theme\";\n\nimport DiscordIcon from \"../../assets/icons/discord-icon.svg\";\nimport TelegramIcon from \"../../assets/icons/telegram-icon.svg\";\nimport TwitterIcon from \"../../assets/icons/twitter-icon.svg\";\nimport YoutubeIcon from \"../../assets/icons/youtube-icon.svg\";\n\nconst styles = (theme) => {\n  const { type } = theme.palette;\n  const dark = type === \"dark\";\n  return {\n    root: {\n      backgroundColor: dark ? \"#242729\" : \"#111111\",\n      color: \"#D9DBE1\",\n      fontSize: \"14px\",\n    },\n    footer: {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: \"18px 0.5rem\",\n      margin: \"auto\",\n      maxWidth: \"1380px\",\n    },\n  };\n};\n\nconst FooterView = ({ classes, mode: isDark }) => {\n  return (\n    <div className={`${classes.root} footer-container`}>\n      <div className={`${classes.footer} footer-content`}>\n        <div>\n          <img src={LogoDark} className={classes.logo} alt=\"\" />\n        </div>\n        <div className=\"copyright\">\n          Integra Blockchain Explorer. All rights reserved\n        </div>\n        <div className=\"social-icon-group\">\n          <a href=\"https://github.com/IntegraLedger\" target=\"_blank\">\n            <img src={DiscordIcon} />\n          </a>\n          <a href=\"mailto:mrinow@integraledger.com\" target=\"_blank\">\n            <img src={TelegramIcon} />\n          </a>\n          <a href=\"https://twitter.com/integraledger\" target=\"_blank\">\n            <img src={TwitterIcon} />\n          </a>\n\n          <a href=\"https://university.integraledger.com/\" target=\"_blank\">\n            <img src={YoutubeIcon} />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst { modeSelector } = themeSelectors;\nexport default compose(\n  withStyles(styles),\n  connect((state) => ({\n    mode: modeSelector(state),\n  }))\n)(FooterView);\n","// SPDX-License-Identifier: Apache-2.0\n\nimport FooterView from './FooterView';\n\nexport default FooterView;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LogoLight from '../../static/images/Logo_light.svg';\nimport LogoDark from '../../static/images/Logo_dark.svg';\nimport { chartOperations, chartSelectors } from '../../state/redux/charts';\nimport { tableOperations } from '../../state/redux/tables';\nimport {\n\tcurrentChannelType,\n\tgetBlockListType,\n\tgetBlocksPerHourType,\n\tgetBlocksPerMinType,\n\tgetChaincodeListType,\n\tgetChannelListType,\n\tgetChannelType,\n\tgetChannelsType,\n\tgetDashStatsType,\n\tgetPeerListType,\n\tgetPeerStatusType,\n\tgetTransactionByOrgType,\n\tgetTransactionListType,\n\tgetTransactionPerHourType,\n\tgetTransactionPerMinType\n} from '../types';\n\nconst {\n\tblockPerHour,\n\tblockPerMin,\n\tblockNotificationsPage,\n\tchannel,\n\tchannelList,\n\tdashStats,\n\tpeerStatus,\n\ttransactionByOrg,\n\ttransactionPerHour,\n\ttransactionPerMin\n} = chartOperations;\n\nconst { blockList, chaincodeList, channels, peerList, transactionList } =\n\ttableOperations;\n\nconst { currentChannelSelector, blockNotificationsSelector } = chartSelectors;\n\nconst styles = theme => {\n\treturn {\n\t\tcontent: {\n\t\t\twidth: 540,\n\t\t\tmargin: 'auto',\n\n\t\t\t'& > h1': {\n\t\t\t\tfontSize: '40pt'\n\t\t\t},\n\t\t\t'& > div': {\n\t\t\t\tmarginLeft: 150\n\t\t\t}\n\t\t}\n\t};\n\t/* eslint-enable */\n};\n\nexport class LandingPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsettings: {\n\t\t\t\tdots: false,\n\t\t\t\tinfinite: true,\n\t\t\t\tautoplay: true,\n\t\t\t\tautoplaySpeed: 2000,\n\t\t\t\tpauseOnHover: false,\n\t\t\t\taccessibility: false,\n\t\t\t\tspeed: 500,\n\t\t\t\tslidesToShow: 1,\n\t\t\t\tslidesToScroll: 1\n\t\t\t},\n\t\t\tlogoStyle: {\n\t\t\t\twidth: '520px',\n\t\t\t\theight: '100px'\n\t\t\t},\n\t\t\thasDbError: false\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst {\n\t\t\tgetBlockList,\n\t\t\tgetBlocksPerHour,\n\t\t\tgetBlocksPerMin,\n\t\t\tgetChaincodeList,\n\t\t\tgetChannel,\n\t\t\tgetChannelList,\n\t\t\tgetChannels,\n\t\t\tgetDashStats,\n\t\t\tgetPeerList,\n\t\t\tgetPeerStatus,\n\t\t\tgetBlockNotificationsPage,\n\t\t\tgetTransactionByOrg,\n\t\t\tgetTransactionList,\n\t\t\tgetTransactionPerHour,\n\t\t\tgetTransactionPerMin,\n\t\t\tupdateLoadStatus\n\t\t} = this.props;\n\t\tawait getChannel();\n\t\tconst { currentChannel, blockNotifications } = this.props;\n\n\t\tconst promiseTimeout = setTimeout(() => {\n\t\t\tthis.setState({ hasDbError: true });\n\t\t}, 60000);\n\n\t\tawait Promise.all([\n\t\t\tgetBlockList(currentChannel),\n\t\t\tgetBlocksPerHour(currentChannel),\n\t\t\tgetBlocksPerMin(currentChannel),\n\t\t\tgetChaincodeList(currentChannel),\n\t\t\tgetChannelList(currentChannel),\n\t\t\tgetChannels(),\n\t\t\tgetDashStats(currentChannel),\n\t\t\t// getPeerList(currentChannel),\n\t\t\t// getPeerStatus(currentChannel),\n\t\t\tgetBlockNotificationsPage({\n\t\t\t\tchannels: currentChannel,\n\t\t\t\t\n\t\t\t\tpage: blockNotifications.page || 1\n\t\t\t}),\n\t\t\tgetTransactionByOrg(currentChannel),\n\t\t\tgetTransactionList(currentChannel),\n\t\t\tgetTransactionPerHour(currentChannel),\n\t\t\tgetTransactionPerMin(currentChannel)\n\t\t]);\n\t\tnew Promise((resolve, reject) => { \n\t\t\tgetPeerList(currentChannel)\n\t\t\tgetPeerStatus(currentChannel)\n\t\t})\n\t\tclearTimeout(promiseTimeout);\n\t\tupdateLoadStatus();\n\t}\n\n\trender() {\n\t\tconst { hasDbError, logoStyle, settings } = this.state;\n\t\tif (hasDbError) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: '100vh',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\tPlease verify your network configuration, database configuration and\n\t\t\t\t\t\ttry again\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tconst { classes, isDark } = this.props;\n\t\treturn (\n\t\t\t<div className=\"loading-page\">\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={isDark ? LogoDark : LogoLight}\n\t\t\t\t\t\tstyle={logoStyle}\n\t\t\t\t\t\talt=\"Integra Logo\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Slider {...settings}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>ACCESSING THE NETWORK</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>CONNECTING TO CHANNEL</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>LOADING BLOCKS</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Slider>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLandingPage.propTypes = {\n\tcurrentChannel: currentChannelType,\n\tgetBlockList: getBlockListType.isRequired,\n\tgetBlocksPerHour: getBlocksPerHourType.isRequired,\n\tgetBlocksPerMin: getBlocksPerMinType.isRequired,\n\tgetChaincodeList: getChaincodeListType.isRequired,\n\tgetChannelList: getChannelListType.isRequired,\n\tgetChannel: getChannelType.isRequired,\n\tgetChannels: getChannelsType.isRequired,\n\tgetDashStats: getDashStatsType.isRequired,\n\tgetPeerList: getPeerListType.isRequired,\n\tgetPeerStatus: getPeerStatusType.isRequired,\n\tgetTransactionByOrg: getTransactionByOrgType.isRequired,\n\tgetTransactionList: getTransactionListType.isRequired,\n\tgetTransactionPerHour: getTransactionPerHourType.isRequired,\n\tgetTransactionPerMin: getTransactionPerMinType.isRequired\n};\n\nLandingPage.defaultProps = {\n\tcurrentChannel: null\n};\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tcurrentChannel: currentChannelSelector(state),\n\t\t\tblockNotifications: blockNotificationsSelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetBlockList: blockList,\n\t\t\tgetBlocksPerHour: blockPerHour,\n\t\t\tgetBlocksPerMin: blockPerMin,\n\t\t\tgetChaincodeList: chaincodeList,\n\t\t\tgetChannelList: channelList,\n\t\t\tgetChannel: channel,\n\t\t\tgetChannels: channels,\n\t\t\tgetDashStats: dashStats,\n\t\t\tgetPeerList: peerList,\n\t\t\tgetPeerStatus: peerStatus,\n\t\t\tgetBlockNotificationsPage: blockNotificationsPage,\n\t\t\tgetTransactionByOrg: transactionByOrg,\n\t\t\tgetTransactionList: transactionList,\n\t\t\tgetTransactionPerHour: transactionPerHour,\n\t\t\tgetTransactionPerMin: transactionPerMin\n\t\t}\n\t)\n)(LandingPage);\n","// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Alert } from 'reactstrap';\n\nconst styles = {\n\terror: {\n\t\tmarginTop: 50,\n\t\tmarginBottom: -95,\n\t\tpaddingTop: 30,\n\t\ttextAlign: 'center',\n\t\twidth: '100%'\n\t}\n};\n\nexport const ErrorMessage = ({ message, classes }) => (\n\t<div className={classes.error}>\n\t\t<Alert color=\"danger\">{message}</Alert>\n\t</div>\n);\n\nexport default withStyles(styles)(ErrorMessage);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from \"react\";\n\nimport compose from \"recompose/compose\";\nimport { connect } from \"react-redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport ListIcon from \"@material-ui/icons/List\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport { shape, string } from \"prop-types\";\n\nimport { authSelectors, authOperations } from \"../../state/redux/auth\";\nimport { AreaChart } from \"recharts\";\n\nconst APP_USER = process.env.REACT_APP_USER_NAME;\nconst APP_PASSWORD = process.env.REACT_APP_PASSWORD;\n\nconst styles = (theme) => ({\n  container: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  errortext: {\n    fontSize: 16,\n    font: \"bold\",\n    color: \"red\",\n  },\n});\n\nexport class Login extends Component {\n  static propTypes = {\n    classes: shape({\n      avatar: string,\n      form: string,\n      container: string,\n      paper: string,\n      submit: string,\n    }).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    const { networks = [] } = props;\n    this.state = {\n      info: null,\n      user: {\n        error: null,\n        value: \"\",\n      },\n      password: {\n        error: null,\n        value: \"\",\n      },\n      network: {\n        error: null,\n        value: \"\",\n      },\n      autoLoginAttempted: false,\n      error: \"\",\n      networks,\n      authEnabled: false,\n      isLoading: false,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { networks = [] } = nextProps;\n    // Auto login\n    networks[0]?.name &&\n      this.performLogin({\n        user: APP_USER,\n        password: APP_PASSWORD,\n        network: networks[0]?.name,\n      });\n    //\n    this.setState(() => ({\n      networks,\n      network: {\n        error: null,\n        value: networks[0]?.name || \"\",\n      },\n      authEnabled: networks[0]?.authEnabled,\n    }));\n  }\n\n  handleChange = (event) => {\n    const { target } = event;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = target;\n\n    const newState = {\n      [name]: { value },\n    };\n    if (name === \"network\") {\n      const { networks } = this.state;\n      newState.authEnabled = (\n        networks.find((n) => n.name === value) || {}\n      ).authEnabled;\n    }\n\n    this.setState(newState);\n  };\n\n  async performLogin({ user, password, network }) {\n    const { login } = this.props;\n    const { authEnabled } = this.state;\n\n    console.log(\"user password used \",user , password)\n\n    console.log(authEnabled);\n    if (authEnabled){\n      console.log(\"auth enabled creds\")\n      console.log(\"user password used \",user , password)\n    }\n    const info = await login(\n      {\n        user: \"integra-admin\", // authEnabled ? user : \"admin\",\n        password: \"integra\" //authEnabled ? password : \"HogLov*1904\",\n      },\n      network\n    );\n\n    this.setState(() => ({ info }));\n    if (info.status === \"Success\") {\n      const { history } = this.props;\n      let newUrl = \"/\";\n\n      let redirectUrl = localStorage.getItem(\"redirectURL\");\n      if (redirectUrl) {\n        //Remove domain from URL\n        const urlString = redirectUrl;\n        let newURL = urlString.replace(\"#/\", \"\");\n        const url = new URL(newURL);\n\n        newUrl = url.pathname + url.search;\n\n        if (url.pathname == \"/login\") {\n          newUrl = \"/\";\n        }\n      }\n\n      history.push(newUrl);\n      return true;\n    }\n  }\n\n  submitForm = async (e) => {\n    e.preventDefault();\n\n    const { user, password, network } = this.state;\n\n    await this.performLogin({\n      user: APP_USER,\n      password: APP_PASSWORD,\n      network: network.value,\n    });\n  };\n\n  async componentDidUpdate() {\n    const { networks, autoLoginAttempted } = this.state;\n\n    // If we have only one network and it doesn't have auth enabled, perform a login\n    // autoLoginAttempted is a safety to prevent multiple tries\n    if (\n      networks.length === 1 &&\n      !networks[0].authEnabled &&\n      !autoLoginAttempted\n    ) {\n      this.setState(() => ({\n        autoLoginAttempted: true,\n      }));\n      await this.performLogin({ network: networks[0].name });\n    }\n  }\n\n  render() {\n    const { info, user, password, network, networks, authEnabled, isLoading } =\n      this.state;\n    const { classes, error } = this.props;\n    const modeLogin = false;\n    return <div></div>;\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h5\" variant=\"headline\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={this.submitForm}>\n            <FormControl margin=\"normal\" required fullWidth>\n              <TextField\n                required\n                fullWidth\n                select\n                id=\"network\"\n                name=\"network\"\n                label=\"Network\"\n                disabled={isLoading}\n                value={network.value}\n                onChange={(e) => this.handleChange(e)}\n                margin=\"normal\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <ListIcon />\n                    </InputAdornment>\n                  ),\n                  shrink: \"true\",\n                }}\n              >\n                {networks.map((item) => (\n                  <MenuItem key={item.name} value={item.name}>\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              {network.error && (\n                <FormHelperText id=\"component-error-text\" error>\n                  {network.error}\n                </FormHelperText>\n              )}\n            </FormControl>\n            {modeLogin && (\n              <FormControl margin=\"normal\" required fullWidth>\n                <TextField\n                  error={!!user.error}\n                  required\n                  fullWidth\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"User\"\n                  disabled={isLoading}\n                  value={user.value}\n                  onChange={(e) => this.handleChange(e)}\n                  margin=\"normal\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PersonIcon />\n                      </InputAdornment>\n                    ),\n                    shrink: \"true\",\n                  }}\n                />\n                {user.error && (\n                  <FormHelperText id=\"component-error-text\" error>\n                    {user.error}\n                  </FormHelperText>\n                )}\n              </FormControl>\n            )}\n            {modeLogin && (\n              <FormControl margin=\"normal\" required fullWidth>\n                <TextField\n                  required\n                  fullWidth\n                  error={!!password.error}\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  disabled={isLoading}\n                  value={password.value}\n                  onChange={(e) => this.handleChange(e)}\n                  margin=\"normal\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockOutlinedIcon />\n                      </InputAdornment>\n                    ),\n                    shrink: \"true\",\n                  }}\n                />\n                {password.error && (\n                  <FormHelperText id=\"component-error-text\" error>\n                    {password.error}\n                  </FormHelperText>\n                )}\n              </FormControl>\n            )}\n            {error && (\n              <FormHelperText id=\"component-error-text\" error>\n                {error}\n              </FormHelperText>\n            )}\n            {info && (\n              <FormHelperText\n                id=\"component-error-text\"\n                className={classes.errortext}\n              >\n                {info.message}\n              </FormHelperText>\n            )}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {modeLogin ? \"Sign in\" : \"Connect\"}\n            </Button>\n          </form>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nconst { authSelector, errorSelector, networkSelector } = authSelectors;\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    (state) => ({\n      auth: authSelector(state),\n      error: errorSelector(state),\n      networks: networkSelector(state),\n    }),\n    {\n      login: authOperations.login,\n    }\n  )\n)(Login);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport Login from './Login';\n\nexport default Login;\n","import React, { Component } from 'react';\nimport LogoLight from '../../static/images/Logo_light.svg';\nimport LogoDark from '../../static/images/Logo_dark.svg';\n\nexport class HeaderPublic extends Component {\n\trender() {\n\t\tconst { mode } = this.props;\n\t\tconst dark = mode === 'dark';\n\n\t\treturn (\n\t\t\t<div className={`header-public w-100 position-fixed`}>\n\t\t\t\t<a href={window.location.origin}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={dark ? LogoDark : LogoLight}\n\t\t\t\t\t\tclassName={`logo`}\n\t\t\t\t\t\talt=\"Integra Blockchain Explorer\"\n\t\t\t\t\t/>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HeaderPublic;\n","// SPDX-License-Identifier: Apache-2.0\nimport HeaderPublic from './HeaderPublic';\n\nexport default HeaderPublic;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport HeaderPublic from '../HeaderPublic';\nimport Footer from '../Footer';\nimport { authSelectors, authOperations } from '../../state/redux/auth';\nimport { Col, Row } from 'reactstrap';\nimport moment from 'moment';\nimport iCopy from './../../static/icon/copy.svg';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nmoment.locale('de');\n\nconst { authSelector } = authSelectors;\nexport class BlockDetail extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst blockHash = this.props.match.params.id;\n\t\tthis.props.getDetail(blockHash).then(res => {\n\t\t\tif (res?.row?.length > 0) {\n\t\t\t\tthis.setState(res.row[0]);\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tconst row = this.state;\n\t\tconst { auth } = this.props;\n\n\t\tif (!row) return <></>;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{!auth && <HeaderPublic />}\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"detail-box\">\n\t\t\t\t\t\t<div className=\"box-title\">\n\t\t\t\t\t\t\tBlock<span>#{row.blocknum}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"box-title-sub\">Overview</div>\n\t\t\t\t\t\t<div className=\"box-table\">\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t\t\t\tChannel Name:\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"cell\">{row.channelname}</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t\t\t\tBlock Number:\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"cell\">{row.blocknum}</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t\t\t\tCreated at:\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"cell\">\n\t\t\t\t\t\t\t\t\t{moment(row.createdt)\n\t\t\t\t\t\t\t\t\t\t.tz(Intl.DateTimeFormat().resolvedOptions().timeZone)\n\t\t\t\t\t\t\t\t\t\t.format('DD/MM/YYYY - hh:mm:ss')}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t\t\t\tNumber of Transactions:\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"cell\">{row.txcount}</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t\t\t\tBlock Hash\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"cell\">\n\t\t\t\t\t\t\t\t\t<div className=\"text\">{row.blockhash}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"btn-copy\">\n\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={row.blockhash}>\n\t\t\t\t\t\t\t\t\t\t\t<img src={iCopy} alt=\"copy\" />\n\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t\t\t\tData Hash\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"cell\">\n\t\t\t\t\t\t\t\t\t<div className=\"text\">{row.datahash}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"btn-copy\">\n\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={row.datahash}>\n\t\t\t\t\t\t\t\t\t\t\t<img src={iCopy} alt=\"copy\" />\n\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t\t\t\tPre Hash\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"cell\">\n\t\t\t\t\t\t\t\t\t<div className=\"text\">{row.prehash}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"btn-copy\">\n\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={row.prehash}>\n\t\t\t\t\t\t\t\t\t\t\t<img src={iCopy} alt=\"copy\" />\n\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{!auth && <Footer />}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose(\n\tconnect(\n\t\tstate => ({\n\t\t\tauth: authSelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetDetail: authOperations.blockDetail\n\t\t}\n\t)\n)(BlockDetail);\n","import BlockDetail from './BlockDetail';\n\nexport default BlockDetail;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport HeaderPublic from '../HeaderPublic';\nimport Footer from '../Footer';\nimport JSONTree from 'react-json-tree';\nimport { authSelectors, authOperations } from '../../state/redux/auth';\nimport { Col, Row } from 'reactstrap';\nimport moment from 'moment';\nimport iCopy from './../../static/icon/copy.svg';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { checkEmbedRoute } from \"./../../helpers/checkEmbedRoute\";\n\nmoment.locale('de');\nconst jsonTheme = {\n\tbase00: '#ffffff00',\n\tbase01: '#2e2f30',\n\tbase02: '#515253',\n\tbase03: '#737475',\n\tbase04: '#959697',\n\tbase05: '#b7b8b9',\n\tbase06: '#dadbdc',\n\tbase07: '#fcfdfe',\n\tbase08: '#e31a1c',\n\tbase09: '#e6550d',\n\tbase0A: '#dca060',\n\tbase0B: '#31a354',\n\tbase0C: '#80b1d3',\n\tbase0D: '#3182bd',\n\tbase0E: '#756bb1',\n\tbase0F: '#b15928'\n};\n\nconst { authSelector } = authSelectors;\nexport class TransactionDetail extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisHeaderVisible: true,\n\t\t  };\n\t}\n\n\tcomponentDidMount() {\n\t\tconst txHash = this.props.match.params.id;\n\t\tthis.props.getDetailTransaction(txHash).then(res => {\n\t\t\tif (res?.row) {\n\t\t\t\tthis.setState(res.row);\n\t\t\t}\n\t\t});\n\n\t\tconst isEmbeded = checkEmbedRoute();\n\t\tif (isEmbeded === 'true') { \n\t\t  this.setState({ isHeaderVisible: false });\n\t\t}\n\n\t}\n\n\trenderListItem = row => {\n\t\tconst elements = [];\n\t\tconst mapping = {\n\t\t\ttxhash: {\n\t\t\t\tname: 'Transaction ID',\n\t\t\t\trender: v => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"text\">{v}</div>\n\t\t\t\t\t\t\t<div className=\"btn-copy\">\n\t\t\t\t\t\t\t\t<CopyToClipboard text={v}>\n\t\t\t\t\t\t\t\t\t<img src={iCopy} alt=\"copy\" />\n\t\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tblockid: 'Block',\n\t\t\tid: 'IntegraID',\n\t\t\tchannelname: 'Channel Name',\n\t\t\tvalidation_code: 'Validation Code',\n\t\t\tpayload_proposal_hash: 'Payload Proposal Hash',\n\t\t\tcreator_msp_id: 'Creator MSP',\n\t\t\tendorser_msp_id: 'Endorser',\n\t\t\tchaincodename: 'Chaincode Name',\n\t\t\ttype: 'Type',\n\t\t\tcreatedt: {\n\t\t\t\tname: 'Time',\n\t\t\t\trender: v => {\n\t\t\t\t\treturn moment(v)\n\t\t\t\t\t\t.tz(Intl.DateTimeFormat().resolvedOptions().timeZone)\n\t\t\t\t\t\t.format('DD/MM/YYYY - hh:mm:ss');\n\t\t\t\t}\n\t\t\t},\n\t\t\tread_set: {\n\t\t\t\tname: 'Reads',\n\t\t\t\trender: v => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"font-weight-normal\">\n\t\t\t\t\t\t\t<JSONTree data={v} theme={jsonTheme} invertTheme={false} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\twrite_set: {\n\t\t\t\tname: 'Writes',\n\t\t\t\trender: v => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"font-weight-normal\">\n\t\t\t\t\t\t\t<JSONTree data={v} theme={jsonTheme} invertTheme={false} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Render item\n\t\tfor (const key in mapping) {\n\t\t\tconst value = row[key];\n\t\t\tconst isObject = typeof mapping[key] === 'object';\n\t\t\t// Push\n\t\t\telements.push(\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"cell\" md={3} xs={5}>\n\t\t\t\t\t\t{isObject ? mapping[key].name : mapping[key]}:\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"cell\">\n\t\t\t\t\t\t{isObject ? mapping[key].render(value) : value}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t}\n\t\treturn elements;\n\t};\n\n\trender() {\n\t\tconst row = this.state;\n\t\tconst { auth } = this.props;\n\n\t\tif (!row) return <></>;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{!auth && this.state.isHeaderVisible && <HeaderPublic />}\n\t\t\t\t<div className={this.state.isHeaderVisible ? 'isHeaderVisible' : 'isHeaderhide'}>\n\t\t\t\t\t<div className=\"detail-box\">\n\t\t\t\t\t\t<div className=\"box-title\">Transaction Details</div>\n\t\t\t\t\t\t<div className=\"box-title-sub\">Overview</div>\n\t\t\t\t\t\t<div className=\"box-table\">{this.renderListItem(row)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{!auth && this.state.isHeaderVisible && <Footer />}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose(\n\tconnect(\n\t\tstate => ({\n\t\t\tauth: authSelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetDetailTransaction: authOperations.transactionDetail\n\t\t}\n\t)\n)(TransactionDetail);\n","import TransactionDetail from './TransactionDetail';\n\nexport default TransactionDetail;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from \"react\";\nimport compose from \"recompose/compose\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Main from \"../Main\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport LandingPage from \"../View/LandingPage\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport { chartSelectors } from \"../../state/redux/charts\";\nimport { themeSelectors, themeActions } from \"../../state/redux/theme\";\nimport { authSelectors } from \"../../state/redux/auth\";\nimport { checkEmbedRoute } from \"./../../helpers/checkEmbedRoute\";\n\nimport Login from \"../Login\";\nimport BlockDetail from \"../BlockDetail\";\n\nimport Private from \"../Route\";\nimport TransactionDetail from \"../TransactionDetail\";\n\n/* istanbul ignore next */\nconst styles = (theme) => {\n  return {\n    app: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      \"& ol, & ul\": {\n        listStyle: \"none\",\n      },\n    },\n  };\n};\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isHeaderVisible: true,\n    };\n  }\n\n  componentDidMount() {\n    const isEmbeded = checkEmbedRoute();\n    if (isEmbeded === 'true') { \n      this.setState({ isHeaderVisible: false });\n    }\n  }\n\n  /* istanbul ignore next */\n  updateLoadStatus = () => {\n    this.setState({ loading: false });\n  };\n\n  /* istanbul ignore next */\n  refreshComponent = (mode) => {\n    this.props.changeTheme(mode);\n  };\n\n  /* istanbul ignore next */\n  render() {\n    const { auth, mode, error } = this.props;\n    const { loading, isHeaderVisible } = this.state;\n    // Set theme\n    document.querySelector(\"html\").setAttribute(\"theme\", mode);\n    // Check authentication\n    if (auth && loading && isHeaderVisible) {\n      return (\n        <LandingPage\n          updateLoadStatus={this.updateLoadStatus}\n          isDark={mode === \"dark\"}\n        />\n      );\n    }\n\n    return (\n      <>\n      <Router>\n        {auth && isHeaderVisible && <Header refresh={this.refreshComponent} />}\n        {error && <ErrorMessage message={error} />}\n        \n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(routeprops) => <Login {...routeprops} />}\n            />\n            <Route\n              exact\n              path=\"/block/:id\"\n              render={(routeprops) => <BlockDetail {...routeprops} />}\n            />\n            <Route\n              exact\n              path=\"/tx/:id\"\n              render={(routeprops) => <TransactionDetail {...routeprops} />}\n            />\n            <Private\n              path=\"/\"\n              render={(routeprops) => <Main {...routeprops} />}\n            />\n          </Switch>\n        </Router>\n        {auth && isHeaderVisible && <Footer />}\n      </>\n    );\n  }\n}\n\nconst { modeSelector } = themeSelectors;\nconst { changeTheme } = themeActions;\nconst { errorMessageSelector } = chartSelectors;\nconst { authSelector } = authSelectors;\n\n/* istanbul ignore next */\nexport default compose(\n  withStyles(styles),\n  connect(\n    (state) => ({\n      error: errorMessageSelector(state),\n      mode: modeSelector(state),\n      auth: authSelector(state),\n    }),\n    { changeTheme }\n  )\n)(App);\n","//SPDX-License-Identifier: Apache-2.0\n\nimport App from './App';\n\nexport default App;\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n/* eslint-disable */\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n/* eslint-enable */\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (!isLocalhost) {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t} else {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport createStore from './state/store';\nimport authOperations from './state/redux/auth/operations';\nimport Theme from './components/Theme';\nimport App from './components/App';\nimport { unregister } from './registerServiceWorker';\nimport './static/scss/index.scss';\nconst mode = localStorage.getItem('theme-mode') || 'light';\nconst store = createStore({ theme: { mode } });\n\nstore.subscribe(themeSideEffect(store));\n\nfunction themeSideEffect(store) {\n\n    const currentURL = window.location.href\n    localStorage.setItem('redirectURL',currentURL)\n\tlet theme;\n\treturn () => {\n\t\tconst state = store.getState();\n\t\tif (theme !== state.theme) {\n\t\t\ttheme = state.theme;\n\t\t\tlocalStorage.setItem('theme-mode', theme.mode);\n\t\t}\n\t};\n}\n\nstore.dispatch(authOperations.network());\n\nunregister();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Theme>\n\t\t\t<App />\n\t\t</Theme>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n","/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport * as reducers from './redux';\nimport Auth from './Auth';\n\nexport default function configureStore(initialState) {\n\tconst token = Auth.getToken();\n\tconst rootReducer = combineReducers(reducers);\n\n\treturn createStore(\n\t\trootReducer,\n\t\t{ ...initialState, auth: { token } },\n\t\tapplyMiddleware(thunkMiddleware)\n\t);\n}\n"],"sourceRoot":""}